var searchIndex = {};
searchIndex['xiapi'] = {"items":[[0,"","xiapi","",null,null],[0,"constants","","",null,null],[4,"ModelID","xiapi::constants","",null,null],[13,"UNKNOWN","","",0,null],[13,"MR274CU_BH","","",0,null],[13,"MR16000MU","","",0,null],[13,"MR282CC_BH","","",0,null],[13,"MR274MU_BH","","",0,null],[13,"MR456CU_BH","","",0,null],[13,"MR252CC_BH","","",0,null],[13,"MR4021MU_BH","","",0,null],[13,"MR4022MU_BH","","",0,null],[13,"MR655CU_BH","","",0,null],[13,"MR11002M","","",0,null],[13,"MR4021CU_BH","","",0,null],[13,"MR655MU_BH","","",0,null],[13,"MR282CU_BH","","",0,null],[13,"MR252CU_BH","","",0,null],[13,"MR285MU_BH","","",0,null],[13,"MR285CU_BH","","",0,null],[13,"MR285MC_BH","","",0,null],[13,"MR285CC_BH","","",0,null],[13,"MH160MC_KK_FA","","",0,null],[13,"MU9PC_BH","","",0,null],[13,"MR11002C","","",0,null],[13,"MU9PM_MH","","",0,null],[13,"MU9PC_MH","","",0,null],[13,"MU9PM_BH","","",0,null],[13,"CURRERA_RS04","","",0,null],[13,"CURRERA_RL04","","",0,null],[13,"CURRERA_RS04C","","",0,null],[13,"CURRERA_RL04C","","",0,null],[13,"CURRERA_RS13","","",0,null],[13,"CURRERA_RL13","","",0,null],[13,"CURRERA_RS13C","","",0,null],[13,"CURRERA_RL13C","","",0,null],[13,"CURRERA_RS50","","",0,null],[13,"CURRERA_RL50","","",0,null],[13,"CURRERA_RS50C","","",0,null],[13,"MQ013CG_E2","","",0,null],[13,"MQ013MG_E2","","",0,null],[13,"MQ003CG_CM","","",0,null],[13,"MQ003MG_CM","","",0,null],[13,"MQ022CG_CM","","",0,null],[13,"MQ022MG_CM","","",0,null],[13,"MQ042CG_CM","","",0,null],[13,"MQ042MG_CM","","",0,null],[13,"MQ022MG_CM_SR2","","",0,null],[13,"MQ042CG_CM_TG","","",0,null],[13,"MQ042MG_CM_TG","","",0,null],[13,"MQ_USB3LINK","","",0,null],[13,"MU9PC_SLC5","","",0,null],[13,"MQ022CG_CM_TS","","",0,null],[13,"MQ022MG_CM_TS","","",0,null],[13,"MQ042CG_CM_TS","","",0,null],[13,"MQ042MG_CM_TS","","",0,null],[13,"MQ013CG_ONV","","",0,null],[13,"MQ013MG_ONV","","",0,null],[13,"MQ013RG_E2","","",0,null],[13,"MQ042RG_CM","","",0,null],[13,"CURRERA_RL50C","","",0,null],[13,"MR11002XC_ICW","","",0,null],[13,"MQ020CG_E2","","",0,null],[13,"MQ020MG_E2","","",0,null],[13,"MQ022RG_CM","","",0,null],[13,"MR285CC_DP","","",0,null],[13,"MR285MC_DP","","",0,null],[13,"MR252CU_BRD","","",0,null],[13,"MH110MC_KK_FA","","",0,null],[13,"MR282CU_BRD","","",0,null],[13,"MR282CC_DP","","",0,null],[13,"MR285MU_BH_IRE","","",0,null],[13,"MR285MC_DP_IRE","","",0,null],[13,"MH110XC_KK_FA","","",0,null],[13,"MH160XC_KK_FA","","",0,null],[13,"MR252CC_DP","","",0,null],[13,"MR285MC_BH_IRE","","",0,null],[13,"MR456CC_BH","","",0,null],[13,"MR282CU_DP","","",0,null],[13,"MQ022HG_IM_ST32_600_1000","","",0,null],[13,"MR282CC_BRD","","",0,null],[13,"MR252CC_BRD","","",0,null],[13,"MQ022HG_IM_SM4X4_470_620","","",0,null],[13,"MR252CU_DP","","",0,null],[13,"MR285MU_BRD","","",0,null],[13,"MR285CU_BRD","","",0,null],[13,"MR285MC_BRD","","",0,null],[13,"MR285CC_BRD","","",0,null],[13,"MR285CC_DP_IRE","","",0,null],[13,"MR285CC_BH_IRE","","",0,null],[13,"MR285CU_BH_IRE","","",0,null],[13,"MX11002","","",0,null],[13,"MH110CC_KK_FA","","",0,null],[13,"MR16000CU","","",0,null],[13,"MH160CC_KK_FA","","",0,null],[13,"MR4022MC_VELETA","","",0,null],[13,"MR4021MC_VELETA","","",0,null],[13,"MU9JC_BH","","",0,null],[13,"MU9JM_BH","","",0,null],[13,"MQ022HG_IM_LS100_600_1000","","",0,null],[13,"MD028CC_SY","","",0,null],[13,"MD061CC_SY","","",0,null],[13,"MD091CC_SY","","",0,null],[13,"MD028MC_SY","","",0,null],[13,"MD061MC_SY","","",0,null],[13,"MD091MC_SY","","",0,null],[13,"MD028CU_SY","","",0,null],[13,"MD061CU_SY","","",0,null],[13,"MD091CU_SY","","",0,null],[13,"MD028MU_SY","","",0,null],[13,"MD061MU_SY","","",0,null],[13,"MD091MU_SY","","",0,null],[13,"CB200CG_CM","","",0,null],[13,"CB200MG_CM","","",0,null],[13,"MD120CC_SY","","",0,null],[13,"MD120MC_SY","","",0,null],[13,"MD120CU_SY","","",0,null],[13,"MD120MU_SY","","",0,null],[13,"MQ022HG_IM_UN","","",0,null],[13,"CAL_Simulator","","",0,null],[13,"MQ022HG_IM_LS150_470_900","","",0,null],[13,"MQ022HG_IM_SM5X5_600_1000","","",0,null],[13,"MQ022HG_IM_SM4X4_600_900","","",0,null],[13,"MQ022MG_CM_BARE_BRD","","",0,null],[13,"MQ042MG_CM_BARE_BRD","","",0,null],[13,"MT023CG_SY","","",0,null],[13,"MT023MG_SY","","",0,null],[13,"MT200CG_CM","","",0,null],[13,"MT200MG_CM","","",0,null],[13,"CB120CG_CM","","",0,null],[13,"CB120MG_CM","","",0,null],[13,"MT003CG_LX","","",0,null],[13,"MT003MG_LX","","",0,null],[13,"MQ013CG_ON","","",0,null],[13,"MQ013MG_ON","","",0,null],[4,"GenTLImageFormat","","",null,null],[13,"Mono8","","",1,null],[13,"BGRA8Packed","","",1,null],[13,"RGB8Planar","","",1,null],[13,"BayerRG8","","",1,null],[13,"Mono10","","",1,null],[13,"Mono12","","",1,null],[13,"Mono14","","",1,null],[13,"BayerRG10","","",1,null],[13,"BayerRG12","","",1,null],[13,"BayerGR8","","",1,null],[13,"BayerGB8","","",1,null],[13,"BayerGR10","","",1,null],[13,"BayerGB10","","",1,null],[13,"BayerGR12","","",1,null],[13,"BayerBG8","","",1,null],[13,"BayerBG10","","",1,null],[13,"BayerBG12","","",1,null],[13,"BayerGB12","","",1,null],[13,"RGB8","","",1,null],[13,"BGR8","","",1,null],[13,"BayerRG14","","",1,null],[13,"BayerGR14","","",1,null],[13,"BayerBG14","","",1,null],[13,"BayerGB14","","",1,null],[13,"BayerBG10p","","",1,null],[13,"BayerGB10p","","",1,null],[13,"BayerGR10p","","",1,null],[13,"BayerRG10p","","",1,null],[13,"Mono10p","","",1,null],[13,"BayerBG12p","","",1,null],[13,"BayerGB12p","","",1,null],[13,"BayerGR12p","","",1,null],[13,"BayerRG12p","","",1,null],[13,"Mono12p","","",1,null],[13,"BayerBG14p","","",1,null],[13,"BayerGB14p","","",1,null],[13,"BayerGR14p","","",1,null],[13,"BayerRG14p","","",1,null],[13,"Mono14p","","",1,null],[13,"xiBayerBG10g160","","",1,null],[13,"xiBayerGB10g160","","",1,null],[13,"xiBayerGR10g160","","",1,null],[13,"xiBayerRG10g160","","",1,null],[13,"xiMono10g160","","",1,null],[13,"xiBayerBG12g192","","",1,null],[13,"xiBayerGB12g192","","",1,null],[13,"xiBayerGR12g192","","",1,null],[13,"xiBayerRG12g192","","",1,null],[13,"xiMono12g192","","",1,null],[13,"xiBayerBG14g224","","",1,null],[13,"xiBayerGB14g224","","",1,null],[13,"xiBayerGR14g224","","",1,null],[13,"xiBayerRG14g224","","",1,null],[13,"xiMono14g224","","",1,null],[13,"xiMono8TS01","","",1,null],[13,"xiMono10TS01","","",1,null],[13,"xiMono12TS01","","",1,null],[13,"xiMono14TS01","","",1,null],[13,"xiBayerRG8TS01","","",1,null],[13,"xiBayerRG10TS01","","",1,null],[13,"xiBayerRG12TS01","","",1,null],[13,"xiBayerRG14TS01","","",1,null],[13,"xiBayerBG8TS01","","",1,null],[13,"xiBayerBG10TS01","","",1,null],[13,"xiBayerBG12TS01","","",1,null],[13,"xiBayerBG14TS01","","",1,null],[13,"xiBayerGB8TS01","","",1,null],[13,"xiBayerGB10TS01","","",1,null],[13,"xiBayerGB12TS01","","",1,null],[13,"xiBayerGB14TS01","","",1,null],[13,"xiBayerGR8TS01","","",1,null],[13,"xiBayerGR10TS01","","",1,null],[13,"xiBayerGR12TS01","","",1,null],[13,"xiBayerGR14TS01","","",1,null],[13,"xiMono8TS03","","",1,null],[13,"xiMono10TS03","","",1,null],[13,"xiMono12TS03","","",1,null],[13,"xiMono14TS03","","",1,null],[13,"xiBayerRG8TS03","","",1,null],[13,"xiBayerRG10TS03","","",1,null],[13,"xiBayerRG12TS03","","",1,null],[13,"xiBayerRG14TS03","","",1,null],[13,"xiBayerBG8TS03","","",1,null],[13,"xiBayerBG10TS03","","",1,null],[13,"xiBayerBG12TS03","","",1,null],[13,"xiBayerBG14TS03","","",1,null],[13,"xiBayerGB8TS03","","",1,null],[13,"xiBayerGB10TS03","","",1,null],[13,"xiBayerGB12TS03","","",1,null],[13,"xiBayerGB14TS03","","",1,null],[13,"xiBayerGR8TS03","","",1,null],[13,"xiBayerGR10TS03","","",1,null],[13,"xiBayerGR12TS03","","",1,null],[13,"xiBayerGR14TS03","","",1,null],[4,"xiReturn","","",null,null],[13,"OK","","",2,null],[13,"INVALID_HANDLE","","",2,null],[13,"READREG","","",2,null],[13,"WRITEREG","","",2,null],[13,"FREE_RESOURCES","","",2,null],[13,"FREE_CHANNEL","","",2,null],[13,"FREE_BANDWIDTH","","",2,null],[13,"READBLK","","",2,null],[13,"WRITEBLK","","",2,null],[13,"NO_IMAGE","","",2,null],[13,"TIMEOUT","","",2,null],[13,"INVALID_ARG","","",2,null],[13,"NOT_SUPPORTED","","",2,null],[13,"ISOCH_ATTACH_BUFFERS","","",2,null],[13,"GET_OVERLAPPED_RESULT","","",2,null],[13,"MEMORY_ALLOCATION","","",2,null],[13,"DLLCONTEXTISNULL","","",2,null],[13,"DLLCONTEXTISNONZERO","","",2,null],[13,"DLLCONTEXTEXIST","","",2,null],[13,"TOOMANYDEVICES","","",2,null],[13,"ERRORCAMCONTEXT","","",2,null],[13,"UNKNOWN_HARDWARE","","",2,null],[13,"INVALID_TM_FILE","","",2,null],[13,"INVALID_TM_TAG","","",2,null],[13,"INCOMPLETE_TM","","",2,null],[13,"BUS_RESET_FAILED","","",2,null],[13,"NOT_IMPLEMENTED","","",2,null],[13,"SHADING_TOOBRIGHT","","",2,null],[13,"SHADING_TOODARK","","",2,null],[13,"TOO_LOW_GAIN","","",2,null],[13,"INVALID_BPL","","",2,null],[13,"BPL_REALLOC","","",2,null],[13,"INVALID_PIXEL_LIST","","",2,null],[13,"INVALID_FFS","","",2,null],[13,"INVALID_PROFILE","","",2,null],[13,"INVALID_CALIBRATION","","",2,null],[13,"INVALID_BUFFER","","",2,null],[13,"INVALID_DATA","","",2,null],[13,"TGBUSY","","",2,null],[13,"IO_WRONG","","",2,null],[13,"ACQUISITION_ALREADY_UP","","",2,null],[13,"OLD_DRIVER_VERSION","","",2,null],[13,"GET_LAST_ERROR","","",2,null],[13,"CANT_PROCESS","","",2,null],[13,"ACQUISITION_STOPED","","",2,null],[13,"ACQUISITION_STOPED_WERR","","",2,null],[13,"INVALID_INPUT_ICC_PROFILE","","",2,null],[13,"INVALID_OUTPUT_ICC_PROFILE","","",2,null],[13,"DEVICE_NOT_READY","","",2,null],[13,"SHADING_TOOCONTRAST","","",2,null],[13,"ALREADY_INITIALIZED","","",2,null],[13,"NOT_ENOUGH_PRIVILEGES","","",2,null],[13,"NOT_COMPATIBLE_DRIVER","","",2,null],[13,"TM_INVALID_RESOURCE","","",2,null],[13,"DEVICE_HAS_BEEN_RESETED","","",2,null],[13,"NO_DEVICES_FOUND","","",2,null],[13,"RESOURCE_OR_FUNCTION_LOCKED","","",2,null],[13,"BUFFER_SIZE_TOO_SMALL","","",2,null],[13,"COULDNT_INIT_PROCESSOR","","",2,null],[13,"NOT_INITIALIZED","","",2,null],[13,"UNKNOWN_PARAM","","",2,null],[13,"WRONG_PARAM_VALUE","","",2,null],[13,"WRONG_PARAM_TYPE","","",2,null],[13,"WRONG_PARAM_SIZE","","",2,null],[13,"BUFFER_TOO_SMALL","","",2,null],[13,"NOT_SUPPORTED_PARAM","","",2,null],[13,"NOT_SUPPORTED_PARAM_INFO","","",2,null],[13,"NOT_SUPPORTED_DATA_FORMAT","","",2,null],[13,"READ_ONLY_PARAM","","",2,null],[13,"BANDWIDTH_NOT_SUPPORTED","","",2,null],[13,"INVALID_FFS_FILE_NAME","","",2,null],[13,"FFS_FILE_NOT_FOUND","","",2,null],[13,"PROC_OTHER_ERROR","","",2,null],[13,"PROC_PROCESSING_ERROR","","",2,null],[13,"PROC_INPUT_FORMAT_UNSUPPORTED","","",2,null],[4,"DebugLevel","","",null,null],[13,"DETAIL","","",3,null],[13,"TRACE","","",3,null],[13,"WARNING","","",3,null],[13,"ERROR","","",3,null],[13,"FATAL","","",3,null],[13,"DISABLED","","",3,null],[4,"ImgFormat","","",null,null],[13,"MONO8","","",4,null],[13,"MONO16","","",4,null],[13,"RGB24","","",4,null],[13,"RGB32","","",4,null],[13,"RGB_PLANAR","","",4,null],[13,"RAW8","","",4,null],[13,"RAW16","","",4,null],[13,"FRM_TRANSPORT_DATA","","",4,null],[4,"ColorFilterArray","","",null,null],[13,"NONE","","",5,null],[13,"BAYER_RGGB","","",5,null],[13,"CMYG","","",5,null],[13,"RGR","","",5,null],[13,"BAYER_BGGR","","",5,null],[13,"BAYER_GRBG","","",5,null],[13,"BAYER_GBRG","","",5,null],[4,"BufferPolicy","","",null,null],[13,"UNSAFE","","",6,null],[13,"SAFE","","",6,null],[4,"TriggerSource","","",null,null],[13,"OFF","","",7,null],[13,"EDGE_RISING","","",7,null],[13,"EDGE_FALLING","","",7,null],[13,"SOFTWARE","","",7,null],[4,"TriggerSelector","","",null,null],[13,"FRAME_START","","",8,null],[13,"EXPOSURE_ACTIVE","","",8,null],[13,"FRAME_BURST_START","","",8,null],[13,"FRAME_BURST_ACTIVE","","",8,null],[13,"MULTIPLE_EXPOSURES","","",8,null],[4,"ACQTimingMode","","",null,null],[13,"FREE_RUN","","",9,null],[13,"FRAME_RATE","","",9,null],[4,"GPIMode","","",null,null],[13,"OFF","","",10,null],[13,"TRIGGER","","",10,null],[13,"EXT_EVENT","","",10,null],[4,"GPOMode","","",null,null],[13,"OFF","","",11,null],[13,"ON","","",11,null],[13,"FRAME_ACTIVE","","",11,null],[13,"FRAME_ACTIVE_NEG","","",11,null],[13,"EXPOSURE_ACTIVE","","",11,null],[13,"EXPOSURE_ACTIVE_NEG","","",11,null],[13,"FRAME_TRIGGER_WAIT","","",11,null],[13,"FRAME_TRIGGER_WAIT_NEG","","",11,null],[13,"EXPOSURE_PULSE","","",11,null],[13,"EXPOSURE_PULSE_NEG","","",11,null],[13,"BUSY","","",11,null],[13,"BUSY_NEG","","",11,null],[4,"LEDMode","","",null,null],[13,"HEARTBEAT","","",12,null],[13,"TRIGGER_ACTIVE","","",12,null],[13,"EXT_EVENT_ACTIVE","","",12,null],[13,"LINK","","",12,null],[13,"ACQUISITION","","",12,null],[13,"EXPOSURE_ACTIVE","","",12,null],[13,"FRAME_ACTIVE","","",12,null],[13,"OFF","","",12,null],[13,"ON","","",12,null],[13,"BLINK","","",12,null],[4,"CounterSelector","","",null,null],[13,"TRANSPORT_SKIPPED_FRAMES","","",13,null],[13,"API_SKIPPED_FRAMES","","",13,null],[13,"TRANSPORT_TRANSFERRED_FRAMES","","",13,null],[4,"TimestampResetMode","","",null,null],[13,"ARM_ONCE","","",14,null],[13,"ARM_PERSIST","","",14,null],[4,"TimestampResetSource","","",null,null],[13,"OFF","","",15,null],[13,"GPI_1","","",15,null],[13,"GPI_2","","",15,null],[13,"GPI_3","","",15,null],[13,"GPI_4","","",15,null],[13,"GPI_1_INV","","",15,null],[13,"GPI_2_INV","","",15,null],[13,"GPI_3_INV","","",15,null],[13,"GPI_4_INV","","",15,null],[13,"GPO_1","","",15,null],[13,"GPO_2","","",15,null],[13,"GPO_3","","",15,null],[13,"GPO_4","","",15,null],[13,"GPO_1_INV","","",15,null],[13,"GPO_2_INV","","",15,null],[13,"GPO_3_INV","","",15,null],[13,"GPO_4_INV","","",15,null],[13,"TRIGGER","","",15,null],[13,"TRIGGER_INV","","",15,null],[13,"SW","","",15,null],[13,"EXPACTIVE","","",15,null],[13,"EXPACTIVE_INV","","",15,null],[13,"FVAL","","",15,null],[13,"FVAL_INV","","",15,null],[4,"PRMType","","",null,null],[13,"Int","","",16,null],[13,"Float","","",16,null],[13,"Str","","",16,null],[4,"Switch","","",null,null],[13,"OFF","","",17,null],[13,"ON","","",17,null],[4,"OutputDataPackignType","","",null,null],[13,"DATA_PACK_XI_GROUPING","","",18,null],[13,"DATA_PACK_PFNC_LSB_PACKING","","",18,null],[4,"DowndamplingType","","",null,null],[13,"BINNING","","",19,null],[13,"SKIPPING","","",19,null],[4,"GainSelectorType","","",null,null],[13,"GAIN_SELECTOR_ALL","","",20,null],[13,"GAIN_SELECTOR_ANALOG_ALL","","",20,null],[13,"GAIN_SELECTOR_DIGITAL_ALL","","",20,null],[4,"ShutterType","","",null,null],[13,"SHUTTER_GLOBAL","","",21,null],[13,"SHUTTER_ROLLING","","",21,null],[13,"SHUTTER_GLOBAL_RESET_RELEASE","","",21,null],[4,"CMSMode","","",null,null],[13,"CMS_DIS","","",22,null],[13,"CMS_EN","","",22,null],[13,"CMS_EN_FAST","","",22,null],[4,"OpenBy","","",null,null],[13,"OPEN_BY_INST_PATH","","",23,null],[13,"OPEN_BY_SN","","",23,null],[13,"OPEN_BY_USER_ID","","",23,null],[4,"LensFeature","","",null,null],[13,"LENS_FEATURE_MOTORIZED_FOCUS_SWITCH","","",24,null],[13,"LENS_FEATURE_MOTORIZED_FOCUS_BOUNDED","","",24,null],[13,"LENS_FEATURE_MOTORIZED_FOCUS_CALIBRATION","","",24,null],[13,"LENS_FEATURE_IMAGE_STABILIZATION_ENABLED","","",24,null],[13,"LENS_FEATURE_IMAGE_STABILIZATION_SWITCH_STATUS","","",24,null],[13,"LENS_FEATURE_IMAGE_ZOOM_SUPPORTED","","",24,null],[4,"SensorFeatureSelector","","",null,null],[13,"SENSOR_FEATURE_ZEROROT_ENABLE","","",25,null],[13,"Other","","",25,null],[4,"Parameter","","",null,null],[13,"DeviceName","","",26,null],[13,"DeviceType","","",26,null],[13,"DeviceModelID","","",26,null],[13,"DeviceSN","","",26,null],[13,"DeviceSensorSN","","",26,null],[13,"DeviceInstancePath","","",26,null],[13,"DeviceUserID","","",26,null],[13,"EXPOSURE","","",26,null],[13,"GAIN_SELECTOR","","",26,null],[13,"GAIN","","",26,null],[13,"DOWNSAMPLING","","",26,null],[13,"DOWNSAMPLING_TYPE","","",26,null],[13,"SHUTTER_TYPE","","",26,null],[13,"IMAGE_DATA_FORMAT","","",26,null],[13,"IMAGE_PAYLOAD_SIZE","","",26,null],[13,"TRANSPORT_PIXEL_FORMAT","","",26,null],[13,"SENSOR_TAPS","","",26,null],[13,"SENSOR_CLOCK_FREQ_HZ","","",26,null],[13,"SENSOR_CLOCK_FREQ_INDEX","","",26,null],[13,"SENSOR_OUTPUT_CHANNEL_COUNT","","",26,null],[13,"SENSOR_DATA_BIT_DEPTH","","",26,null],[13,"OUTPUT_DATA_BIT_DEPTH","","",26,null],[13,"IMAGE_DATA_BIT_DEPTH","","",26,null],[13,"OUTPUT_DATA_PACKING","","",26,null],[13,"OUTPUT_DATA_PACKING_TYPE","","",26,null],[13,"FRAMERATE","","",26,null],[13,"COUNTER_SELECTOR","","",26,null],[13,"COUNTER_VALUE","","",26,null],[13,"ACQ_TIMING_MODE","","",26,null],[13,"AVAILABLE_BANDWIDTH","","",26,null],[13,"LIMIT_BANDWIDTH","","",26,null],[13,"BUFFER_POLICY","","",26,null],[13,"WIDTH","","",26,null],[13,"HEIGHT","","",26,null],[13,"OFFSET_X","","",26,null],[13,"OFFSET_Y","","",26,null],[13,"LUT_EN","","",26,null],[13,"LUT_INDEX","","",26,null],[13,"LUT_VALUE","","",26,null],[13,"TRG_SOURCE","","",26,null],[13,"TRG_SELECTOR","","",26,null],[13,"TRG_SOFTWARE","","",26,null],[13,"TRG_DELAY","","",26,null],[13,"GPI_SELECTOR","","",26,null],[13,"GPI_MODE","","",26,null],[13,"GPI_LEVEL","","",26,null],[13,"GPO_SELECTOR","","",26,null],[13,"GPO_MODE","","",26,null],[13,"LED_SELECTOR","","",26,null],[13,"LED_MODE","","",26,null],[13,"TS_RST_MODE","","",26,null],[13,"TS_RST_SOURCE","","",26,null],[13,"ACQ_FRAME_BURST_COUNT","","",26,null],[13,"IS_DEVICE_EXIST","","",26,null],[13,"ACQ_BUFFER_SIZE","","",26,null],[13,"ACQ_BUFFER_SIZE_UNIT","","",26,null],[13,"ACQ_TRANSPORT_BUFFER_SIZE","","",26,null],[13,"BUFFERS_QUEUE_SIZE","","",26,null],[13,"RECENT_FRAME","","",26,null],[13,"CMS","","",26,null],[13,"APPLY_CMS","","",26,null],[13,"INPUT_CMS_PROFILE","","",26,null],[13,"OUTPUT_CMS_PROFILE","","",26,null],[13,"IMAGE_IS_COLOR","","",26,null],[13,"COLOR_FILTER_ARRAY","","",26,null],[13,"WB_KR","","",26,null],[13,"WB_KG","","",26,null],[13,"WB_KB","","",26,null],[13,"MANUAL_WB","","",26,null],[13,"AUTO_WB","","",26,null],[13,"GAMMAY","","",26,null],[13,"GAMMAC","","",26,null],[13,"SHARPNESS","","",26,null],[13,"CC_MATRIX_00","","",26,null],[13,"CC_MATRIX_01","","",26,null],[13,"CC_MATRIX_02","","",26,null],[13,"CC_MATRIX_03","","",26,null],[13,"CC_MATRIX_10","","",26,null],[13,"CC_MATRIX_11","","",26,null],[13,"CC_MATRIX_12","","",26,null],[13,"CC_MATRIX_13","","",26,null],[13,"CC_MATRIX_20","","",26,null],[13,"CC_MATRIX_21","","",26,null],[13,"CC_MATRIX_22","","",26,null],[13,"CC_MATRIX_23","","",26,null],[13,"CC_MATRIX_30","","",26,null],[13,"CC_MATRIX_31","","",26,null],[13,"CC_MATRIX_32","","",26,null],[13,"CC_MATRIX_33","","",26,null],[13,"DEFAULT_CC_MATRIX","","",26,null],[13,"AEAG","","",26,null],[13,"AEAG_ROI_OFFSET_X","","",26,null],[13,"AEAG_ROI_OFFSET_Y","","",26,null],[13,"AEAG_ROI_WIDTH","","",26,null],[13,"AEAG_ROI_HEIGHT","","",26,null],[13,"EXP_PRIORITY","","",26,null],[13,"AE_MAX_LIMIT","","",26,null],[13,"AG_MAX_LIMIT","","",26,null],[13,"AEAG_LEVEL","","",26,null],[13,"BPC","","",26,null],[13,"DEBOUNCE_EN","","",26,null],[13,"DEBOUNCE_T0","","",26,null],[13,"DEBOUNCE_T1","","",26,null],[13,"DEBOUNCE_POL","","",26,null],[13,"IS_COOLED","","",26,null],[13,"COOLING","","",26,null],[13,"TARGET_TEMP","","",26,null],[13,"CHIP_TEMP","","",26,null],[13,"HOUS_TEMP","","",26,null],[13,"SENSOR_MODE","","",26,null],[13,"HDR","","",26,null],[13,"HDR_KNEEPOINT_COUNT","","",26,null],[13,"HDR_T1","","",26,null],[13,"HDR_T2","","",26,null],[13,"KNEEPOINT1","","",26,null],[13,"KNEEPOINT2","","",26,null],[13,"IMAGE_BLACK_LEVEL","","",26,null],[13,"API_VERSION","","",26,null],[13,"DRV_VERSION","","",26,null],[13,"MCU1_VERSION","","",26,null],[13,"MCU2_VERSION","","",26,null],[13,"FPGA1_VERSION","","",26,null],[13,"DEBUG_LEVEL","","",26,null],[13,"AUTO_BANDWIDTH_CALCULATION","","",26,null],[13,"READ_FILE_FFS","","",26,null],[13,"WRITE_FILE_FFS","","",26,null],[13,"FFS_FILE_NAME","","",26,null],[13,"FREE_FFS_SIZE","","",26,null],[13,"USED_FFS_SIZE","","",26,null],[13,"FFS_ACCESS_KEY","","",26,null],[13,"API_CONTEXT_LIST","","",26,null],[13,"LENS_MODE","","",26,null],[13,"LENS_APERTURE_VALUE","","",26,null],[13,"LENS_FOCUS_MOVEMENT_VALUE","","",26,null],[13,"LENS_FOCUS_MOVE","","",26,null],[13,"LENS_FOCUS_DISTANCE","","",26,null],[13,"LENS_FOCAL_LENGTH","","",26,null],[13,"LENS_FEATURE_SELECTOR","","",26,null],[13,"LENS_FEATURE","","",26,null],[13,"SENSOR_FEATURE_SELECTOR","","",26,null],[13,"SENSOR_FEATURE_VALUE","","",26,null],[11,"eq","","",2,{"inputs":[{"name":"xireturn"},{"name":"xireturn"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"xireturn"},{"name":"xireturn"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"xireturn"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_i64","","",2,{"inputs":[{"name":"xireturn"},{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",2,{"inputs":[{"name":"xireturn"},{"name":"u64"}],"output":{"name":"option"}}],[11,"into","","",26,null],[0,"functions","xiapi","",null,null],[5,"get_num_devices","xiapi::functions","",null,{"inputs":[],"output":{"name":"u32"}}],[5,"get_device_info_string","","",null,{"inputs":[{"name":"u32"},{"name":"parameter"}],"output":{"name":"option"}}],[0,"types","xiapi","",null,null],[3,"ImgDesc","xiapi::types","",null,null],[12,"Area0Left","","",27,null],[12,"Area1Left","","",27,null],[12,"Area2Left","","",27,null],[12,"Area3Left","","",27,null],[12,"Area4Left","","",27,null],[12,"Area5Left","","",27,null],[12,"ActiveAreaWidth","","",27,null],[12,"Area5Right","","",27,null],[12,"Area4Right","","",27,null],[12,"Area3Right","","",27,null],[12,"Area2Right","","",27,null],[12,"Area1Right","","",27,null],[12,"Area0Right","","",27,null],[12,"Area0Top","","",27,null],[12,"Area1Top","","",27,null],[12,"Area2Top","","",27,null],[12,"Area3Top","","",27,null],[12,"Area4Top","","",27,null],[12,"Area5Top","","",27,null],[12,"ActiveAreaHeight","","",27,null],[12,"Area5Bottom","","",27,null],[12,"Area4Bottom","","",27,null],[12,"Area3Bottom","","",27,null],[12,"Area2Bottom","","",27,null],[12,"Area1Bottom","","",27,null],[12,"Area0Bottom","","",27,null],[12,"format","","",27,null],[12,"flags","","",27,null],[3,"Img","","",null,null],[12,"bp","","",28,null],[12,"frm","","",28,null],[12,"width","","",28,null],[12,"height","","",28,null],[12,"nframe","","",28,null],[12,"tsSec","","",28,null],[12,"tsUSec","","",28,null],[12,"GPI_level","","",28,null],[12,"black_level","","",28,null],[12,"padding_x","","",28,null],[12,"AbsoluteOffsetX","","",28,null],[12,"AbsoluteOffsetY","","",28,null],[12,"transport_frm","","",28,null],[12,"img_desc","","",28,null],[11,"eq","","",27,{"inputs":[{"name":"imgdesc"},{"name":"imgdesc"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"imgdesc"},{"name":"imgdesc"}],"output":{"name":"bool"}}],[11,"clone","","",27,{"inputs":[{"name":"imgdesc"}],"output":{"name":"self"}}],[11,"default","","",27,{"inputs":[{"name":"imgdesc"}],"output":{"name":"self"}}]],"paths":[[4,"ModelID"],[4,"GenTLImageFormat"],[4,"xiReturn"],[4,"DebugLevel"],[4,"ImgFormat"],[4,"ColorFilterArray"],[4,"BufferPolicy"],[4,"TriggerSource"],[4,"TriggerSelector"],[4,"ACQTimingMode"],[4,"GPIMode"],[4,"GPOMode"],[4,"LEDMode"],[4,"CounterSelector"],[4,"TimestampResetMode"],[4,"TimestampResetSource"],[4,"PRMType"],[4,"Switch"],[4,"OutputDataPackignType"],[4,"DowndamplingType"],[4,"GainSelectorType"],[4,"ShutterType"],[4,"CMSMode"],[4,"OpenBy"],[4,"LensFeature"],[4,"SensorFeatureSelector"],[4,"Parameter"],[3,"ImgDesc"],[3,"Img"]]};
searchIndex['xiapi_sys'] = {"items":[[0,"","xiapi_sys","",null,null],[0,"xiapi","","",null,null],[3,"Struct__GUID","xiapi_sys::xiapi","",null,null],[12,"Data1","","",0,null],[12,"Data2","","",0,null],[12,"Data3","","",0,null],[12,"Data4","","",0,null],[3,"Union__LARGE_INTEGER","","",null,null],[12,"_bindgen_data_","","",1,null],[3,"Struct_Unnamed1","","",null,null],[12,"LowPart","","",2,null],[12,"HighPart","","",2,null],[3,"Union__ULARGE_INTEGER","","",null,null],[12,"_bindgen_data_","","",3,null],[3,"Struct_Unnamed2","","",null,null],[12,"LowPart","","",4,null],[12,"HighPart","","",4,null],[3,"Struct_tagSIZE","","",null,null],[12,"cx","","",5,null],[12,"cy","","",5,null],[3,"Struct_tagPOINT","","",null,null],[12,"x","","",6,null],[12,"y","","",6,null],[3,"Struct_Unnamed27","","",null,null],[12,"Area0Left","","",7,null],[12,"Area1Left","","",7,null],[12,"Area2Left","","",7,null],[12,"Area3Left","","",7,null],[12,"Area4Left","","",7,null],[12,"Area5Left","","",7,null],[12,"ActiveAreaWidth","","",7,null],[12,"Area5Right","","",7,null],[12,"Area4Right","","",7,null],[12,"Area3Right","","",7,null],[12,"Area2Right","","",7,null],[12,"Area1Right","","",7,null],[12,"Area0Right","","",7,null],[12,"Area0Top","","",7,null],[12,"Area1Top","","",7,null],[12,"Area2Top","","",7,null],[12,"Area3Top","","",7,null],[12,"Area4Top","","",7,null],[12,"Area5Top","","",7,null],[12,"ActiveAreaHeight","","",7,null],[12,"Area5Bottom","","",7,null],[12,"Area4Bottom","","",7,null],[12,"Area3Bottom","","",7,null],[12,"Area2Bottom","","",7,null],[12,"Area1Bottom","","",7,null],[12,"Area0Bottom","","",7,null],[12,"format","","",7,null],[12,"flags","","",7,null],[3,"Struct_Unnamed28","","",null,null],[12,"size","","",8,null],[12,"bp","","",8,null],[12,"bp_size","","",8,null],[12,"frm","","",8,null],[12,"width","","",8,null],[12,"height","","",8,null],[12,"nframe","","",8,null],[12,"tsSec","","",8,null],[12,"tsUSec","","",8,null],[12,"GPI_level","","",8,null],[12,"black_level","","",8,null],[12,"padding_x","","",8,null],[12,"AbsoluteOffsetX","","",8,null],[12,"AbsoluteOffsetY","","",8,null],[12,"transport_frm","","",8,null],[12,"img_desc","","",8,null],[5,"xiGetNumberDevices","","",null,null],[5,"xiGetDeviceInfo","","",null,null],[5,"xiOpenDevice","","",null,null],[5,"xiOpenDeviceBy","","",null,null],[5,"xiCloseDevice","","",null,null],[5,"xiStartAcquisition","","",null,null],[5,"xiStopAcquisition","","",null,null],[5,"xiGetImage","","",null,null],[5,"xiSetParam","","",null,null],[5,"xiGetParam","","",null,null],[5,"xiSetParamInt","","",null,null],[5,"xiSetParamFloat","","",null,null],[5,"xiSetParamString","","",null,null],[5,"xiGetParamInt","","",null,null],[5,"xiGetParamFloat","","",null,null],[5,"xiGetParamString","","",null,null],[5,"xiGetDeviceInfoInt","","",null,null],[5,"xiGetDeviceInfoString","","",null,null],[5,"xiProcOpen","","",null,null],[5,"xiProcSetParam","","",null,null],[5,"xiProcPushImage","","",null,null],[5,"xiProcPushXiImg","","",null,null],[5,"xiProcPullImage","","",null,null],[5,"xiProcClose","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"size_t","","",null,null],[6,"wchar_t","","",null,null],[6,"HANDLE","","",null,null],[6,"PHANDLE","","",null,null],[6,"LPHANDLE","","",null,null],[6,"USHORT","","",null,null],[6,"DWORD","","",null,null],[6,"BYTE","","",null,null],[6,"byte","","",null,null],[6,"WORD","","",null,null],[6,"FLOAT","","",null,null],[6,"PFLOAT","","",null,null],[6,"PBOOL","","",null,null],[6,"LPBOOL","","",null,null],[6,"PBYTE","","",null,null],[6,"LPBYTE","","",null,null],[6,"PINT","","",null,null],[6,"LPINT","","",null,null],[6,"PWORD","","",null,null],[6,"LPWORD","","",null,null],[6,"LPLONG","","",null,null],[6,"PDWORD","","",null,null],[6,"LPDWORD","","",null,null],[6,"LPVOID","","",null,null],[6,"PVOID","","",null,null],[6,"SIZE_T","","",null,null],[6,"CHAR","","",null,null],[6,"WCHAR","","",null,null],[6,"PCHAR","","",null,null],[6,"PSTR","","",null,null],[6,"UCHAR","","",null,null],[6,"PUCHAR","","",null,null],[6,"SHORT","","",null,null],[6,"LONG","","",null,null],[6,"ULONG","","",null,null],[6,"ULONGLONG","","",null,null],[6,"ULONG64","","",null,null],[6,"LONGLONG","","",null,null],[6,"BOOLEAN","","",null,null],[6,"INT","","",null,null],[6,"UINT","","",null,null],[6,"UINT8","","",null,null],[6,"UINT16","","",null,null],[6,"UINT32","","",null,null],[6,"UINT64","","",null,null],[6,"INT32","","",null,null],[6,"INT64","","",null,null],[6,"PUINT","","",null,null],[6,"LPCSTR","","",null,null],[6,"LPSTR","","",null,null],[6,"LPWSTR","","",null,null],[6,"LPCWSTR","","",null,null],[6,"DWORDLONG","","",null,null],[6,"PDWORDLONG","","",null,null],[6,"UINT_PTR","","",null,null],[6,"LONG_PTR","","",null,null],[6,"LPCTSTR","","",null,null],[6,"LPTSTR","","",null,null],[6,"ULONG_PTR","","",null,null],[6,"GUID","","",null,null],[6,"LARGE_INTEGER","","",null,null],[6,"PLARGE_INTEGER","","",null,null],[6,"ULARGE_INTEGER","","",null,null],[6,"PULARGE_INTEGER","","",null,null],[6,"SIZE","","",null,null],[6,"PSIZE","","",null,null],[6,"LPSIZE","","",null,null],[6,"POINT","","",null,null],[6,"PPOINT","","",null,null],[6,"Enum_E_MODEL","","",null,null],[6,"Enum_XI_GenTL_Image_Format_e","","",null,null],[6,"XI_GenTL_Image_Format_e","","",null,null],[6,"XI_RETURN","","",null,null],[6,"Enum_Unnamed3","","",null,null],[6,"XI_RET","","",null,null],[6,"Enum_Unnamed4","","",null,null],[6,"XI_DEBUG_LEVEL","","",null,null],[6,"Enum_Unnamed5","","",null,null],[6,"XI_IMG_FORMAT","","",null,null],[6,"Enum_Unnamed6","","",null,null],[6,"XI_COLOR_FILTER_ARRAY","","",null,null],[6,"Enum_Unnamed7","","",null,null],[6,"XI_BP","","",null,null],[6,"Enum_Unnamed8","","",null,null],[6,"XI_TRG_SOURCE","","",null,null],[6,"Enum_Unnamed9","","",null,null],[6,"XI_TRG_SELECTOR","","",null,null],[6,"Enum_Unnamed10","","",null,null],[6,"XI_ACQ_TIMING_MODE","","",null,null],[6,"Enum_Unnamed11","","",null,null],[6,"XI_GPI_MODE","","",null,null],[6,"Enum_Unnamed12","","",null,null],[6,"XI_GPO_MODE","","",null,null],[6,"Enum_Unnamed13","","",null,null],[6,"XI_LED_MODE","","",null,null],[6,"Enum_Unnamed14","","",null,null],[6,"XI_COUNTER_SELECTOR","","",null,null],[6,"Enum_Unnamed15","","",null,null],[6,"XI_TS_RST_MODE","","",null,null],[6,"Enum_Unnamed16","","",null,null],[6,"XI_TS_RST_SOURCE","","",null,null],[6,"Enum_Unnamed17","","",null,null],[6,"XI_PRM_TYPE","","",null,null],[6,"Enum_Unnamed18","","",null,null],[6,"XI_SWITCH","","",null,null],[6,"Enum_Unnamed19","","",null,null],[6,"XI_OUTPUT_DATA_PACKING_TYPE","","",null,null],[6,"Enum_Unnamed20","","",null,null],[6,"XI_DOWNSAMPLING_TYPE","","",null,null],[6,"Enum_Unnamed21","","",null,null],[6,"XI_GAIN_SELECTOR_TYPE","","",null,null],[6,"Enum_Unnamed22","","",null,null],[6,"XI_SHUTTER_TYPE","","",null,null],[6,"Enum_Unnamed23","","",null,null],[6,"XI_CMS_MODE","","",null,null],[6,"Enum_Unnamed24","","",null,null],[6,"XI_OPEN_BY","","",null,null],[6,"Enum_Unnamed25","","",null,null],[6,"XI_LENS_FEATURE","","",null,null],[6,"Enum_Unnamed26","","",null,null],[6,"XI_SENSOR_FEATURE_SELECTOR","","",null,null],[6,"XI_IMG_DESC","","",null,null],[6,"LPXI_IMG_DESC","","",null,null],[6,"XI_IMG","","",null,null],[6,"LPXI_IMG","","",null,null],[6,"xiProcessingHandle_t","","",null,null],[7,"XI_PRM_DEVICE_NAME","","",null,null],[7,"XI_PRM_DEVICE_TYPE","","",null,null],[7,"XI_PRM_DEVICE_MODEL_ID","","",null,null],[7,"XI_PRM_DEVICE_SN","","",null,null],[7,"XI_PRM_DEVICE_SENS_SN","","",null,null],[7,"XI_PRM_DEVICE_INSTANCE_PATH","","",null,null],[7,"XI_PRM_DEVICE_USER_ID","","",null,null],[7,"XI_PRM_EXPOSURE","","",null,null],[7,"XI_PRM_GAIN_SELECTOR","","",null,null],[7,"XI_PRM_GAIN","","",null,null],[7,"XI_PRM_DOWNSAMPLING","","",null,null],[7,"XI_PRM_DOWNSAMPLING_TYPE","","",null,null],[7,"XI_PRM_SHUTTER_TYPE","","",null,null],[7,"XI_PRM_IMAGE_DATA_FORMAT","","",null,null],[7,"XI_PRM_IMAGE_PAYLOAD_SIZE","","",null,null],[7,"XI_PRM_TRANSPORT_PIXEL_FORMAT","","",null,null],[7,"XI_PRM_SENSOR_TAPS","","",null,null],[7,"XI_PRM_SENSOR_CLOCK_FREQ_HZ","","",null,null],[7,"XI_PRM_SENSOR_CLOCK_FREQ_INDEX","","",null,null],[7,"XI_PRM_SENSOR_OUTPUT_CHANNEL_COUNT","","",null,null],[7,"XI_PRM_SENSOR_DATA_BIT_DEPTH","","",null,null],[7,"XI_PRM_OUTPUT_DATA_BIT_DEPTH","","",null,null],[7,"XI_PRM_IMAGE_DATA_BIT_DEPTH","","",null,null],[7,"XI_PRM_OUTPUT_DATA_PACKING","","",null,null],[7,"XI_PRM_OUTPUT_DATA_PACKING_TYPE","","",null,null],[7,"XI_PRM_FRAMERATE","","",null,null],[7,"XI_PRM_COUNTER_SELECTOR","","",null,null],[7,"XI_PRM_COUNTER_VALUE","","",null,null],[7,"XI_PRM_ACQ_TIMING_MODE","","",null,null],[7,"XI_PRM_AVAILABLE_BANDWIDTH","","",null,null],[7,"XI_PRM_LIMIT_BANDWIDTH","","",null,null],[7,"XI_PRM_BUFFER_POLICY","","",null,null],[7,"XI_PRM_WIDTH","","",null,null],[7,"XI_PRM_HEIGHT","","",null,null],[7,"XI_PRM_OFFSET_X","","",null,null],[7,"XI_PRM_OFFSET_Y","","",null,null],[7,"XI_PRM_LUT_EN","","",null,null],[7,"XI_PRM_LUT_INDEX","","",null,null],[7,"XI_PRM_LUT_VALUE","","",null,null],[7,"XI_PRM_TRG_SOURCE","","",null,null],[7,"XI_PRM_TRG_SELECTOR","","",null,null],[7,"XI_PRM_TRG_SOFTWARE","","",null,null],[7,"XI_PRM_TRG_DELAY","","",null,null],[7,"XI_PRM_GPI_SELECTOR","","",null,null],[7,"XI_PRM_GPI_MODE","","",null,null],[7,"XI_PRM_GPI_LEVEL","","",null,null],[7,"XI_PRM_GPO_SELECTOR","","",null,null],[7,"XI_PRM_GPO_MODE","","",null,null],[7,"XI_PRM_LED_SELECTOR","","",null,null],[7,"XI_PRM_LED_MODE","","",null,null],[7,"XI_PRM_TS_RST_MODE","","",null,null],[7,"XI_PRM_TS_RST_SOURCE","","",null,null],[7,"XI_PRM_ACQ_FRAME_BURST_COUNT","","",null,null],[7,"XI_PRM_IS_DEVICE_EXIST","","",null,null],[7,"XI_PRM_ACQ_BUFFER_SIZE","","",null,null],[7,"XI_PRM_ACQ_BUFFER_SIZE_UNIT","","",null,null],[7,"XI_PRM_ACQ_TRANSPORT_BUFFER_SIZE","","",null,null],[7,"XI_PRM_BUFFERS_QUEUE_SIZE","","",null,null],[7,"XI_PRM_RECENT_FRAME","","",null,null],[7,"XI_PRM_CMS","","",null,null],[7,"XI_PRM_APPLY_CMS","","",null,null],[7,"XI_PRM_INPUT_CMS_PROFILE","","",null,null],[7,"XI_PRM_OUTPUT_CMS_PROFILE","","",null,null],[7,"XI_PRM_IMAGE_IS_COLOR","","",null,null],[7,"XI_PRM_COLOR_FILTER_ARRAY","","",null,null],[7,"XI_PRM_WB_KR","","",null,null],[7,"XI_PRM_WB_KG","","",null,null],[7,"XI_PRM_WB_KB","","",null,null],[7,"XI_PRM_MANUAL_WB","","",null,null],[7,"XI_PRM_AUTO_WB","","",null,null],[7,"XI_PRM_GAMMAY","","",null,null],[7,"XI_PRM_GAMMAC","","",null,null],[7,"XI_PRM_SHARPNESS","","",null,null],[7,"XI_PRM_CC_MATRIX_00","","",null,null],[7,"XI_PRM_CC_MATRIX_01","","",null,null],[7,"XI_PRM_CC_MATRIX_02","","",null,null],[7,"XI_PRM_CC_MATRIX_03","","",null,null],[7,"XI_PRM_CC_MATRIX_10","","",null,null],[7,"XI_PRM_CC_MATRIX_11","","",null,null],[7,"XI_PRM_CC_MATRIX_12","","",null,null],[7,"XI_PRM_CC_MATRIX_13","","",null,null],[7,"XI_PRM_CC_MATRIX_20","","",null,null],[7,"XI_PRM_CC_MATRIX_21","","",null,null],[7,"XI_PRM_CC_MATRIX_22","","",null,null],[7,"XI_PRM_CC_MATRIX_23","","",null,null],[7,"XI_PRM_CC_MATRIX_30","","",null,null],[7,"XI_PRM_CC_MATRIX_31","","",null,null],[7,"XI_PRM_CC_MATRIX_32","","",null,null],[7,"XI_PRM_CC_MATRIX_33","","",null,null],[7,"XI_PRM_DEFAULT_CC_MATRIX","","",null,null],[7,"XI_PRM_AEAG","","",null,null],[7,"XI_PRM_AEAG_ROI_OFFSET_X","","",null,null],[7,"XI_PRM_AEAG_ROI_OFFSET_Y","","",null,null],[7,"XI_PRM_AEAG_ROI_WIDTH","","",null,null],[7,"XI_PRM_AEAG_ROI_HEIGHT","","",null,null],[7,"XI_PRM_EXP_PRIORITY","","",null,null],[7,"XI_PRM_AE_MAX_LIMIT","","",null,null],[7,"XI_PRM_AG_MAX_LIMIT","","",null,null],[7,"XI_PRM_AEAG_LEVEL","","",null,null],[7,"XI_PRM_BPC","","",null,null],[7,"XI_PRM_DEBOUNCE_EN","","",null,null],[7,"XI_PRM_DEBOUNCE_T0","","",null,null],[7,"XI_PRM_DEBOUNCE_T1","","",null,null],[7,"XI_PRM_DEBOUNCE_POL","","",null,null],[7,"XI_PRM_IS_COOLED","","",null,null],[7,"XI_PRM_COOLING","","",null,null],[7,"XI_PRM_TARGET_TEMP","","",null,null],[7,"XI_PRM_CHIP_TEMP","","",null,null],[7,"XI_PRM_HOUS_TEMP","","",null,null],[7,"XI_PRM_SENSOR_MODE","","",null,null],[7,"XI_PRM_HDR","","",null,null],[7,"XI_PRM_HDR_KNEEPOINT_COUNT","","",null,null],[7,"XI_PRM_HDR_T1","","",null,null],[7,"XI_PRM_HDR_T2","","",null,null],[7,"XI_PRM_KNEEPOINT1","","",null,null],[7,"XI_PRM_KNEEPOINT2","","",null,null],[7,"XI_PRM_IMAGE_BLACK_LEVEL","","",null,null],[7,"XI_PRM_API_VERSION","","",null,null],[7,"XI_PRM_DRV_VERSION","","",null,null],[7,"XI_PRM_MCU1_VERSION","","",null,null],[7,"XI_PRM_MCU2_VERSION","","",null,null],[7,"XI_PRM_FPGA1_VERSION","","",null,null],[7,"XI_PRM_DEBUG_LEVEL","","",null,null],[7,"XI_PRM_AUTO_BANDWIDTH_CALCULATION","","",null,null],[7,"XI_PRM_READ_FILE_FFS","","",null,null],[7,"XI_PRM_WRITE_FILE_FFS","","",null,null],[7,"XI_PRM_FFS_FILE_NAME","","",null,null],[7,"XI_PRM_FREE_FFS_SIZE","","",null,null],[7,"XI_PRM_USED_FFS_SIZE","","",null,null],[7,"XI_PRM_FFS_ACCESS_KEY","","",null,null],[7,"XI_PRM_API_CONTEXT_LIST","","",null,null],[7,"XI_PRM_LENS_MODE","","",null,null],[7,"XI_PRM_LENS_APERTURE_VALUE","","",null,null],[7,"XI_PRM_LENS_FOCUS_MOVEMENT_VALUE","","",null,null],[7,"XI_PRM_LENS_FOCUS_MOVE","","",null,null],[7,"XI_PRM_LENS_FOCUS_DISTANCE","","",null,null],[7,"XI_PRM_LENS_FOCAL_LENGTH","","",null,null],[7,"XI_PRM_LENS_FEATURE_SELECTOR","","",null,null],[7,"XI_PRM_LENS_FEATURE","","",null,null],[7,"XI_PRM_SENSOR_FEATURE_SELECTOR","","",null,null],[7,"XI_PRM_SENSOR_FEATURE_VALUE","","",null,null],[17,"MODEL_ID_UNKNOWN","","",null,null],[17,"MODEL_ID_MR274CU_BH","","",null,null],[17,"MODEL_ID_MR16000MU","","",null,null],[17,"MODEL_ID_MR282CC_BH","","",null,null],[17,"MODEL_ID_MR274MU_BH","","",null,null],[17,"MODEL_ID_MR456CU_BH","","",null,null],[17,"MODEL_ID_MR252CC_BH","","",null,null],[17,"MODEL_ID_MR4021MU_BH","","",null,null],[17,"MODEL_ID_MR4022MU_BH","","",null,null],[17,"MODEL_ID_MR655CU_BH","","",null,null],[17,"MODEL_ID_MR11002M","","",null,null],[17,"MODEL_ID_MR4021CU_BH","","",null,null],[17,"MODEL_ID_MR655MU_BH","","",null,null],[17,"MODEL_ID_MR282CU_BH","","",null,null],[17,"MODEL_ID_MR252CU_BH","","",null,null],[17,"MODEL_ID_MR285MU_BH","","",null,null],[17,"MODEL_ID_MR285CU_BH","","",null,null],[17,"MODEL_ID_MR285MC_BH","","",null,null],[17,"MODEL_ID_MR285CC_BH","","",null,null],[17,"MODEL_ID_MH160MC_KK_FA","","",null,null],[17,"MODEL_ID_MU9PC_BH","","",null,null],[17,"MODEL_ID_MR11002C","","",null,null],[17,"MODEL_ID_MU9PM_MH","","",null,null],[17,"MODEL_ID_MU9PC_MH","","",null,null],[17,"MODEL_ID_MU9PM_BH","","",null,null],[17,"MODEL_ID_CURRERA_RS04","","",null,null],[17,"MODEL_ID_CURRERA_RL04","","",null,null],[17,"MODEL_ID_CURRERA_RS04C","","",null,null],[17,"MODEL_ID_CURRERA_RL04C","","",null,null],[17,"MODEL_ID_CURRERA_RS13","","",null,null],[17,"MODEL_ID_CURRERA_RL13","","",null,null],[17,"MODEL_ID_CURRERA_RS13C","","",null,null],[17,"MODEL_ID_CURRERA_RL13C","","",null,null],[17,"MODEL_ID_CURRERA_RS50","","",null,null],[17,"MODEL_ID_CURRERA_RL50","","",null,null],[17,"MODEL_ID_CURRERA_RS50C","","",null,null],[17,"MODEL_ID_MQ013CG_E2","","",null,null],[17,"MODEL_ID_MQ013MG_E2","","",null,null],[17,"MODEL_ID_MQ003CG_CM","","",null,null],[17,"MODEL_ID_MQ003MG_CM","","",null,null],[17,"MODEL_ID_MQ022CG_CM","","",null,null],[17,"MODEL_ID_MQ022MG_CM","","",null,null],[17,"MODEL_ID_MQ042CG_CM","","",null,null],[17,"MODEL_ID_MQ042MG_CM","","",null,null],[17,"MODEL_ID_MQ022MG_CM_SR2","","",null,null],[17,"MODEL_ID_MQ042CG_CM_TG","","",null,null],[17,"MODEL_ID_MQ042MG_CM_TG","","",null,null],[17,"MODEL_ID_MQ_USB3LINK","","",null,null],[17,"MODEL_ID_MU9PC_SLC5","","",null,null],[17,"MODEL_ID_MQ022CG_CM_TS","","",null,null],[17,"MODEL_ID_MQ022MG_CM_TS","","",null,null],[17,"MODEL_ID_MQ042CG_CM_TS","","",null,null],[17,"MODEL_ID_MQ042MG_CM_TS","","",null,null],[17,"MODEL_ID_MQ013CG_ONV","","",null,null],[17,"MODEL_ID_MQ013MG_ONV","","",null,null],[17,"MODEL_ID_MQ013RG_E2","","",null,null],[17,"MODEL_ID_MQ042RG_CM","","",null,null],[17,"MODEL_ID_CURRERA_RL50C","","",null,null],[17,"MODEL_ID_MR11002XC_ICW","","",null,null],[17,"MODEL_ID_MQ020CG_E2","","",null,null],[17,"MODEL_ID_MQ020MG_E2","","",null,null],[17,"MODEL_ID_MQ022RG_CM","","",null,null],[17,"MODEL_ID_MR285CC_DP","","",null,null],[17,"MODEL_ID_MR285MC_DP","","",null,null],[17,"MODEL_ID_MR252CU_BRD","","",null,null],[17,"MODEL_ID_MH110MC_KK_FA","","",null,null],[17,"MODEL_ID_MR282CU_BRD","","",null,null],[17,"MODEL_ID_MR282CC_DP","","",null,null],[17,"MODEL_ID_MR285MU_BH_IRE","","",null,null],[17,"MODEL_ID_MR285MC_DP_IRE","","",null,null],[17,"MODEL_ID_MH110XC_KK_FA","","",null,null],[17,"MODEL_ID_MH160XC_KK_FA","","",null,null],[17,"MODEL_ID_MR252CC_DP","","",null,null],[17,"MODEL_ID_MR285MC_BH_IRE","","",null,null],[17,"MODEL_ID_MR456CC_BH","","",null,null],[17,"MODEL_ID_MR282CU_DP","","",null,null],[17,"MODEL_ID_MQ022HG_IM_ST32_600_1000","","",null,null],[17,"MODEL_ID_MR282CC_BRD","","",null,null],[17,"MODEL_ID_MR252CC_BRD","","",null,null],[17,"MODEL_ID_MQ022HG_IM_SM4X4_470_620","","",null,null],[17,"MODEL_ID_MR252CU_DP","","",null,null],[17,"MODEL_ID_MR285MU_BRD","","",null,null],[17,"MODEL_ID_MR285CU_BRD","","",null,null],[17,"MODEL_ID_MR285MC_BRD","","",null,null],[17,"MODEL_ID_MR285CC_BRD","","",null,null],[17,"MODEL_ID_MR285CC_DP_IRE","","",null,null],[17,"MODEL_ID_MR285CC_BH_IRE","","",null,null],[17,"MODEL_ID_MR285CU_BH_IRE","","",null,null],[17,"MODEL_ID_MX11002","","",null,null],[17,"MODEL_ID_MH110CC_KK_FA","","",null,null],[17,"MODEL_ID_MR16000CU","","",null,null],[17,"MODEL_ID_MH160CC_KK_FA","","",null,null],[17,"MODEL_ID_MR4022MC_VELETA","","",null,null],[17,"MODEL_ID_MR4021MC_VELETA","","",null,null],[17,"MODEL_ID_MU9JC_BH","","",null,null],[17,"MODEL_ID_MU9JM_BH","","",null,null],[17,"MODEL_ID_MQ022HG_IM_LS100_600_1000","","",null,null],[17,"MODEL_ID_MD028CC_SY","","",null,null],[17,"MODEL_ID_MD061CC_SY","","",null,null],[17,"MODEL_ID_MD091CC_SY","","",null,null],[17,"MODEL_ID_MD028MC_SY","","",null,null],[17,"MODEL_ID_MD061MC_SY","","",null,null],[17,"MODEL_ID_MD091MC_SY","","",null,null],[17,"MODEL_ID_MD028CU_SY","","",null,null],[17,"MODEL_ID_MD061CU_SY","","",null,null],[17,"MODEL_ID_MD091CU_SY","","",null,null],[17,"MODEL_ID_MD028MU_SY","","",null,null],[17,"MODEL_ID_MD061MU_SY","","",null,null],[17,"MODEL_ID_MD091MU_SY","","",null,null],[17,"MODEL_ID_CB200CG_CM","","",null,null],[17,"MODEL_ID_CB200MG_CM","","",null,null],[17,"MODEL_ID_MD120CC_SY","","",null,null],[17,"MODEL_ID_MD120MC_SY","","",null,null],[17,"MODEL_ID_MD120CU_SY","","",null,null],[17,"MODEL_ID_MD120MU_SY","","",null,null],[17,"MODEL_ID_MQ022HG_IM_UN","","",null,null],[17,"MODEL_ID_CAL_Simulator","","",null,null],[17,"MODEL_ID_MQ022HG_IM_LS150_470_900","","",null,null],[17,"MODEL_ID_MQ022HG_IM_SM5X5_600_1000","","",null,null],[17,"MODEL_ID_MQ022HG_IM_SM4X4_600_900","","",null,null],[17,"MODEL_ID_MQ022MG_CM_BARE_BRD","","",null,null],[17,"MODEL_ID_MQ042MG_CM_BARE_BRD","","",null,null],[17,"MODEL_ID_MT023CG_SY","","",null,null],[17,"MODEL_ID_MT023MG_SY","","",null,null],[17,"MODEL_ID_MT200CG_CM","","",null,null],[17,"MODEL_ID_MT200MG_CM","","",null,null],[17,"MODEL_ID_CB120CG_CM","","",null,null],[17,"MODEL_ID_CB120MG_CM","","",null,null],[17,"MODEL_ID_MT003CG_LX","","",null,null],[17,"MODEL_ID_MT003MG_LX","","",null,null],[17,"MODEL_ID_MQ013CG_ON","","",null,null],[17,"MODEL_ID_MQ013MG_ON","","",null,null],[17,"XI_GenTL_Image_Format_Mono8","","",null,null],[17,"XI_GenTL_Image_Format_BGRA8Packed","","",null,null],[17,"XI_GenTL_Image_Format_RGB8Planar","","",null,null],[17,"XI_GenTL_Image_Format_BayerRG8","","",null,null],[17,"XI_GenTL_Image_Format_Mono10","","",null,null],[17,"XI_GenTL_Image_Format_Mono12","","",null,null],[17,"XI_GenTL_Image_Format_Mono14","","",null,null],[17,"XI_GenTL_Image_Format_BayerRG10","","",null,null],[17,"XI_GenTL_Image_Format_BayerRG12","","",null,null],[17,"XI_GenTL_Image_Format_BayerGR8","","",null,null],[17,"XI_GenTL_Image_Format_BayerGB8","","",null,null],[17,"XI_GenTL_Image_Format_BayerGR10","","",null,null],[17,"XI_GenTL_Image_Format_BayerGB10","","",null,null],[17,"XI_GenTL_Image_Format_BayerGR12","","",null,null],[17,"XI_GenTL_Image_Format_BayerBG8","","",null,null],[17,"XI_GenTL_Image_Format_BayerBG10","","",null,null],[17,"XI_GenTL_Image_Format_BayerBG12","","",null,null],[17,"XI_GenTL_Image_Format_BayerGB12","","",null,null],[17,"XI_GenTL_Image_Format_RGB8","","",null,null],[17,"XI_GenTL_Image_Format_BGR8","","",null,null],[17,"XI_GenTL_Image_Format_BayerRG14","","",null,null],[17,"XI_GenTL_Image_Format_BayerGR14","","",null,null],[17,"XI_GenTL_Image_Format_BayerBG14","","",null,null],[17,"XI_GenTL_Image_Format_BayerGB14","","",null,null],[17,"XI_GenTL_Image_Format_BayerBG10p","","",null,null],[17,"XI_GenTL_Image_Format_BayerGB10p","","",null,null],[17,"XI_GenTL_Image_Format_BayerGR10p","","",null,null],[17,"XI_GenTL_Image_Format_BayerRG10p","","",null,null],[17,"XI_GenTL_Image_Format_Mono10p","","",null,null],[17,"XI_GenTL_Image_Format_BayerBG12p","","",null,null],[17,"XI_GenTL_Image_Format_BayerGB12p","","",null,null],[17,"XI_GenTL_Image_Format_BayerGR12p","","",null,null],[17,"XI_GenTL_Image_Format_BayerRG12p","","",null,null],[17,"XI_GenTL_Image_Format_Mono12p","","",null,null],[17,"XI_GenTL_Image_Format_BayerBG14p","","",null,null],[17,"XI_GenTL_Image_Format_BayerGB14p","","",null,null],[17,"XI_GenTL_Image_Format_BayerGR14p","","",null,null],[17,"XI_GenTL_Image_Format_BayerRG14p","","",null,null],[17,"XI_GenTL_Image_Format_Mono14p","","",null,null],[17,"XI_GenTL_Image_Format_xiBayerBG10g160","","",null,null],[17,"XI_GenTL_Image_Format_xiBayerGB10g160","","",null,null],[17,"XI_GenTL_Image_Format_xiBayerGR10g160","","",null,null],[17,"XI_GenTL_Image_Format_xiBayerRG10g160","","",null,null],[17,"XI_GenTL_Image_Format_xiMono10g160","","",null,null],[17,"XI_GenTL_Image_Format_xiBayerBG12g192","","",null,null],[17,"XI_GenTL_Image_Format_xiBayerGB12g192","","",null,null],[17,"XI_GenTL_Image_Format_xiBayerGR12g192","","",null,null],[17,"XI_GenTL_Image_Format_xiBayerRG12g192","","",null,null],[17,"XI_GenTL_Image_Format_xiMono12g192","","",null,null],[17,"XI_GenTL_Image_Format_xiBayerBG14g224","","",null,null],[17,"XI_GenTL_Image_Format_xiBayerGB14g224","","",null,null],[17,"XI_GenTL_Image_Format_xiBayerGR14g224","","",null,null],[17,"XI_GenTL_Image_Format_xiBayerRG14g224","","",null,null],[17,"XI_GenTL_Image_Format_xiMono14g224","","",null,null],[17,"XI_GenTL_Image_Format_xiMono8TS01","","",null,null],[17,"XI_GenTL_Image_Format_xiMono10TS01","","",null,null],[17,"XI_GenTL_Image_Format_xiMono12TS01","","",null,null],[17,"XI_GenTL_Image_Format_xiMono14TS01","","",null,null],[17,"XI_GenTL_Image_Format_xiBayerRG8TS01","","",null,null],[17,"XI_GenTL_Image_Format_xiBayerRG10TS01","","",null,null],[17,"XI_GenTL_Image_Format_xiBayerRG12TS01","","",null,null],[17,"XI_GenTL_Image_Format_xiBayerRG14TS01","","",null,null],[17,"XI_GenTL_Image_Format_xiBayerBG8TS01","","",null,null],[17,"XI_GenTL_Image_Format_xiBayerBG10TS01","","",null,null],[17,"XI_GenTL_Image_Format_xiBayerBG12TS01","","",null,null],[17,"XI_GenTL_Image_Format_xiBayerBG14TS01","","",null,null],[17,"XI_GenTL_Image_Format_xiBayerGB8TS01","","",null,null],[17,"XI_GenTL_Image_Format_xiBayerGB10TS01","","",null,null],[17,"XI_GenTL_Image_Format_xiBayerGB12TS01","","",null,null],[17,"XI_GenTL_Image_Format_xiBayerGB14TS01","","",null,null],[17,"XI_GenTL_Image_Format_xiBayerGR8TS01","","",null,null],[17,"XI_GenTL_Image_Format_xiBayerGR10TS01","","",null,null],[17,"XI_GenTL_Image_Format_xiBayerGR12TS01","","",null,null],[17,"XI_GenTL_Image_Format_xiBayerGR14TS01","","",null,null],[17,"XI_GenTL_Image_Format_xiMono8TS03","","",null,null],[17,"XI_GenTL_Image_Format_xiMono10TS03","","",null,null],[17,"XI_GenTL_Image_Format_xiMono12TS03","","",null,null],[17,"XI_GenTL_Image_Format_xiMono14TS03","","",null,null],[17,"XI_GenTL_Image_Format_xiBayerRG8TS03","","",null,null],[17,"XI_GenTL_Image_Format_xiBayerRG10TS03","","",null,null],[17,"XI_GenTL_Image_Format_xiBayerRG12TS03","","",null,null],[17,"XI_GenTL_Image_Format_xiBayerRG14TS03","","",null,null],[17,"XI_GenTL_Image_Format_xiBayerBG8TS03","","",null,null],[17,"XI_GenTL_Image_Format_xiBayerBG10TS03","","",null,null],[17,"XI_GenTL_Image_Format_xiBayerBG12TS03","","",null,null],[17,"XI_GenTL_Image_Format_xiBayerBG14TS03","","",null,null],[17,"XI_GenTL_Image_Format_xiBayerGB8TS03","","",null,null],[17,"XI_GenTL_Image_Format_xiBayerGB10TS03","","",null,null],[17,"XI_GenTL_Image_Format_xiBayerGB12TS03","","",null,null],[17,"XI_GenTL_Image_Format_xiBayerGB14TS03","","",null,null],[17,"XI_GenTL_Image_Format_xiBayerGR8TS03","","",null,null],[17,"XI_GenTL_Image_Format_xiBayerGR10TS03","","",null,null],[17,"XI_GenTL_Image_Format_xiBayerGR12TS03","","",null,null],[17,"XI_GenTL_Image_Format_xiBayerGR14TS03","","",null,null],[17,"XI_OK","","",null,null],[17,"XI_INVALID_HANDLE","","",null,null],[17,"XI_READREG","","",null,null],[17,"XI_WRITEREG","","",null,null],[17,"XI_FREE_RESOURCES","","",null,null],[17,"XI_FREE_CHANNEL","","",null,null],[17,"XI_FREE_BANDWIDTH","","",null,null],[17,"XI_READBLK","","",null,null],[17,"XI_WRITEBLK","","",null,null],[17,"XI_NO_IMAGE","","",null,null],[17,"XI_TIMEOUT","","",null,null],[17,"XI_INVALID_ARG","","",null,null],[17,"XI_NOT_SUPPORTED","","",null,null],[17,"XI_ISOCH_ATTACH_BUFFERS","","",null,null],[17,"XI_GET_OVERLAPPED_RESULT","","",null,null],[17,"XI_MEMORY_ALLOCATION","","",null,null],[17,"XI_DLLCONTEXTISNULL","","",null,null],[17,"XI_DLLCONTEXTISNONZERO","","",null,null],[17,"XI_DLLCONTEXTEXIST","","",null,null],[17,"XI_TOOMANYDEVICES","","",null,null],[17,"XI_ERRORCAMCONTEXT","","",null,null],[17,"XI_UNKNOWN_HARDWARE","","",null,null],[17,"XI_INVALID_TM_FILE","","",null,null],[17,"XI_INVALID_TM_TAG","","",null,null],[17,"XI_INCOMPLETE_TM","","",null,null],[17,"XI_BUS_RESET_FAILED","","",null,null],[17,"XI_NOT_IMPLEMENTED","","",null,null],[17,"XI_SHADING_TOOBRIGHT","","",null,null],[17,"XI_SHADING_TOODARK","","",null,null],[17,"XI_TOO_LOW_GAIN","","",null,null],[17,"XI_INVALID_BPL","","",null,null],[17,"XI_BPL_REALLOC","","",null,null],[17,"XI_INVALID_PIXEL_LIST","","",null,null],[17,"XI_INVALID_FFS","","",null,null],[17,"XI_INVALID_PROFILE","","",null,null],[17,"XI_INVALID_CALIBRATION","","",null,null],[17,"XI_INVALID_BUFFER","","",null,null],[17,"XI_INVALID_DATA","","",null,null],[17,"XI_TGBUSY","","",null,null],[17,"XI_IO_WRONG","","",null,null],[17,"XI_ACQUISITION_ALREADY_UP","","",null,null],[17,"XI_OLD_DRIVER_VERSION","","",null,null],[17,"XI_GET_LAST_ERROR","","",null,null],[17,"XI_CANT_PROCESS","","",null,null],[17,"XI_ACQUISITION_STOPED","","",null,null],[17,"XI_ACQUISITION_STOPED_WERR","","",null,null],[17,"XI_INVALID_INPUT_ICC_PROFILE","","",null,null],[17,"XI_INVALID_OUTPUT_ICC_PROFILE","","",null,null],[17,"XI_DEVICE_NOT_READY","","",null,null],[17,"XI_SHADING_TOOCONTRAST","","",null,null],[17,"XI_ALREADY_INITIALIZED","","",null,null],[17,"XI_NOT_ENOUGH_PRIVILEGES","","",null,null],[17,"XI_NOT_COMPATIBLE_DRIVER","","",null,null],[17,"XI_TM_INVALID_RESOURCE","","",null,null],[17,"XI_DEVICE_HAS_BEEN_RESETED","","",null,null],[17,"XI_NO_DEVICES_FOUND","","",null,null],[17,"XI_RESOURCE_OR_FUNCTION_LOCKED","","",null,null],[17,"XI_BUFFER_SIZE_TOO_SMALL","","",null,null],[17,"XI_COULDNT_INIT_PROCESSOR","","",null,null],[17,"XI_NOT_INITIALIZED","","",null,null],[17,"XI_UNKNOWN_PARAM","","",null,null],[17,"XI_WRONG_PARAM_VALUE","","",null,null],[17,"XI_WRONG_PARAM_TYPE","","",null,null],[17,"XI_WRONG_PARAM_SIZE","","",null,null],[17,"XI_BUFFER_TOO_SMALL","","",null,null],[17,"XI_NOT_SUPPORTED_PARAM","","",null,null],[17,"XI_NOT_SUPPORTED_PARAM_INFO","","",null,null],[17,"XI_NOT_SUPPORTED_DATA_FORMAT","","",null,null],[17,"XI_READ_ONLY_PARAM","","",null,null],[17,"XI_BANDWIDTH_NOT_SUPPORTED","","",null,null],[17,"XI_INVALID_FFS_FILE_NAME","","",null,null],[17,"XI_FFS_FILE_NOT_FOUND","","",null,null],[17,"XI_PROC_OTHER_ERROR","","",null,null],[17,"XI_PROC_PROCESSING_ERROR","","",null,null],[17,"XI_PROC_INPUT_FORMAT_UNSUPPORTED","","",null,null],[17,"XI_PROC_OUTPUT_FORMAT_UNSUPPORTED","","",null,null],[17,"XI_DL_DETAIL","","",null,null],[17,"XI_DL_TRACE","","",null,null],[17,"XI_DL_WARNING","","",null,null],[17,"XI_DL_ERROR","","",null,null],[17,"XI_DL_FATAL","","",null,null],[17,"XI_DL_DISABLED","","",null,null],[17,"XI_MONO8","","",null,null],[17,"XI_MONO16","","",null,null],[17,"XI_RGB24","","",null,null],[17,"XI_RGB32","","",null,null],[17,"XI_RGB_PLANAR","","",null,null],[17,"XI_RAW8","","",null,null],[17,"XI_RAW16","","",null,null],[17,"XI_FRM_TRANSPORT_DATA","","",null,null],[17,"XI_CFA_NONE","","",null,null],[17,"XI_CFA_BAYER_RGGB","","",null,null],[17,"XI_CFA_CMYG","","",null,null],[17,"XI_CFA_RGR","","",null,null],[17,"XI_CFA_BAYER_BGGR","","",null,null],[17,"XI_CFA_BAYER_GRBG","","",null,null],[17,"XI_CFA_BAYER_GBRG","","",null,null],[17,"XI_BP_UNSAFE","","",null,null],[17,"XI_BP_SAFE","","",null,null],[17,"XI_TRG_OFF","","",null,null],[17,"XI_TRG_EDGE_RISING","","",null,null],[17,"XI_TRG_EDGE_FALLING","","",null,null],[17,"XI_TRG_SOFTWARE","","",null,null],[17,"XI_TRG_SEL_FRAME_START","","",null,null],[17,"XI_TRG_SEL_EXPOSURE_ACTIVE","","",null,null],[17,"XI_TRG_SEL_FRAME_BURST_START","","",null,null],[17,"XI_TRG_SEL_FRAME_BURST_ACTIVE","","",null,null],[17,"XI_TRG_SEL_MULTIPLE_EXPOSURES","","",null,null],[17,"XI_ACQ_TIMING_MODE_FREE_RUN","","",null,null],[17,"XI_ACQ_TIMING_MODE_FRAME_RATE","","",null,null],[17,"XI_GPI_OFF","","",null,null],[17,"XI_GPI_TRIGGER","","",null,null],[17,"XI_GPI_EXT_EVENT","","",null,null],[17,"XI_GPO_OFF","","",null,null],[17,"XI_GPO_ON","","",null,null],[17,"XI_GPO_FRAME_ACTIVE","","",null,null],[17,"XI_GPO_FRAME_ACTIVE_NEG","","",null,null],[17,"XI_GPO_EXPOSURE_ACTIVE","","",null,null],[17,"XI_GPO_EXPOSURE_ACTIVE_NEG","","",null,null],[17,"XI_GPO_FRAME_TRIGGER_WAIT","","",null,null],[17,"XI_GPO_FRAME_TRIGGER_WAIT_NEG","","",null,null],[17,"XI_GPO_EXPOSURE_PULSE","","",null,null],[17,"XI_GPO_EXPOSURE_PULSE_NEG","","",null,null],[17,"XI_GPO_BUSY","","",null,null],[17,"XI_GPO_BUSY_NEG","","",null,null],[17,"XI_LED_HEARTBEAT","","",null,null],[17,"XI_LED_TRIGGER_ACTIVE","","",null,null],[17,"XI_LED_EXT_EVENT_ACTIVE","","",null,null],[17,"XI_LED_LINK","","",null,null],[17,"XI_LED_ACQUISITION","","",null,null],[17,"XI_LED_EXPOSURE_ACTIVE","","",null,null],[17,"XI_LED_FRAME_ACTIVE","","",null,null],[17,"XI_LED_OFF","","",null,null],[17,"XI_LED_ON","","",null,null],[17,"XI_LED_BLINK","","",null,null],[17,"XI_CNT_SEL_TRANSPORT_SKIPPED_FRAMES","","",null,null],[17,"XI_CNT_SEL_API_SKIPPED_FRAMES","","",null,null],[17,"XI_CNT_SEL_TRANSPORT_TRANSFERRED_FRAMES","","",null,null],[17,"XI_TS_RST_ARM_ONCE","","",null,null],[17,"XI_TS_RST_ARM_PERSIST","","",null,null],[17,"XI_TS_RST_OFF","","",null,null],[17,"XI_TS_RST_SRC_GPI_1","","",null,null],[17,"XI_TS_RST_SRC_GPI_2","","",null,null],[17,"XI_TS_RST_SRC_GPI_3","","",null,null],[17,"XI_TS_RST_SRC_GPI_4","","",null,null],[17,"XI_TS_RST_SRC_GPI_1_INV","","",null,null],[17,"XI_TS_RST_SRC_GPI_2_INV","","",null,null],[17,"XI_TS_RST_SRC_GPI_3_INV","","",null,null],[17,"XI_TS_RST_SRC_GPI_4_INV","","",null,null],[17,"XI_TS_RST_SRC_GPO_1","","",null,null],[17,"XI_TS_RST_SRC_GPO_2","","",null,null],[17,"XI_TS_RST_SRC_GPO_3","","",null,null],[17,"XI_TS_RST_SRC_GPO_4","","",null,null],[17,"XI_TS_RST_SRC_GPO_1_INV","","",null,null],[17,"XI_TS_RST_SRC_GPO_2_INV","","",null,null],[17,"XI_TS_RST_SRC_GPO_3_INV","","",null,null],[17,"XI_TS_RST_SRC_GPO_4_INV","","",null,null],[17,"XI_TS_RST_SRC_TRIGGER","","",null,null],[17,"XI_TS_RST_SRC_TRIGGER_INV","","",null,null],[17,"XI_TS_RST_SRC_SW","","",null,null],[17,"XI_TS_RST_SRC_EXPACTIVE","","",null,null],[17,"XI_TS_RST_SRC_EXPACTIVE_INV","","",null,null],[17,"XI_TS_RST_SRC_FVAL","","",null,null],[17,"XI_TS_RST_SRC_FVAL_INV","","",null,null],[17,"xiTypeInteger","","",null,null],[17,"xiTypeFloat","","",null,null],[17,"xiTypeString","","",null,null],[17,"XI_OFF","","",null,null],[17,"XI_ON","","",null,null],[17,"XI_DATA_PACK_XI_GROUPING","","",null,null],[17,"XI_DATA_PACK_PFNC_LSB_PACKING","","",null,null],[17,"XI_BINNING","","",null,null],[17,"XI_SKIPPING","","",null,null],[17,"XI_GAIN_SELECTOR_ALL","","",null,null],[17,"XI_GAIN_SELECTOR_ANALOG_ALL","","",null,null],[17,"XI_GAIN_SELECTOR_DIGITAL_ALL","","",null,null],[17,"XI_SHUTTER_GLOBAL","","",null,null],[17,"XI_SHUTTER_ROLLING","","",null,null],[17,"XI_SHUTTER_GLOBAL_RESET_RELEASE","","",null,null],[17,"XI_CMS_DIS","","",null,null],[17,"XI_CMS_EN","","",null,null],[17,"XI_CMS_EN_FAST","","",null,null],[17,"XI_OPEN_BY_INST_PATH","","",null,null],[17,"XI_OPEN_BY_SN","","",null,null],[17,"XI_OPEN_BY_USER_ID","","",null,null],[17,"XI_LENS_FEATURE_MOTORIZED_FOCUS_SWITCH","","",null,null],[17,"XI_LENS_FEATURE_MOTORIZED_FOCUS_BOUNDED","","",null,null],[17,"XI_LENS_FEATURE_MOTORIZED_FOCUS_CALIBRATION","","",null,null],[17,"XI_LENS_FEATURE_IMAGE_STABILIZATION_ENABLED","","",null,null],[17,"XI_LENS_FEATURE_IMAGE_STABILIZATION_SWITCH_STATUS","","",null,null],[17,"XI_LENS_FEATURE_IMAGE_ZOOM_SUPPORTED","","",null,null],[17,"XI_SENSOR_FEATURE_ZEROROT_ENABLE","","",null,null],[11,"clone","","",0,{"inputs":[{"name":"struct__guid"}],"output":{"name":"self"}}],[11,"default","","",0,{"inputs":[{"name":"struct__guid"}],"output":{"name":"self"}}],[11,"LowPart","","",1,null],[11,"HighPart","","",1,null],[11,"u","","",1,null],[11,"QuadPart","","",1,null],[11,"clone","","",1,{"inputs":[{"name":"union__large_integer"}],"output":{"name":"self"}}],[11,"default","","",1,{"inputs":[{"name":"union__large_integer"}],"output":{"name":"self"}}],[11,"clone","","",2,{"inputs":[{"name":"struct_unnamed1"}],"output":{"name":"self"}}],[11,"default","","",2,{"inputs":[{"name":"struct_unnamed1"}],"output":{"name":"self"}}],[11,"LowPart","","",3,null],[11,"HighPart","","",3,null],[11,"u","","",3,null],[11,"QuadPart","","",3,null],[11,"clone","","",3,{"inputs":[{"name":"union__ularge_integer"}],"output":{"name":"self"}}],[11,"default","","",3,{"inputs":[{"name":"union__ularge_integer"}],"output":{"name":"self"}}],[11,"clone","","",4,{"inputs":[{"name":"struct_unnamed2"}],"output":{"name":"self"}}],[11,"default","","",4,{"inputs":[{"name":"struct_unnamed2"}],"output":{"name":"self"}}],[11,"clone","","",5,{"inputs":[{"name":"struct_tagsize"}],"output":{"name":"self"}}],[11,"default","","",5,{"inputs":[{"name":"struct_tagsize"}],"output":{"name":"self"}}],[11,"clone","","",6,{"inputs":[{"name":"struct_tagpoint"}],"output":{"name":"self"}}],[11,"default","","",6,{"inputs":[{"name":"struct_tagpoint"}],"output":{"name":"self"}}],[11,"clone","","",7,{"inputs":[{"name":"struct_unnamed27"}],"output":{"name":"self"}}],[11,"default","","",7,{"inputs":[{"name":"struct_unnamed27"}],"output":{"name":"self"}}],[11,"clone","","",8,{"inputs":[{"name":"struct_unnamed28"}],"output":{"name":"self"}}],[11,"default","","",8,{"inputs":[{"name":"struct_unnamed28"}],"output":{"name":"self"}}]],"paths":[[3,"Struct__GUID"],[3,"Union__LARGE_INTEGER"],[3,"Struct_Unnamed1"],[3,"Union__ULARGE_INTEGER"],[3,"Struct_Unnamed2"],[3,"Struct_tagSIZE"],[3,"Struct_tagPOINT"],[3,"Struct_Unnamed27"],[3,"Struct_Unnamed28"]]};
searchIndex['enum_primitive'] = {"items":[[0,"","enum_primitive","This crate exports a macro `enum_from_primitive!` that wraps an\n`enum` declaration and automatically adds an implementation of\n`num::FromPrimitive` (reexported here), to allow conversion from\nprimitive integers to the enum.  It therefore provides an\nalternative to the built-in `#[derive(FromPrimitive)]`, which\nrequires the unstable `std::num::FromPrimitive` and is disabled in\nRust 1.0.",null,null],[11,"is_some","core::option","Returns `true` if the option is a `Some` value",0,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",0,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option<T>` to `Option<&T>`",0,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option<T>` to `Option<&mut T>`",0,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut_slice","","Converts from `Option<T>` to `&mut [T]` (without copying)",0,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`",0,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option<T>` if it is `Some(v)`.",0,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",0,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",0,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option<T>` to `Option<U>` by applying a function to a contained value",0,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",0,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",0,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",0,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",0,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",0,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",0,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",0,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",0,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",0,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",0,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",0,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_slice","","Converts from `Option<T>` to `&[T]` (without copying)",0,null],[11,"cloned","","Maps an Option<&T> to an Option<T> by cloning the contents of the Option.",0,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",0,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"fmt","core::num","",1,{"inputs":[{"name":"wrapping"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"cmp","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"shl","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"add","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"from_small","core::num::flt2dec::bignum","Makes a bignum from one digit.",2,{"inputs":[{"name":"big32x36"},{"name":"u32"}],"output":{"name":"big32x36"}}],[11,"from_u64","","Makes a bignum from `u64` value.",2,{"inputs":[{"name":"big32x36"},{"name":"u64"}],"output":{"name":"big32x36"}}],[11,"is_zero","","Returns true if the bignum is zero.",2,{"inputs":[{"name":"big32x36"}],"output":{"name":"bool"}}],[11,"add","","Adds `other` to itself and returns its own mutable reference.",2,{"inputs":[{"name":"big32x36"},{"name":"big32x36"}],"output":{"name":"big32x36"}}],[11,"sub","","Subtracts `other` from itself and returns its own mutable reference.",2,{"inputs":[{"name":"big32x36"},{"name":"big32x36"}],"output":{"name":"big32x36"}}],[11,"mul_small","","Multiplies itself by a digit-sized `other` and returns its own\nmutable reference.",2,{"inputs":[{"name":"big32x36"},{"name":"u32"}],"output":{"name":"big32x36"}}],[11,"mul_pow2","","Multiplies itself by `2^bits` and returns its own mutable reference.",2,{"inputs":[{"name":"big32x36"},{"name":"usize"}],"output":{"name":"big32x36"}}],[11,"mul_digits","","Multiplies itself by a number described by `other[0] + other[1] * 2^W +\nother[2] * 2^(2W) + ...` (where `W` is the number of bits in the digit type)\nand returns its own mutable reference.",2,null],[11,"div_rem_small","","Divides itself by a digit-sized `other` and returns its own\nmutable reference *and* the remainder.",2,null],[11,"eq","","",2,{"inputs":[{"name":"big32x36"},{"name":"big32x36"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"big32x36"},{"name":"big32x36"}],"output":{"name":"option"}}],[11,"cmp","","",2,{"inputs":[{"name":"big32x36"},{"name":"big32x36"}],"output":{"name":"ordering"}}],[11,"clone","","",2,{"inputs":[{"name":"big32x36"}],"output":{"name":"big32x36"}}],[11,"fmt","","",2,{"inputs":[{"name":"big32x36"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_small","core::num::flt2dec::bignum::tests","Makes a bignum from one digit.",3,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"from_u64","","Makes a bignum from `u64` value.",3,{"inputs":[{"name":"big8x3"},{"name":"u64"}],"output":{"name":"big8x3"}}],[11,"is_zero","","Returns true if the bignum is zero.",3,{"inputs":[{"name":"big8x3"}],"output":{"name":"bool"}}],[11,"add","","Adds `other` to itself and returns its own mutable reference.",3,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"sub","","Subtracts `other` from itself and returns its own mutable reference.",3,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"mul_small","","Multiplies itself by a digit-sized `other` and returns its own\nmutable reference.",3,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"mul_pow2","","Multiplies itself by `2^bits` and returns its own mutable reference.",3,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"big8x3"}}],[11,"mul_digits","","Multiplies itself by a number described by `other[0] + other[1] * 2^W +\nother[2] * 2^(2W) + ...` (where `W` is the number of bits in the digit type)\nand returns its own mutable reference.",3,null],[11,"div_rem_small","","Divides itself by a digit-sized `other` and returns its own\nmutable reference *and* the remainder.",3,null],[11,"eq","","",3,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",3,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"option"}}],[11,"cmp","","",3,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"ordering"}}],[11,"clone","","",3,{"inputs":[{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"fmt","","",3,{"inputs":[{"name":"big8x3"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","core::num::flt2dec::decoder","",4,{"inputs":[{"name":"decoded"},{"name":"decoded"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"decoded"},{"name":"decoded"}],"output":{"name":"bool"}}],[11,"fmt","","",4,{"inputs":[{"name":"decoded"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"decoded"}],"output":{"name":"decoded"}}],[11,"eq","","",5,{"inputs":[{"name":"fulldecoded"},{"name":"fulldecoded"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"fulldecoded"},{"name":"fulldecoded"}],"output":{"name":"bool"}}],[11,"fmt","","",5,{"inputs":[{"name":"fulldecoded"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"fulldecoded"}],"output":{"name":"fulldecoded"}}],[11,"fmt","core::num::flt2dec::strategy::grisu","",6,{"inputs":[{"name":"fp"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"fp"}],"output":{"name":"fp"}}],[11,"fmt","core::num::flt2dec","",7,{"inputs":[{"name":"part"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",7,{"inputs":[{"name":"part"},{"name":"part"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"part"},{"name":"part"}],"output":{"name":"bool"}}],[11,"clone","","",7,{"inputs":[{"name":"part"}],"output":{"name":"part"}}],[11,"len","","Returns the exact byte length of given part.",7,{"inputs":[{"name":"part"}],"output":{"name":"usize"}}],[11,"write","","Writes a part into the supplied buffer.\nReturns the number of written bytes, or `None` if the buffer is not enough.\n(It may still leave partially written bytes in the buffer; do not rely on that.)",7,null],[11,"clone","","",8,{"inputs":[{"name":"formatted"}],"output":{"name":"formatted"}}],[11,"len","","Returns the exact byte length of combined formatted result.",8,{"inputs":[{"name":"formatted"}],"output":{"name":"usize"}}],[11,"write","","Writes all formatted parts into the supplied buffer.\nReturns the number of written bytes, or `None` if the buffer is not enough.\n(It may still leave partially written bytes in the buffer; do not rely on that.)",8,null],[11,"fmt","","",9,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",9,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"clone","","",9,{"inputs":[{"name":"sign"}],"output":{"name":"sign"}}],[11,"fmt","core::num","",10,{"inputs":[{"name":"fpcategory"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",10,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"clone","","",10,{"inputs":[{"name":"fpcategory"}],"output":{"name":"fpcategory"}}],[11,"eq","","",11,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"clone","","",11,{"inputs":[{"name":"parseinterror"}],"output":{"name":"parseinterror"}}],[11,"fmt","","",11,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",12,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",12,{"inputs":[{"name":"interrorkind"}],"output":{"name":"interrorkind"}}],[11,"fmt","","",12,{"inputs":[{"name":"interrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",11,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",13,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"clone","","",13,{"inputs":[{"name":"parsefloaterror"}],"output":{"name":"parsefloaterror"}}],[11,"fmt","","",13,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",14,{"inputs":[{"name":"floaterrorkind"},{"name":"floaterrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"floaterrorkind"},{"name":"floaterrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",14,{"inputs":[{"name":"floaterrorkind"}],"output":{"name":"floaterrorkind"}}],[11,"fmt","","",14,{"inputs":[{"name":"floaterrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",13,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::nonzero","",15,null],[11,"fmt","","",15,{"inputs":[{"name":"nonzero"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",15,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"option"}}],[11,"lt","","",15,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"le","","",15,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"gt","","",15,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ge","","",15,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"cmp","","",15,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"ordering"}}],[11,"eq","","",15,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"clone","","",15,{"inputs":[{"name":"nonzero"}],"output":{"name":"nonzero"}}],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually \"non-zero\".",15,{"inputs":[{"name":"nonzero"},{"name":"t"}],"output":{"name":"nonzero"}}],[11,"deref","","",15,{"inputs":[{"name":"nonzero"}],"output":{"name":"t"}}],[11,"new","core::ptr","Creates a new `Unique`.",16,null],[11,"get","","Dereferences the content.",16,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"get_mut","","Mutably dereferences the content.",16,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"deref","","",16,null],[11,"fmt","","",16,{"inputs":[{"name":"unique"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","core::marker","",17,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",17,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"option"}}],[11,"lt","","",17,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"le","","",17,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"gt","","",17,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"ge","","",17,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"eq","","",17,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"clone","","",17,{"inputs":[{"name":"nocopy"}],"output":{"name":"nocopy"}}],[11,"hash","","",18,null],[11,"eq","","",18,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",18,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"option"}}],[11,"cmp","","",18,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"ordering"}}],[11,"clone","","",18,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[11,"eq","core::ops","",19,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"clone","","",19,{"inputs":[{"name":"rangefull"}],"output":{"name":"rangefull"}}],[11,"fmt","","",19,{"inputs":[{"name":"rangefull"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",20,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"ne","","",20,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"clone","","",20,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"fmt","","",20,{"inputs":[{"name":"range"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",21,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"ne","","",21,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"clone","","",21,{"inputs":[{"name":"rangefrom"}],"output":{"name":"rangefrom"}}],[11,"fmt","","",21,{"inputs":[{"name":"rangefrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",22,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"clone","","",22,{"inputs":[{"name":"rangeto"}],"output":{"name":"rangeto"}}],[11,"fmt","","",22,{"inputs":[{"name":"rangeto"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cmp","",23,{"inputs":[{"name":"ordering"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",23,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"clone","","",23,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"reverse","","Reverse the `Ordering`.",23,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"cmp","","",23,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",23,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"fmt","","",24,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",24,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is","","Returns true if the boxed type is the same as `T`",24,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",24,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",24,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",24,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",24,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",24,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"hash","core::any","",25,null],[11,"fmt","","",25,{"inputs":[{"name":"typeid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",25,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"clone","","",25,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",25,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"default","core::atomic","",26,{"inputs":[{"name":"atomicbool"}],"output":{"name":"atomicbool"}}],[11,"default","","",27,{"inputs":[{"name":"atomicisize"}],"output":{"name":"atomicisize"}}],[11,"default","","",28,{"inputs":[{"name":"atomicusize"}],"output":{"name":"atomicusize"}}],[11,"default","","",29,{"inputs":[{"name":"atomicptr"}],"output":{"name":"atomicptr"}}],[11,"clone","","",30,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"new","","Creates a new `AtomicBool`.",26,{"inputs":[{"name":"atomicbool"},{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",26,{"inputs":[{"name":"atomicbool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"store","","Stores a value into the bool.",26,null],[11,"swap","","Stores a value into the bool, returning the old value.",26,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",26,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_and","","Logical \"and\" with a boolean value.",26,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_nand","","Logical \"nand\" with a boolean value.",26,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_or","","Logical \"or\" with a boolean value.",26,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_xor","","Logical \"xor\" with a boolean value.",26,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AtomicIsize`.",27,{"inputs":[{"name":"atomicisize"},{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the isize.",27,{"inputs":[{"name":"atomicisize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"store","","Stores a value into the isize.",27,null],[11,"swap","","Stores a value into the isize, returning the old value.",27,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_and_swap","","Stores a value into the `isize` if the current value is the same as the `current` value.",27,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_add","","Add an isize to the current value, returning the previous value.",27,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_sub","","Subtract an isize from the current value, returning the previous value.",27,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_and","","Bitwise and with the current isize, returning the previous value.",27,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_or","","Bitwise or with the current isize, returning the previous value.",27,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_xor","","Bitwise xor with the current isize, returning the previous value.",27,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"new","","Creates a new `AtomicUsize`.",28,{"inputs":[{"name":"atomicusize"},{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the usize.",28,{"inputs":[{"name":"atomicusize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"store","","Stores a value into the usize.",28,null],[11,"swap","","Stores a value into the usize, returning the old value.",28,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_and_swap","","Stores a value into the `usize` if the current value is the same as the `current` value.",28,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_add","","Add to the current usize, returning the previous value.",28,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_sub","","Subtract from the current usize, returning the previous value.",28,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_and","","Bitwise and with the current usize, returning the previous value.",28,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_or","","Bitwise or with the current usize, returning the previous value.",28,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_xor","","Bitwise xor with the current usize, returning the previous value.",28,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"new","","Creates a new `AtomicPtr`.",29,null],[11,"load","","Loads a value from the pointer.",29,null],[11,"store","","Stores a value into the pointer.",29,null],[11,"swap","","Stores a value into the pointer, returning the old value.",29,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",29,null],[11,"fmt","","",28,{"inputs":[{"name":"atomicusize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",27,{"inputs":[{"name":"atomicisize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",26,{"inputs":[{"name":"atomicbool"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",29,{"inputs":[{"name":"atomicptr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","core::cell","Creates a new `Cell` containing the given value.",31,{"inputs":[{"name":"cell"},{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",31,{"inputs":[{"name":"cell"}],"output":{"name":"t"}}],[11,"set","","Sets the contained value.",31,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",31,{"inputs":[{"name":"cell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",31,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"default","","",31,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"eq","","",31,{"inputs":[{"name":"cell"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"fmt","","",32,{"inputs":[{"name":"borrowstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",32,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"clone","","",32,{"inputs":[{"name":"borrowstate"}],"output":{"name":"borrowstate"}}],[11,"new","","Creates a new `RefCell` containing `value`.",33,{"inputs":[{"name":"refcell"},{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",33,{"inputs":[{"name":"refcell"}],"output":{"name":"t"}}],[11,"borrow_state","","Query the current state of this `RefCell`",33,{"inputs":[{"name":"refcell"}],"output":{"name":"borrowstate"}}],[11,"borrow","","Immutably borrows the wrapped value.",33,{"inputs":[{"name":"refcell"}],"output":{"name":"ref"}}],[11,"borrow_mut","","Mutably borrows the wrapped value.",33,{"inputs":[{"name":"refcell"}],"output":{"name":"refmut"}}],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",33,{"inputs":[{"name":"refcell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",33,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"default","","",33,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"eq","","",33,{"inputs":[{"name":"refcell"},{"name":"refcell"}],"output":{"name":"bool"}}],[11,"drop","","",34,null],[11,"clone","","",34,{"inputs":[{"name":"borrowref"}],"output":{"name":"borrowref"}}],[11,"deref","","",35,{"inputs":[{"name":"ref"}],"output":{"name":"t"}}],[11,"clone","","Copies a `Ref`.",35,{"inputs":[{"name":"ref"},{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",35,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"filter_map","","Make a new `Ref` for a optional component of the borrowed data, e.g. an\nenum variant.",35,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"option"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",36,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"filter_map","","Make a new `RefMut` for a optional component of the borrowed data, e.g.\nan enum variant.",36,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"option"}}],[11,"drop","","",37,null],[11,"deref","","",36,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"deref_mut","","",36,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",38,{"inputs":[{"name":"unsafecell"},{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",38,{"inputs":[{"name":"unsafecell"}],"output":{"name":"t"}}],[11,"get","","Gets a mutable pointer to the wrapped value.",38,null],[11,"clone","core::char","",39,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"escapeunicode"}}],[11,"clone","","",40,{"inputs":[{"name":"escapeunicodestate"}],"output":{"name":"escapeunicodestate"}}],[11,"next","","",39,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"option"}}],[11,"clone","","",41,{"inputs":[{"name":"escapedefault"}],"output":{"name":"escapedefault"}}],[11,"clone","","",42,{"inputs":[{"name":"escapedefaultstate"}],"output":{"name":"escapedefaultstate"}}],[11,"next","","",41,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"clone","core::iter","",43,{"inputs":[{"name":"rev"}],"output":{"name":"rev"}}],[11,"next","","",43,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"size_hint","","",43,null],[11,"next_back","","",43,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"indexable","","",43,{"inputs":[{"name":"rev"}],"output":{"name":"usize"}}],[11,"idx","","",43,{"inputs":[{"name":"rev"},{"name":"usize"}],"output":{"name":"option"}}],[11,"fmt","","",44,{"inputs":[{"name":"minmaxresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",44,{"inputs":[{"name":"minmaxresult"},{"name":"minmaxresult"}],"output":{"name":"bool"}}],[11,"ne","","",44,{"inputs":[{"name":"minmaxresult"},{"name":"minmaxresult"}],"output":{"name":"bool"}}],[11,"clone","","",44,{"inputs":[{"name":"minmaxresult"}],"output":{"name":"minmaxresult"}}],[11,"into_option","","`into_option` creates an `Option` of type `(T,T)`. The returned `Option`\nhas variant `None` if and only if the `MinMaxResult` has variant\n`NoElements`. Otherwise variant `Some(x,y)` is returned where `x <= y`.\nIf `MinMaxResult` has variant `OneElement(x)`, performing this operation\nwill make one clone of `x`.",44,{"inputs":[{"name":"minmaxresult"}],"output":{"name":"option"}}],[11,"clone","","",45,{"inputs":[{"name":"cloned"}],"output":{"name":"cloned"}}],[11,"next","","",45,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"size_hint","","",45,null],[11,"next_back","","",45,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"indexable","","",45,{"inputs":[{"name":"cloned"}],"output":{"name":"usize"}}],[11,"idx","","",45,{"inputs":[{"name":"cloned"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",46,{"inputs":[{"name":"cycle"}],"output":{"name":"cycle"}}],[11,"next","","",46,{"inputs":[{"name":"cycle"}],"output":{"name":"option"}}],[11,"size_hint","","",46,null],[11,"indexable","","",46,{"inputs":[{"name":"cycle"}],"output":{"name":"usize"}}],[11,"idx","","",46,{"inputs":[{"name":"cycle"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",47,{"inputs":[{"name":"chain"}],"output":{"name":"chain"}}],[11,"next","","",47,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"count","","",47,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"nth","","",47,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",47,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"size_hint","","",47,null],[11,"next_back","","",47,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"indexable","","",47,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"idx","","",47,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",48,{"inputs":[{"name":"zip"}],"output":{"name":"zip"}}],[11,"next","","",48,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",48,null],[11,"next_back","","",48,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"indexable","","",48,{"inputs":[{"name":"zip"}],"output":{"name":"usize"}}],[11,"idx","","",48,{"inputs":[{"name":"zip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",49,{"inputs":[{"name":"map"}],"output":{"name":"map"}}],[11,"next","","",49,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"size_hint","","",49,null],[11,"next_back","","",49,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"indexable","","",49,{"inputs":[{"name":"map"}],"output":{"name":"usize"}}],[11,"idx","","",49,{"inputs":[{"name":"map"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",50,{"inputs":[{"name":"filter"}],"output":{"name":"filter"}}],[11,"next","","",50,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"size_hint","","",50,null],[11,"next_back","","",50,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"clone","","",51,{"inputs":[{"name":"filtermap"}],"output":{"name":"filtermap"}}],[11,"next","","",51,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"size_hint","","",51,null],[11,"next_back","","",51,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"clone","","",52,{"inputs":[{"name":"enumerate"}],"output":{"name":"enumerate"}}],[11,"next","","# Overflow Behavior",52,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"size_hint","","",52,null],[11,"nth","","",52,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",52,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"next_back","","",52,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"indexable","","",52,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"idx","","",52,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",53,{"inputs":[{"name":"peekable"}],"output":{"name":"peekable"}}],[11,"next","","",53,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"count","","",53,{"inputs":[{"name":"peekable"}],"output":{"name":"usize"}}],[11,"nth","","",53,{"inputs":[{"name":"peekable"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",53,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"size_hint","","",53,null],[11,"peek","","Returns a reference to the next element of the iterator with out\nadvancing it, or None if the iterator is exhausted.",53,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"is_empty","","Checks whether peekable iterator is empty or not.",53,{"inputs":[{"name":"peekable"}],"output":{"name":"bool"}}],[11,"clone","","",54,{"inputs":[{"name":"skipwhile"}],"output":{"name":"skipwhile"}}],[11,"next","","",54,{"inputs":[{"name":"skipwhile"}],"output":{"name":"option"}}],[11,"size_hint","","",54,null],[11,"clone","","",55,{"inputs":[{"name":"takewhile"}],"output":{"name":"takewhile"}}],[11,"next","","",55,{"inputs":[{"name":"takewhile"}],"output":{"name":"option"}}],[11,"size_hint","","",55,null],[11,"clone","","",56,{"inputs":[{"name":"skip"}],"output":{"name":"skip"}}],[11,"next","","",56,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"nth","","",56,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",56,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"last","","",56,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"size_hint","","",56,null],[11,"indexable","","",56,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"idx","","",56,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",57,{"inputs":[{"name":"take"}],"output":{"name":"take"}}],[11,"next","","",57,{"inputs":[{"name":"take"}],"output":{"name":"option"}}],[11,"nth","","",57,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"size_hint","","",57,null],[11,"indexable","","",57,{"inputs":[{"name":"take"}],"output":{"name":"usize"}}],[11,"idx","","",57,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",58,{"inputs":[{"name":"scan"}],"output":{"name":"scan"}}],[11,"next","","",58,{"inputs":[{"name":"scan"}],"output":{"name":"option"}}],[11,"size_hint","","",58,null],[11,"clone","","",59,{"inputs":[{"name":"flatmap"}],"output":{"name":"flatmap"}}],[11,"next","","",59,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"size_hint","","",59,null],[11,"next_back","","",59,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"clone","","",60,{"inputs":[{"name":"fuse"}],"output":{"name":"fuse"}}],[11,"next","","",60,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"nth","","",60,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",60,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"count","","",60,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"size_hint","","",60,null],[11,"next_back","","",60,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"indexable","","",60,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"idx","","",60,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"reset_fuse","","Resets the `Fuse` such that the next call to `.next()` or\n`.next_back()` will call the underlying iterator again even if it\npreviously returned `None`.",60,null],[11,"clone","","",61,{"inputs":[{"name":"inspect"}],"output":{"name":"inspect"}}],[11,"next","","",61,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"size_hint","","",61,null],[11,"next_back","","",61,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"indexable","","",61,{"inputs":[{"name":"inspect"}],"output":{"name":"usize"}}],[11,"idx","","",61,{"inputs":[{"name":"inspect"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",62,{"inputs":[{"name":"unfold"}],"output":{"name":"unfold"}}],[11,"new","","Creates a new iterator with the specified closure as the \"iterator\nfunction\" and an initial state to eventually pass to the closure",62,{"inputs":[{"name":"unfold"},{"name":"st"},{"name":"f"}],"output":{"name":"unfold"}}],[11,"next","","",62,{"inputs":[{"name":"unfold"}],"output":{"name":"option"}}],[11,"size_hint","","",62,null],[11,"clone","","",63,{"inputs":[{"name":"stepby"}],"output":{"name":"stepby"}}],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",21,{"inputs":[{"name":"rangefrom"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",20,{"inputs":[{"name":"range"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"next","core::iter","",63,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",63,null],[11,"clone","","",64,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[11,"next","","",64,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",64,null],[11,"next_back","","",64,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"next","","",63,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",63,null],[11,"next","core::ops","",20,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",20,null],[11,"next_back","","",20,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next","","",21,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"clone","core::iter","",65,{"inputs":[{"name":"repeat"}],"output":{"name":"repeat"}}],[11,"next","","",65,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"size_hint","","",65,null],[11,"next_back","","",65,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"indexable","","",65,{"inputs":[{"name":"repeat"}],"output":{"name":"usize"}}],[11,"idx","","",65,{"inputs":[{"name":"repeat"},{"name":"usize"}],"output":{"name":"option"}}],[11,"next","","",66,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"size_hint","","",66,null],[11,"next_back","","",66,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"len","","",66,{"inputs":[{"name":"empty"}],"output":{"name":"usize"}}],[11,"clone","","",66,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"default","","",66,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"clone","","",67,{"inputs":[{"name":"once"}],"output":{"name":"once"}}],[11,"next","","",67,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"size_hint","","",67,null],[11,"next_back","","",67,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"len","","",67,{"inputs":[{"name":"once"}],"output":{"name":"usize"}}],[11,"hash","core::option","",0,null],[11,"fmt","","",0,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",0,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"default","","",0,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",0,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"clone","","",68,{"inputs":[{"name":"item"}],"output":{"name":"item"}}],[11,"next","","",68,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"size_hint","","",68,null],[11,"next_back","","",68,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"next","","",69,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",69,null],[11,"next_back","","",69,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",69,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",70,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",70,null],[11,"next_back","","",70,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",71,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",71,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",71,null],[11,"next_back","","",71,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",0,{"inputs":[{"name":"option"},{"name":"i"}],"output":{"name":"option"}}],[11,"clone","core::raw","",72,{"inputs":[{"name":"slice"}],"output":{"name":"slice"}}],[11,"clone","","",73,{"inputs":[{"name":"traitobject"}],"output":{"name":"traitobject"}}],[11,"hash","core::result","",74,null],[11,"fmt","","",74,{"inputs":[{"name":"result"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",74,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",74,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"option"}}],[11,"lt","","",74,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"le","","",74,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"gt","","",74,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ge","","",74,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"eq","","",74,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ne","","",74,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"clone","","",74,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"is_ok","","Returns true if the result is `Ok`",74,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"is_err","","Returns true if the result is `Err`",74,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"ok","","Converts from `Result<T, E>` to `Option<T>`",74,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"err","","Converts from `Result<T, E>` to `Option<E>`",74,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"as_ref","","Converts from `Result<T, E>` to `Result<&T, &E>`",74,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_mut","","Converts from `Result<T, E>` to `Result<&mut T, &mut E>`",74,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_slice","","Converts from `Result<T, E>` to `&[T]` (without copying)",74,null],[11,"as_mut_slice","","Converts from `Result<T, E>` to `&mut [T]` (without copying)",74,null],[11,"map","","Maps a `Result<T, E>` to `Result<U, E>` by applying a function to an\ncontained `Ok` value, leaving an `Err` value untouched.",74,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"map_err","","Maps a `Result<T, E>` to `Result<T, F>` by applying a function to an\ncontained `Err` value, leaving an `Ok` value untouched.",74,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",74,{"inputs":[{"name":"result"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",74,{"inputs":[{"name":"result"}],"output":{"name":"itermut"}}],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",74,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",74,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",74,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",74,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",74,{"inputs":[{"name":"result"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",74,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"t"}}],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",74,{"inputs":[{"name":"result"}],"output":{"name":"t"}}],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",74,{"inputs":[{"name":"result"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",74,{"inputs":[{"name":"result"}],"output":{"name":"e"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",74,{"inputs":[{"name":"result"}],"output":{"name":"intoiter"}}],[11,"next","","",75,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",75,null],[11,"next_back","","",75,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",75,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",76,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",76,null],[11,"next_back","","",76,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",77,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",77,null],[11,"next_back","","",77,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",74,{"inputs":[{"name":"result"},{"name":"i"}],"output":{"name":"result"}}],[11,"fmt","core::simd","",78,{"inputs":[{"name":"i8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",78,{"inputs":[{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"fmt","","",79,{"inputs":[{"name":"i16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",79,{"inputs":[{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"fmt","","",80,{"inputs":[{"name":"i32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",80,{"inputs":[{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"fmt","","",81,{"inputs":[{"name":"i64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",81,{"inputs":[{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"fmt","","",82,{"inputs":[{"name":"u8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",82,{"inputs":[{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"fmt","","",83,{"inputs":[{"name":"u16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",83,{"inputs":[{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"fmt","","",84,{"inputs":[{"name":"u32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",84,{"inputs":[{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"fmt","","",85,{"inputs":[{"name":"u64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",85,{"inputs":[{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"fmt","","",86,{"inputs":[{"name":"f32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",86,{"inputs":[{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"fmt","","",87,{"inputs":[{"name":"f64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",87,{"inputs":[{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"as_slice","core::slice","View the underlying data as a subslice of the original data.",88,null],[11,"next","","",88,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",88,null],[11,"count","","",88,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"nth","","",88,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",88,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",88,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",88,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"indexable","","",88,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"idx","","",88,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[11,"into_slice","","View the underlying data as a subslice of the original data.",89,null],[11,"next","","",89,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",89,null],[11,"count","","",89,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"nth","","",89,{"inputs":[{"name":"itermut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",89,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next_back","","",89,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",90,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",90,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"size_hint","","",90,null],[11,"next_back","","",90,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",90,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",91,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",91,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"size_hint","","",91,null],[11,"next_back","","",91,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",92,{"inputs":[{"name":"genericsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",92,null],[11,"next","","",93,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"size_hint","","",93,null],[11,"next","","",94,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",94,null],[11,"next","","",95,{"inputs":[{"name":"splitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",95,null],[11,"next","","",96,{"inputs":[{"name":"rsplitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",96,null],[11,"clone","","",97,{"inputs":[{"name":"windows"}],"output":{"name":"windows"}}],[11,"next","","",97,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"size_hint","","",97,null],[11,"next_back","","",97,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"indexable","","",97,{"inputs":[{"name":"windows"}],"output":{"name":"usize"}}],[11,"idx","","",97,{"inputs":[{"name":"windows"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",98,{"inputs":[{"name":"chunks"}],"output":{"name":"chunks"}}],[11,"next","","",98,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"size_hint","","",98,null],[11,"next_back","","",98,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"indexable","","",98,{"inputs":[{"name":"chunks"}],"output":{"name":"usize"}}],[11,"idx","","",98,{"inputs":[{"name":"chunks"},{"name":"usize"}],"output":{"name":"option"}}],[11,"next","","",99,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"size_hint","","",99,null],[11,"next_back","","",99,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"fmt","core::str::pattern","",100,{"inputs":[{"name":"searchstep"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",100,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"ne","","",100,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"clone","","",100,{"inputs":[{"name":"searchstep"}],"output":{"name":"searchstep"}}],[11,"clone","","",101,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"chareqsearcher"}}],[11,"into_searcher","","",102,{"inputs":[{"name":"chareqpattern"},{"name":"str"}],"output":{"name":"chareqsearcher"}}],[11,"haystack","","",101,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"str"}}],[11,"next","","",101,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"next_back","","",101,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"clone","","",103,{"inputs":[{"name":"charsearcher"}],"output":{"name":"charsearcher"}}],[11,"haystack","","",103,{"inputs":[{"name":"charsearcher"}],"output":{"name":"str"}}],[11,"next","","",103,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",103,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",103,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",103,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",103,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",103,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"clone","","",104,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"charslicesearcher"}}],[11,"haystack","","",104,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"str"}}],[11,"next","","",104,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",104,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",104,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",104,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",104,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",104,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"clone","","",105,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"charpredicatesearcher"}}],[11,"haystack","","",105,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"str"}}],[11,"next","","",105,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",105,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",105,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",105,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",105,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",105,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"fmt","","",106,{"inputs":[{"name":"strsearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",106,{"inputs":[{"name":"strsearcher"}],"output":{"name":"strsearcher"}}],[11,"fmt","","",107,{"inputs":[{"name":"strsearcherimpl"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",107,{"inputs":[{"name":"strsearcherimpl"}],"output":{"name":"strsearcherimpl"}}],[11,"fmt","","",108,{"inputs":[{"name":"emptyneedle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",108,{"inputs":[{"name":"emptyneedle"}],"output":{"name":"emptyneedle"}}],[11,"haystack","","",106,{"inputs":[{"name":"strsearcher"}],"output":{"name":"str"}}],[11,"next","","",106,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",106,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",106,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",106,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"fmt","","",109,{"inputs":[{"name":"twowaysearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",109,{"inputs":[{"name":"twowaysearcher"}],"output":{"name":"twowaysearcher"}}],[11,"use_early_reject","","",110,{"inputs":[{"name":"matchonly"}],"output":{"name":"bool"}}],[11,"rejecting","","",110,null],[11,"matching","","",110,null],[11,"use_early_reject","","",111,{"inputs":[{"name":"rejectandmatch"}],"output":{"name":"bool"}}],[11,"rejecting","","",111,null],[11,"matching","","",111,null],[11,"eq","core::str","",112,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"ne","","",112,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"clone","","",112,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"parseboolerror"}}],[11,"fmt","","",112,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",112,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",113,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",113,{"inputs":[{"name":"utf8error"}],"output":{"name":"utf8error"}}],[11,"eq","","",113,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"ne","","",113,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",113,{"inputs":[{"name":"utf8error"}],"output":{"name":"usize"}}],[11,"fmt","","",113,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",114,{"inputs":[{"name":"chars"}],"output":{"name":"chars"}}],[11,"next","","",114,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"size_hint","","",114,null],[11,"next_back","","",114,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"clone","","",115,{"inputs":[{"name":"charindices"}],"output":{"name":"charindices"}}],[11,"next","","",115,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"size_hint","","",115,null],[11,"next_back","","",115,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"clone","","",116,{"inputs":[{"name":"bytes"}],"output":{"name":"bytes"}}],[11,"clone","","",117,{"inputs":[{"name":"bytesderef"}],"output":{"name":"bytesderef"}}],[11,"call","","",117,null],[11,"call_mut","","",117,null],[11,"call_once","","",117,null],[11,"next","","",116,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"size_hint","","",116,null],[11,"next_back","","",116,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"len","","",116,{"inputs":[{"name":"bytes"}],"output":{"name":"usize"}}],[11,"clone","","",118,{"inputs":[{"name":"splitinternal"}],"output":{"name":"splitinternal"}}],[11,"next","","",119,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"clone","","",119,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",120,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"clone","","",120,{"inputs":[{"name":"rsplit"}],"output":{"name":"rsplit"}}],[11,"next_back","","",119,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"next_back","","",120,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"next","","",121,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"clone","","",121,{"inputs":[{"name":"splitterminator"}],"output":{"name":"splitterminator"}}],[11,"next","","",122,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",122,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"rsplitterminator"}}],[11,"next_back","","",121,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"next_back","","",122,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",123,{"inputs":[{"name":"splitninternal"}],"output":{"name":"splitninternal"}}],[11,"next","","",124,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"clone","","",124,{"inputs":[{"name":"splitn"}],"output":{"name":"splitn"}}],[11,"next","","",125,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"clone","","",125,{"inputs":[{"name":"rsplitn"}],"output":{"name":"rsplitn"}}],[11,"clone","","",126,{"inputs":[{"name":"matchindicesinternal"}],"output":{"name":"matchindicesinternal"}}],[11,"next","","",127,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"clone","","",127,{"inputs":[{"name":"matchindices"}],"output":{"name":"matchindices"}}],[11,"next","","",128,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",128,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"rmatchindices"}}],[11,"next_back","","",127,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"next_back","","",128,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",129,{"inputs":[{"name":"matchesinternal"}],"output":{"name":"matchesinternal"}}],[11,"next","","",130,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"clone","","",130,{"inputs":[{"name":"matches"}],"output":{"name":"matches"}}],[11,"next","","",131,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",131,{"inputs":[{"name":"rmatches"}],"output":{"name":"rmatches"}}],[11,"next_back","","",130,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"next_back","","",131,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",132,{"inputs":[{"name":"lines"}],"output":{"name":"lines"}}],[11,"next","","",132,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"size_hint","","",132,null],[11,"next_back","","",132,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"clone","","",133,{"inputs":[{"name":"linesany"}],"output":{"name":"linesany"}}],[11,"clone","","",134,{"inputs":[{"name":"linesanymap"}],"output":{"name":"linesanymap"}}],[11,"call","","",134,null],[11,"call_mut","","",134,null],[11,"call_once","","",134,null],[11,"next","","",133,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"size_hint","","",133,null],[11,"next_back","","",133,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"clone","","",135,{"inputs":[{"name":"charrange"}],"output":{"name":"charrange"}}],[11,"new","core::hash::sip","Creates a new `SipHasher` with the two initial keys set to 0.",136,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",136,{"inputs":[{"name":"siphasher"},{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",136,null],[11,"finish","","",136,{"inputs":[{"name":"siphasher"}],"output":{"name":"u64"}}],[11,"clone","","",136,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"default","","",136,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"eq","core::fmt::num","",137,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"ne","","",137,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"clone","","",137,{"inputs":[{"name":"binary"}],"output":{"name":"binary"}}],[11,"eq","","",138,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"ne","","",138,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"clone","","",138,{"inputs":[{"name":"octal"}],"output":{"name":"octal"}}],[11,"eq","","",139,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"ne","","",139,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"clone","","",139,{"inputs":[{"name":"decimal"}],"output":{"name":"decimal"}}],[11,"eq","","",140,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"ne","","",140,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"clone","","",140,{"inputs":[{"name":"lowerhex"}],"output":{"name":"lowerhex"}}],[11,"eq","","",141,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"ne","","",141,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"clone","","",141,{"inputs":[{"name":"upperhex"}],"output":{"name":"upperhex"}}],[11,"eq","","",142,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"ne","","",142,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"clone","","",142,{"inputs":[{"name":"radix"}],"output":{"name":"radix"}}],[11,"clone","","",143,{"inputs":[{"name":"radixfmt"}],"output":{"name":"radixfmt"}}],[11,"fmt","","",143,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",143,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",143,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",143,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",143,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",143,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",143,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",143,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",143,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",143,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",143,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",143,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",143,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",143,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",143,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",143,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",143,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",143,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",143,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",143,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"write_str","core::fmt::builders","",144,{"inputs":[{"name":"padadapter"},{"name":"str"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated struct output.",145,{"inputs":[{"name":"debugstruct"},{"name":"str"},{"name":"debug"}],"output":{"name":"debugstruct"}}],[11,"finish","","Finishes output and returns any error encountered.",145,{"inputs":[{"name":"debugstruct"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated tuple struct output.",146,{"inputs":[{"name":"debugtuple"},{"name":"debug"}],"output":{"name":"debugtuple"}}],[11,"finish","","Finishes output and returns any error encountered.",146,{"inputs":[{"name":"debugtuple"}],"output":{"name":"result"}}],[11,"formatter","","Returns the wrapped `Formatter`.",146,{"inputs":[{"name":"debugtuple"}],"output":{"name":"formatter"}}],[11,"finish","","",147,null],[11,"entry","","Adds a new entry to the set output.",148,{"inputs":[{"name":"debugset"},{"name":"debug"}],"output":{"name":"debugset"}}],[11,"entries","","Adds the contents of an iterator of entries to the set output.",148,{"inputs":[{"name":"debugset"},{"name":"i"}],"output":{"name":"debugset"}}],[11,"finish","","Finishes output and returns any error encountered.",148,{"inputs":[{"name":"debugset"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the list output.",149,{"inputs":[{"name":"debuglist"},{"name":"debug"}],"output":{"name":"debuglist"}}],[11,"entries","","Adds the contents of an iterator of entries to the list output.",149,{"inputs":[{"name":"debuglist"},{"name":"i"}],"output":{"name":"debuglist"}}],[11,"finish","","Finishes output and returns any error encountered.",149,{"inputs":[{"name":"debuglist"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the map output.",150,{"inputs":[{"name":"debugmap"},{"name":"debug"},{"name":"debug"}],"output":{"name":"debugmap"}}],[11,"entries","","Adds the contents of an iterator of entries to the map output.",150,{"inputs":[{"name":"debugmap"},{"name":"i"}],"output":{"name":"debugmap"}}],[11,"finish","","Finishes output and returns any error encountered.",150,{"inputs":[{"name":"debugmap"}],"output":{"name":"result"}}],[11,"clone","core::fmt::rt::v1","",151,{"inputs":[{"name":"argument"}],"output":{"name":"argument"}}],[11,"clone","","",152,{"inputs":[{"name":"formatspec"}],"output":{"name":"formatspec"}}],[11,"eq","","",153,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"ne","","",153,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"clone","","",153,{"inputs":[{"name":"alignment"}],"output":{"name":"alignment"}}],[11,"clone","","",154,{"inputs":[{"name":"count"}],"output":{"name":"count"}}],[11,"clone","","",155,{"inputs":[{"name":"position"}],"output":{"name":"position"}}],[11,"fmt","core::fmt","",156,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",156,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"clone","","",157,{"inputs":[{"name":"argumentv1"}],"output":{"name":"argumentv1"}}],[11,"clone","","",158,{"inputs":[{"name":"flagv1"}],"output":{"name":"flagv1"}}],[11,"clone","","",159,{"inputs":[{"name":"arguments"}],"output":{"name":"arguments"}}],[11,"fmt","","",159,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",159,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",160,{"inputs":[{"name":"formatter"},{"name":"bool"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",160,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",160,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_fmt","","Writes some formatted information into this instance",160,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"flags","","Flags for formatting (packed version of rt::Flag)",160,{"inputs":[{"name":"formatter"}],"output":{"name":"u32"}}],[11,"fill","","Character used as 'fill' whenever there is alignment",160,{"inputs":[{"name":"formatter"}],"output":{"name":"char"}}],[11,"align","","Flag indicating what form of alignment was requested",160,{"inputs":[{"name":"formatter"}],"output":{"name":"alignment"}}],[11,"width","","Optionally specified integer width that the output should be",160,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"precision","","Optionally specified precision for numeric types",160,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",160,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugstruct"}}],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",160,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugtuple"}}],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",160,{"inputs":[{"name":"formatter"}],"output":{"name":"debuglist"}}],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",160,{"inputs":[{"name":"formatter"}],"output":{"name":"debugset"}}],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",160,{"inputs":[{"name":"formatter"}],"output":{"name":"debugmap"}}],[11,"write_str","","",160,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","",160,{"inputs":[{"name":"formatter"},{"name":"char"}],"output":{"name":"result"}}],[11,"write_fmt","","",160,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"fmt","","",156,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::marker","",18,{"inputs":[{"name":"phantomdata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cell","",31,{"inputs":[{"name":"cell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",33,{"inputs":[{"name":"refcell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",35,{"inputs":[{"name":"ref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",36,{"inputs":[{"name":"refmut"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"Option","enum_primitive","The `Option` type. See [the module level documentation](index.html) for more.",null,null],[13,"None","","No value",0,null],[13,"Some","","Some value `T`",0,null],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the\nvalue cannot be represented by this value, the `None` is returned.",161,{"inputs":[{"name":"fromprimitive"},{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",161,{"inputs":[{"name":"fromprimitive"},{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",161,{"inputs":[{"name":"fromprimitive"},{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",161,{"inputs":[{"name":"fromprimitive"},{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",161,{"inputs":[{"name":"fromprimitive"},{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",161,{"inputs":[{"name":"fromprimitive"},{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",161,{"inputs":[{"name":"fromprimitive"},{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",161,{"inputs":[{"name":"fromprimitive"},{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",161,{"inputs":[{"name":"fromprimitive"},{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",161,{"inputs":[{"name":"fromprimitive"},{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",161,{"inputs":[{"name":"fromprimitive"},{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",161,{"inputs":[{"name":"fromprimitive"},{"name":"f64"}],"output":{"name":"option"}}],[14,"enum_from_primitive_impl_ty!","","Helper macro for internal use by `enum_from_primitive!`.",null,null],[14,"enum_from_primitive_impl!","","Helper macro for internal use by `enum_from_primitive!`.",null,null],[14,"enum_from_primitive!","","Wrap this macro around an `enum` declaration to get an\nautomatically generated implementation of `num::FromPrimitive`.",null,null]],"paths":[[4,"Option"],[3,"Wrapping"],[3,"Big32x36"],[3,"Big8x3"],[3,"Decoded"],[4,"FullDecoded"],[3,"Fp"],[4,"Part"],[3,"Formatted"],[4,"Sign"],[4,"FpCategory"],[3,"ParseIntError"],[4,"IntErrorKind"],[3,"ParseFloatError"],[4,"FloatErrorKind"],[3,"NonZero"],[3,"Unique"],[3,"NoCopy"],[3,"PhantomData"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"Ordering"],[8,"Any"],[3,"TypeId"],[3,"AtomicBool"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"AtomicPtr"],[4,"Ordering"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"BorrowRef"],[3,"Ref"],[3,"RefMut"],[3,"BorrowRefMut"],[3,"UnsafeCell"],[3,"EscapeUnicode"],[4,"EscapeUnicodeState"],[3,"EscapeDefault"],[4,"EscapeDefaultState"],[3,"Rev"],[4,"MinMaxResult"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"Unfold"],[3,"StepBy"],[3,"RangeInclusive"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Item"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Slice"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"i8x16"],[3,"i16x8"],[3,"i32x4"],[3,"i64x2"],[3,"u8x16"],[3,"u16x8"],[3,"u32x4"],[3,"u64x2"],[3,"f32x4"],[3,"f64x2"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"GenericSplitN"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[4,"SearchStep"],[3,"CharEqSearcher"],[3,"CharEqPattern"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[4,"StrSearcherImpl"],[3,"EmptyNeedle"],[3,"TwoWaySearcher"],[4,"MatchOnly"],[4,"RejectAndMatch"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"BytesDeref"],[3,"SplitInternal"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitNInternal"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndicesInternal"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"MatchesInternal"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"LinesAnyMap"],[3,"CharRange"],[3,"SipHasher"],[3,"Binary"],[3,"Octal"],[3,"Decimal"],[3,"LowerHex"],[3,"UpperHex"],[3,"Radix"],[3,"RadixFmt"],[3,"PadAdapter"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugInner"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Argument"],[3,"FormatSpec"],[4,"Alignment"],[4,"Count"],[4,"Position"],[3,"Error"],[3,"ArgumentV1"],[4,"FlagV1"],[3,"Arguments"],[3,"Formatter"],[8,"FromPrimitive"]]};
searchIndex['num'] = {"items":[[0,"","num","Simple numerics.",null,null],[5,"zero","","Returns the additive identity, `0`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"one","","Returns the multiplicative identity, `1`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"abs","","Computes the absolute value.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"abs_sub","","The positive difference of two numbers.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"signum","","Returns the sign of the number.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"pow","","Raises a value to the power of exp, using exponentiation by squaring.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"t"}}],[0,"bigint","","A Big integer (signed version: `BigInt`, unsigned version: `BigUint`).",null,null],[3,"BigUint","num::bigint","A big unsigned integer type.",null,null],[3,"RadixFmt","","",null,null],[3,"BigInt","","A big signed integer type.",null,null],[4,"Sign","","A Sign is a `BigInt`'s composing element.",null,null],[13,"Minus","","",0,null],[13,"NoSign","","",0,null],[13,"Plus","","",0,null],[4,"ParseBigIntError","","",null,null],[13,"ParseInt","","",1,null],[13,"Other","","",1,null],[0,"big_digit","","",null,null],[5,"from_doublebigdigit","num::bigint::big_digit","Split one `DoubleBigDigit` into two `BigDigit`s.",null,null],[5,"to_doublebigdigit","","Join two `BigDigit`s into one `DoubleBigDigit`",null,{"inputs":[{"name":"bigdigit"},{"name":"bigdigit"}],"output":{"name":"doublebigdigit"}}],[17,"BITS","","",null,null],[17,"BASE","","",null,null],[6,"BigDigit","num::bigint","A `BigDigit` is a `BigUint`'s composing element.",null,null],[6,"DoubleBigDigit","","A `DoubleBigDigit` is the internal type used to do the computations.  Its\nsize is the double of the size of `BigDigit`.",null,null],[17,"ZERO_BIG_DIGIT","","",null,null],[8,"ToBigUint","","A generic trait for converting a value to a `BigUint`.",null,null],[10,"to_biguint","","Converts the value of `self` to a `BigUint`.",2,{"inputs":[{"name":"tobiguint"}],"output":{"name":"option"}}],[8,"ToBigInt","","A generic trait for converting a value to a `BigInt`.",null,null],[10,"to_bigint","","Converts the value of `self` to a `BigInt`.",3,{"inputs":[{"name":"tobigint"}],"output":{"name":"option"}}],[8,"RandBigInt","","",null,null],[10,"gen_biguint","","Generate a random `BigUint` of the given bit size.",4,{"inputs":[{"name":"randbigint"},{"name":"usize"}],"output":{"name":"biguint"}}],[10,"gen_bigint","","Generate a random BigInt of the given bit size.",4,{"inputs":[{"name":"randbigint"},{"name":"usize"}],"output":{"name":"bigint"}}],[10,"gen_biguint_below","","Generate a random `BigUint` less than the given bound. Fails\nwhen the bound is zero.",4,{"inputs":[{"name":"randbigint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[10,"gen_biguint_range","","Generate a random `BigUint` within the given range. The lower\nbound is inclusive; the upper bound is exclusive. Fails when\nthe upper bound is not greater than the lower bound.",4,{"inputs":[{"name":"randbigint"},{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[10,"gen_bigint_range","","Generate a random `BigInt` within the given range. The lower\nbound is inclusive; the upper bound is exclusive. Fails when\nthe upper bound is not greater than the lower bound.",4,{"inputs":[{"name":"randbigint"},{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"fmt","","",5,{"inputs":[{"name":"biguint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"decode","","",5,{"inputs":[{"name":"biguint"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",5,{"inputs":[{"name":"biguint"},{"name":"__s"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"eq","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"option"}}],[11,"cmp","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"ordering"}}],[11,"default","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"hash","","",5,{"inputs":[{"name":"biguint"},{"name":"h"}],"output":null}],[11,"fmt","","",5,{"inputs":[{"name":"biguint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",5,{"inputs":[{"name":"biguint"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str_radix","","Creates and initializes a `BigUint`.",5,{"inputs":[{"name":"biguint"},{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"bitand","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"bitand","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"bitor","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"bitor","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"bitxor","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"bitxor","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"shl","","",5,{"inputs":[{"name":"biguint"},{"name":"usize"}],"output":{"name":"biguint"}}],[11,"shr","","",5,{"inputs":[{"name":"biguint"},{"name":"usize"}],"output":{"name":"biguint"}}],[11,"zero","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"is_zero","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"bool"}}],[11,"one","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"add","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"add","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"sub","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"sub","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"mul","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"mul","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"div","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"div","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"rem","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"rem","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"neg","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"checked_add","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"option"}}],[11,"checked_sub","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"option"}}],[11,"checked_mul","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"option"}}],[11,"checked_div","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"option"}}],[11,"div_rem","","",5,null],[11,"div_floor","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"mod_floor","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"div_mod_floor","","",5,null],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`.",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"divides","","Deprecated, use `is_multiple_of` instead.",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"bool"}}],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"bool"}}],[11,"is_even","","Returns `true` if the number is divisible by `2`.",5,{"inputs":[{"name":"biguint"}],"output":{"name":"bool"}}],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",5,{"inputs":[{"name":"biguint"}],"output":{"name":"bool"}}],[11,"to_i64","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"option"}}],[11,"to_u64","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"option"}}],[11,"from_i64","","",5,{"inputs":[{"name":"biguint"},{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",5,{"inputs":[{"name":"biguint"},{"name":"u64"}],"output":{"name":"option"}}],[11,"to_biguint","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"option"}}],[11,"to_biguint","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"option"}}],[11,"clone","","",7,{"inputs":[{"name":"radixfmt"}],"output":{"name":"radixfmt"}}],[11,"fmt","","",7,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates and initializes a `BigUint`.",5,{"inputs":[{"name":"biguint"},{"name":"vec"}],"output":{"name":"biguint"}}],[11,"from_slice","","Creates and initializes a `BigUint`.",5,null],[11,"from_bytes_be","","Creates and initializes a `BigUint`.",5,null],[11,"from_bytes_le","","Creates and initializes a `BigUint`.",5,null],[11,"to_bytes_le","","Returns the byte representation of the `BigUint` in little-endian byte order.",5,{"inputs":[{"name":"biguint"}],"output":{"name":"vec"}}],[11,"to_bytes_be","","Returns the byte representation of the `BigUint` in big-endian byte order.",5,{"inputs":[{"name":"biguint"}],"output":{"name":"vec"}}],[11,"parse_bytes","","Creates and initializes a `BigUint`.",5,null],[11,"bits","","Determines the fewest bits necessary to express the `BigUint`.",5,{"inputs":[{"name":"biguint"}],"output":{"name":"usize"}}],[11,"decode","","",0,{"inputs":[{"name":"sign"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",0,{"inputs":[{"name":"sign"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"sign"}],"output":{"name":"sign"}}],[11,"cmp","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"neg","","Negate Sign value.",0,{"inputs":[{"name":"sign"}],"output":{"name":"sign"}}],[11,"fmt","","",6,{"inputs":[{"name":"bigint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"decode","","",6,{"inputs":[{"name":"bigint"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",6,{"inputs":[{"name":"bigint"},{"name":"__s"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"eq","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"cmp","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"ordering"}}],[11,"default","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"fmt","","",6,{"inputs":[{"name":"bigint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",6,{"inputs":[{"name":"bigint"},{"name":"h"}],"output":null}],[11,"from_str","","",6,{"inputs":[{"name":"bigint"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str_radix","","Creates and initializes a BigInt.",6,{"inputs":[{"name":"bigint"},{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"shl","","",6,{"inputs":[{"name":"bigint"},{"name":"usize"}],"output":{"name":"bigint"}}],[11,"shr","","",6,{"inputs":[{"name":"bigint"},{"name":"usize"}],"output":{"name":"bigint"}}],[11,"zero","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"is_zero","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bool"}}],[11,"one","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"abs","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"abs_sub","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"signum","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"is_positive","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bool"}}],[11,"is_negative","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bool"}}],[11,"add","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"add","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"sub","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"sub","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"mul","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"mul","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"div","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"div","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"rem","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"rem","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"neg","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"checked_add","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_sub","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_mul","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_div","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"div_rem","","",6,null],[11,"div_floor","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"mod_floor","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"div_mod_floor","","",6,null],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`.",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"divides","","Deprecated, use `is_multiple_of` instead.",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bool"}}],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bool"}}],[11,"is_even","","Returns `true` if the number is divisible by `2`.",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bool"}}],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bool"}}],[11,"to_i64","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"option"}}],[11,"to_u64","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"option"}}],[11,"from_i64","","",6,{"inputs":[{"name":"bigint"},{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",6,{"inputs":[{"name":"bigint"},{"name":"u64"}],"output":{"name":"option"}}],[11,"to_bigint","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"option"}}],[11,"to_bigint","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"option"}}],[11,"new","","Creates and initializes a BigInt.",6,{"inputs":[{"name":"bigint"},{"name":"sign"},{"name":"vec"}],"output":{"name":"bigint"}}],[11,"from_biguint","","Creates and initializes a `BigInt`.",6,{"inputs":[{"name":"bigint"},{"name":"sign"},{"name":"biguint"}],"output":{"name":"bigint"}}],[11,"from_slice","","Creates and initializes a `BigInt`.",6,null],[11,"from_bytes_be","","Creates and initializes a `BigInt`.",6,null],[11,"from_bytes_le","","Creates and initializes a `BigInt`.",6,null],[11,"to_bytes_le","","Returns the sign and the byte representation of the `BigInt` in little-endian byte order.",6,null],[11,"to_bytes_be","","Returns the sign and the byte representation of the `BigInt` in big-endian byte order.",6,null],[11,"parse_bytes","","Creates and initializes a `BigInt`.",6,null],[11,"to_biguint","","Converts this `BigInt` into a `BigUint`, if it's not negative.",6,{"inputs":[{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_add","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_sub","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_mul","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_div","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"eq","","",1,{"inputs":[{"name":"parsebiginterror"},{"name":"parsebiginterror"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"parsebiginterror"},{"name":"parsebiginterror"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"parsebiginterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"parsebiginterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",1,{"inputs":[{"name":"parsebiginterror"}],"output":{"name":"str"}}],[11,"from","","",1,{"inputs":[{"name":"parsebiginterror"},{"name":"parseinterror"}],"output":{"name":"parsebiginterror"}}],[0,"complex","num","Complex numbers.",null,null],[3,"Complex","num::complex","A complex number in Cartesian form.",null,null],[12,"re","","Real portion of the complex number",8,null],[12,"im","","Imaginary portion of the complex number",8,null],[6,"Complex32","","",null,null],[6,"Complex64","","",null,null],[11,"fmt","","",8,{"inputs":[{"name":"complex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",8,null],[11,"clone","","",8,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"eq","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"bool"}}],[11,"decode","","",8,{"inputs":[{"name":"complex"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",8,{"inputs":[{"name":"complex"},{"name":"__s"}],"output":{"name":"result"}}],[11,"new","","Create a new Complex",8,{"inputs":[{"name":"complex"},{"name":"t"},{"name":"t"}],"output":{"name":"complex"}}],[11,"norm_sqr","","Returns the square of the norm (since `T` doesn't necessarily\nhave a sqrt function), i.e. `re^2 + im^2`.",8,{"inputs":[{"name":"complex"}],"output":{"name":"t"}}],[11,"scale","","Multiplies `self` by the scalar `t`.",8,{"inputs":[{"name":"complex"},{"name":"t"}],"output":{"name":"complex"}}],[11,"unscale","","Divides `self` by the scalar `t`.",8,{"inputs":[{"name":"complex"},{"name":"t"}],"output":{"name":"complex"}}],[11,"conj","","Returns the complex conjugate. i.e. `re - i im`",8,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"inv","","Returns `1/self`",8,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"norm","","Calculate |self|",8,{"inputs":[{"name":"complex"}],"output":{"name":"t"}}],[11,"arg","","Calculate the principal Arg of self.",8,{"inputs":[{"name":"complex"}],"output":{"name":"t"}}],[11,"to_polar","","Convert to polar form (r, theta), such that `self = r * exp(i\n* theta)`",8,null],[11,"from_polar","","Convert a polar representation into a complex number.",8,{"inputs":[{"name":"complex"},{"name":"t"},{"name":"t"}],"output":{"name":"complex"}}],[11,"add","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"add","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"sub","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"sub","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"mul","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"mul","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"div","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"div","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"neg","","",8,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"zero","","",8,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"is_zero","","",8,{"inputs":[{"name":"complex"}],"output":{"name":"bool"}}],[11,"one","","",8,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"fmt","","",8,{"inputs":[{"name":"complex"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"integer","num","Integer trait and functions.",null,null],[5,"div_rem","num::integer","Simultaneous integer division and modulus",null,null],[5,"div_floor","","Floored integer division",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"mod_floor","","Floored integer modulus",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",null,null],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`. The\nresult is always positive.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[8,"Integer","","",null,null],[10,"div_floor","","Floored integer division.",9,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"self"}}],[10,"mod_floor","","Floored integer modulo, satisfying:",9,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"self"}}],[10,"gcd","","Greatest Common Divisor (GCD).",9,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"self"}}],[10,"lcm","","Lowest Common Multiple (LCM).",9,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"self"}}],[10,"divides","","Deprecated, use `is_multiple_of` instead.",9,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"bool"}}],[10,"is_multiple_of","","Returns `true` if `other` is a multiple of `self`.",9,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"bool"}}],[10,"is_even","","Returns `true` if the number is even.",9,{"inputs":[{"name":"integer"}],"output":{"name":"bool"}}],[10,"is_odd","","Returns `true` if the number is odd.",9,{"inputs":[{"name":"integer"}],"output":{"name":"bool"}}],[10,"div_rem","","Simultaneous truncated integer division and modulus.\nReturns `(quotient, remainder)`.",9,null],[11,"div_mod_floor","","Simultaneous floored integer division and modulus.\nReturns `(quotient, remainder)`.",9,null],[0,"iter","num","External iterators for generic mathematics",null,null],[3,"Range","num::iter","An iterator over the range [start, stop)",null,null],[3,"RangeInclusive","","An iterator over the range [start, stop]",null,null],[3,"RangeStep","","An iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,null],[3,"RangeStepInclusive","","An iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,null],[5,"range","","Returns an iterator over the given range [start, stop) (that is, starting\nat start (inclusive), and ending at stop (exclusive)).",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"range"}}],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"rangeinclusive"}}],[5,"range_step","","Return an iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestep"}}],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestepinclusive"}}],[11,"clone","","",10,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"next","","",10,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",10,null],[11,"next_back","","",10,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"clone","","",11,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[11,"next","","",11,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",11,null],[11,"next_back","","",11,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"clone","","",12,{"inputs":[{"name":"rangestep"}],"output":{"name":"rangestep"}}],[11,"next","","",12,{"inputs":[{"name":"rangestep"}],"output":{"name":"option"}}],[11,"clone","","",13,{"inputs":[{"name":"rangestepinclusive"}],"output":{"name":"rangestepinclusive"}}],[11,"next","","",13,{"inputs":[{"name":"rangestepinclusive"}],"output":{"name":"option"}}],[0,"traits","num","Numeric traits for generic mathematics",null,null],[3,"ParseFloatError","num::traits","",null,null],[12,"kind","","",14,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",15,null],[13,"Invalid","","",15,null],[5,"cast","","Cast from one machine scalar to another.",null,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[8,"Num","","The base trait for numeric types",null,null],[16,"FromStrRadixErr","","Parse error for `from_str_radix`",16,null],[10,"from_str_radix","","Convert from a string and radix <= 36.",16,{"inputs":[{"name":"num"},{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",17,{"inputs":[{"name":"zero"}],"output":{"name":"self"}}],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",17,{"inputs":[{"name":"zero"}],"output":{"name":"bool"}}],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",18,{"inputs":[{"name":"one"}],"output":{"name":"self"}}],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can be negative).",null,null],[10,"abs","","Computes the absolute value.",19,{"inputs":[{"name":"signed"}],"output":{"name":"self"}}],[10,"abs_sub","","The positive difference of two numbers.",19,{"inputs":[{"name":"signed"},{"name":"self"}],"output":{"name":"self"}}],[10,"signum","","Returns the sign of the number.",19,{"inputs":[{"name":"signed"}],"output":{"name":"self"}}],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",19,{"inputs":[{"name":"signed"}],"output":{"name":"bool"}}],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",19,{"inputs":[{"name":"signed"}],"output":{"name":"bool"}}],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",20,{"inputs":[{"name":"bounded"}],"output":{"name":"self"}}],[10,"max_value","","returns the largest finite number this type can represent",20,{"inputs":[{"name":"bounded"}],"output":{"name":"self"}}],[8,"Saturating","","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator.\nReturns a+b, saturating at the numeric bounds instead of overflowing.",21,{"inputs":[{"name":"saturating"},{"name":"self"}],"output":{"name":"self"}}],[10,"saturating_sub","","Saturating subtraction operator.\nReturns a-b, saturating at the numeric bounds instead of overflowing.",21,{"inputs":[{"name":"saturating"},{"name":"self"}],"output":{"name":"self"}}],[8,"CheckedAdd","","Performs addition that returns `None` instead of wrapping around on\noverflow.",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is\nreturned.",22,{"inputs":[{"name":"checkedadd"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens,\n`None` is returned.",23,{"inputs":[{"name":"checkedsub"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or\noverflow.",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow\nor overflow happens, `None` is returned.",24,{"inputs":[{"name":"checkedmul"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of\nwrapping around on underflow and overflow.",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by\nzero. If any of that happens, `None` is returned.",25,{"inputs":[{"name":"checkeddiv"},{"name":"self"}],"output":{"name":"option"}}],[8,"PrimInt","","",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",26,{"inputs":[{"name":"primint"}],"output":{"name":"u32"}}],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",26,{"inputs":[{"name":"primint"}],"output":{"name":"u32"}}],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation\nof `self`.",26,{"inputs":[{"name":"primint"}],"output":{"name":"u32"}}],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation\nof `self`.",26,{"inputs":[{"name":"primint"}],"output":{"name":"u32"}}],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping\nthe truncated bits to the end of the resulting integer.",26,{"inputs":[{"name":"primint"},{"name":"u32"}],"output":{"name":"self"}}],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping\nthe truncated bits to the beginning of the resulting integer.",26,{"inputs":[{"name":"primint"},{"name":"u32"}],"output":{"name":"self"}}],[10,"swap_bytes","","Reverses the byte order of the integer.",26,{"inputs":[{"name":"primint"}],"output":{"name":"self"}}],[10,"from_be","","Convert an integer from big endian to the target's endianness.",26,{"inputs":[{"name":"primint"},{"name":"self"}],"output":{"name":"self"}}],[10,"from_le","","Convert an integer from little endian to the target's endianness.",26,{"inputs":[{"name":"primint"},{"name":"self"}],"output":{"name":"self"}}],[10,"to_be","","Convert `self` to big endian from the target's endianness.",26,{"inputs":[{"name":"primint"}],"output":{"name":"self"}}],[10,"to_le","","Convert `self` to little endian from the target's endianness.",26,{"inputs":[{"name":"primint"}],"output":{"name":"self"}}],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",26,{"inputs":[{"name":"primint"},{"name":"u32"}],"output":{"name":"self"}}],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_i8","","Converts the value of `self` to an `i8`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_i16","","Converts the value of `self` to an `i16`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_i32","","Converts the value of `self` to an `i32`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[10,"to_i64","","Converts the value of `self` to an `i64`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_usize","","Converts the value of `self` to a `usize`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_u8","","Converts the value of `self` to an `u8`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_u16","","Converts the value of `self` to an `u16`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_u32","","Converts the value of `self` to an `u32`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[10,"to_u64","","Converts the value of `self` to an `u64`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_f32","","Converts the value of `self` to an `f32`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_f64","","Converts the value of `self` to an `f64`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the\nvalue cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"f64"}],"output":{"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into\na primitive via the `ToPrimitive` trait.",29,{"inputs":[{"name":"numcast"},{"name":"t"}],"output":{"name":"option"}}],[8,"Float","","",null,null],[10,"nan","","Returns the `NaN` value.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"infinity","","Returns the infinite value.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"neg_infinity","","Returns the negative infinite value.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"neg_zero","","Returns `-0.0`.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"min_value","","Returns the smallest finite value that this type can represent.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"max_value","","Returns the largest finite value that this type can represent.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",30,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and\nfalse otherwise.",30,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",30,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,\n[subnormal][subnormal], or `NaN`.",30,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"classify","","Returns the floating point category of the number. If only one property\nis going to be tested, it is generally faster to use the specific\npredicate instead.",30,{"inputs":[{"name":"float"}],"output":{"name":"fpcategory"}}],[10,"floor","","Returns the largest integer less than or equal to a number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from\n`0.0`.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"trunc","","Return the integer part of a number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"fract","","Returns the fractional part of a number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the\nnumber is `Float::nan()`.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"signum","","Returns a number that represents the sign of `self`.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and\n`Float::infinity()`.",30,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and\n`Float::neg_infinity()`.",30,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding\nerror. This produces a more accurate result with better performance than\na separate multiplication operation followed by an add.",30,{"inputs":[{"name":"float"},{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"powi","","Raise a number to an integer power.",30,{"inputs":[{"name":"float"},{"name":"i32"}],"output":{"name":"self"}}],[10,"powf","","Raise a number to a floating point power.",30,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"sqrt","","Take the square root of a number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"exp","","Returns `e^(self)`, (the exponential function).",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"exp2","","Returns `2^(self)`.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"ln","","Returns the natural logarithm of the number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",30,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"log2","","Returns the base 2 logarithm of the number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"log10","","Returns the base 10 logarithm of the number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"max","","Returns the maximum of the two numbers.",30,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"min","","Returns the minimum of the two numbers.",30,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"abs_sub","","The positive difference of two numbers.",30,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"cbrt","","Take the cubic root of a number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given\nlegs of length `x` and `y`.",30,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"sin","","Computes the sine of a number (in radians).",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"cos","","Computes the cosine of a number (in radians).",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"tan","","Computes the tangent of a number (in radians).",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"asin","","Computes the arcsine of a number. Return value is in radians in\nthe range [-pi/2, pi/2] or NaN if the number is outside the range\n[-1, 1].",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"acos","","Computes the arccosine of a number. Return value is in radians in\nthe range [0, pi] or NaN if the number is outside the range\n[-1, 1].",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the\nrange [-pi/2, pi/2];",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",30,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns\n`(sin(x), cos(x))`.",30,null],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the\nnumber is close to zero.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if\nthe operations were performed separately.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"sinh","","Hyperbolic sine function.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"cosh","","Hyperbolic cosine function.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"tanh","","Hyperbolic tangent function.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"asinh","","Inverse hyperbolic sine function.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"acosh","","Inverse hyperbolic cosine function.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"atanh","","Inverse hyperbolic tangent function.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively.\nThe original number can be recovered by `sign * mantissa * 2 ^ exponent`.\nThe floating point encoding is documented in the [Reference][floating-point].",30,null],[0,"rational","num","Rational numbers",null,null],[3,"Ratio","num::rational","Represents the ratio between 2 numbers.",null,null],[3,"ParseRatioError","","",null,null],[6,"Rational","","Alias for a `Ratio` of machine-sized integers.",null,null],[6,"Rational32","","",null,null],[6,"Rational64","","",null,null],[6,"BigRational","","Alias for arbitrary precision rationals.",null,null],[11,"fmt","","",31,{"inputs":[{"name":"ratio"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",31,null],[11,"clone","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"decode","","",31,{"inputs":[{"name":"ratio"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",31,{"inputs":[{"name":"ratio"},{"name":"__s"}],"output":{"name":"result"}}],[11,"from_integer","","Creates a ratio representing the integer `t`.",31,{"inputs":[{"name":"ratio"},{"name":"t"}],"output":{"name":"ratio"}}],[11,"new_raw","","Creates a ratio without checking for `denom == 0` or reducing.",31,{"inputs":[{"name":"ratio"},{"name":"t"},{"name":"t"}],"output":{"name":"ratio"}}],[11,"new","","Create a new Ratio. Fails if `denom == 0`.",31,{"inputs":[{"name":"ratio"},{"name":"t"},{"name":"t"}],"output":{"name":"ratio"}}],[11,"to_integer","","Converts to an integer.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"t"}}],[11,"numer","","Gets an immutable reference to the numerator.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"t"}}],[11,"denom","","Gets an immutable reference to the denominator.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"t"}}],[11,"is_integer","","Returns true if the rational number is an integer (denominator is 1).",31,{"inputs":[{"name":"ratio"}],"output":{"name":"bool"}}],[11,"reduced","","Returns a `reduce`d copy of self.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"recip","","Returns the reciprocal.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"floor","","Rounds towards minus infinity.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"ceil","","Rounds towards plus infinity.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"round","","Rounds to the nearest integer. Rounds half-way cases away from zero.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"trunc","","Rounds towards zero.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"fract","","Returns the fractional part of a number.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"pow","","Raises the ratio to the power of an exponent",31,{"inputs":[{"name":"ratio"},{"name":"i32"}],"output":{"name":"ratio"}}],[11,"from_float","","Converts a float into a rational number.",31,{"inputs":[{"name":"ratio"},{"name":"t"}],"output":{"name":"option"}}],[11,"eq","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"bool"}}],[11,"lt","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"bool"}}],[11,"gt","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"bool"}}],[11,"le","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"bool"}}],[11,"ge","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"option"}}],[11,"cmp","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ordering"}}],[11,"mul","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"mul","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"div","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"div","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"add","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"add","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"sub","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"sub","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"rem","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"rem","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"neg","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"zero","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"is_zero","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"bool"}}],[11,"one","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"from_str_radix","","Parses `numer/denom` where the numbers are in base `radix`.",31,{"inputs":[{"name":"ratio"},{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"abs","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"abs_sub","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"signum","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"is_positive","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"bool"}}],[11,"is_negative","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"bool"}}],[11,"fmt","","Renders as `numer/denom`. If denom=1, renders as numer.",31,{"inputs":[{"name":"ratio"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","Parses `numer/denom` or just `numer`.",31,{"inputs":[{"name":"ratio"},{"name":"str"}],"output":{"name":"result"}}],[11,"eq","","",32,{"inputs":[{"name":"parseratioerror"},{"name":"parseratioerror"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"parseratioerror"},{"name":"parseratioerror"}],"output":{"name":"bool"}}],[11,"fmt","","",32,{"inputs":[{"name":"parseratioerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",32,{"inputs":[{"name":"parseratioerror"}],"output":{"name":"parseratioerror"}}],[11,"fmt","","",32,{"inputs":[{"name":"parseratioerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",32,{"inputs":[{"name":"parseratioerror"}],"output":{"name":"str"}}]],"paths":[[4,"Sign"],[4,"ParseBigIntError"],[8,"ToBigUint"],[8,"ToBigInt"],[8,"RandBigInt"],[3,"BigUint"],[3,"BigInt"],[3,"RadixFmt"],[3,"Complex"],[8,"Integer"],[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"],[3,"ParseFloatError"],[4,"FloatErrorKind"],[8,"Num"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Bounded"],[8,"Saturating"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"PrimInt"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"Float"],[3,"Ratio"],[3,"ParseRatioError"]]};
searchIndex['rustc_serialize'] = {"items":[[0,"","rustc_serialize","Support code for encoding and decoding types.",null,null],[11,"encode","collections::string","",0,{"inputs":[{"name":"string"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",0,{"inputs":[{"name":"string"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","alloc::boxed","",1,{"inputs":[{"name":"box"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",1,{"inputs":[{"name":"box"},{"name":"d"}],"output":{"name":"result"}}],[11,"decode","","",1,{"inputs":[{"name":"box"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","alloc::rc","",2,{"inputs":[{"name":"rc"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",2,{"inputs":[{"name":"rc"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::borrow","",3,{"inputs":[{"name":"cow"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",3,{"inputs":[{"name":"cow"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::vec","",4,{"inputs":[{"name":"vec"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",4,{"inputs":[{"name":"vec"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","core::option","",5,{"inputs":[{"name":"option"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",5,{"inputs":[{"name":"option"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","core::marker","",6,{"inputs":[{"name":"phantomdata"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",6,{"inputs":[{"name":"phantomdata"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","std::path","",7,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"result"}}],[11,"encode","","",8,{"inputs":[{"name":"pathbuf"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",8,{"inputs":[{"name":"pathbuf"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","core::cell","",9,{"inputs":[{"name":"cell"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",9,{"inputs":[{"name":"cell"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","","",10,{"inputs":[{"name":"refcell"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",10,{"inputs":[{"name":"refcell"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","alloc::arc","",11,{"inputs":[{"name":"arc"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",11,{"inputs":[{"name":"arc"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::linked_list","",12,{"inputs":[{"name":"linkedlist"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",12,{"inputs":[{"name":"linkedlist"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::vec_deque","",13,{"inputs":[{"name":"vecdeque"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",13,{"inputs":[{"name":"vecdeque"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::btree::map","",14,{"inputs":[{"name":"btreemap"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",14,{"inputs":[{"name":"btreemap"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::btree::set","",15,{"inputs":[{"name":"btreeset"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",15,{"inputs":[{"name":"btreeset"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","std::collections::hash::map","",16,{"inputs":[{"name":"hashmap"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",16,{"inputs":[{"name":"hashmap"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","std::collections::hash::set","",17,{"inputs":[{"name":"hashset"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",17,{"inputs":[{"name":"hashset"},{"name":"d"}],"output":{"name":"result"}}],[0,"base64","rustc_serialize","Base64 binary-to-text encoding",null,null],[3,"Config","rustc_serialize::base64","Contains configuration parameters for `to_base64`.",null,null],[12,"char_set","","Character set to use",18,null],[12,"newline","","Newline to use",18,null],[12,"pad","","True to pad output with `=` characters",18,null],[12,"line_length","","`Some(len)` to wrap lines at `len`, `None` to disable line wrapping",18,null],[4,"CharacterSet","","Available encoding character sets",null,null],[13,"Standard","","The standard character set (uses `+` and `/`)",19,null],[13,"UrlSafe","","The URL safe character set (uses `-` and `_`)",19,null],[4,"Newline","","Available newline types",null,null],[13,"LF","","A linefeed (i.e. Unix-style newline)",20,null],[13,"CRLF","","A carriage return and a linefeed (i.e. Windows-style newline)",20,null],[4,"FromBase64Error","","Errors that can occur when decoding a base64 encoded string",null,null],[13,"InvalidBase64Byte","","The input contained a character not part of the base64 format",21,null],[13,"InvalidBase64Length","","The input had an invalid length",21,null],[7,"STANDARD","","Configuration for RFC 4648 standard base64 encoding",null,null],[7,"URL_SAFE","","Configuration for RFC 4648 base64url encoding",null,null],[7,"MIME","","Configuration for RFC 2045 MIME base64 encoding",null,null],[8,"ToBase64","","A trait for converting a value to base64 encoding.",null,null],[10,"to_base64","","Converts the value of `self` to a base64 value following the specified\nformat configuration, returning the owned string.",22,{"inputs":[{"name":"tobase64"},{"name":"config"}],"output":{"name":"string"}}],[8,"FromBase64","","A trait for converting from base64 encoded values.",null,null],[10,"from_base64","","Converts the value of `self`, interpreted as base64 encoded data, into\nan owned vector of bytes, returning the vector.",23,{"inputs":[{"name":"frombase64"}],"output":{"name":"result"}}],[11,"clone","","",19,{"inputs":[{"name":"characterset"}],"output":{"name":"characterset"}}],[11,"clone","","",20,{"inputs":[{"name":"newline"}],"output":{"name":"newline"}}],[11,"clone","","",18,{"inputs":[{"name":"config"}],"output":{"name":"config"}}],[11,"clone","","",21,{"inputs":[{"name":"frombase64error"}],"output":{"name":"frombase64error"}}],[11,"fmt","","",21,{"inputs":[{"name":"frombase64error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",21,{"inputs":[{"name":"frombase64error"}],"output":{"name":"str"}}],[11,"fmt","","",21,{"inputs":[{"name":"frombase64error"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"hex","rustc_serialize","Hex binary-to-text encoding",null,null],[4,"FromHexError","rustc_serialize::hex","Errors that can occur when decoding a hex encoded string",null,null],[13,"InvalidHexCharacter","","The input contained a character not part of the hex format",24,null],[13,"InvalidHexLength","","The input had an invalid length",24,null],[8,"ToHex","","A trait for converting a value to hexadecimal encoding",null,null],[10,"to_hex","","Converts the value of `self` to a hex value, returning the owned\nstring.",25,{"inputs":[{"name":"tohex"}],"output":{"name":"string"}}],[8,"FromHex","","A trait for converting hexadecimal encoded values",null,null],[10,"from_hex","","Converts the value of `self`, interpreted as hexadecimal encoded data,\ninto an owned vector of bytes, returning the vector.",26,{"inputs":[{"name":"fromhex"}],"output":{"name":"result"}}],[11,"clone","","",24,{"inputs":[{"name":"fromhexerror"}],"output":{"name":"fromhexerror"}}],[11,"fmt","","",24,{"inputs":[{"name":"fromhexerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",24,{"inputs":[{"name":"fromhexerror"}],"output":{"name":"str"}}],[11,"fmt","","",24,{"inputs":[{"name":"fromhexerror"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"json","rustc_serialize","JSON parsing and serialization",null,null],[3,"PrettyJson","rustc_serialize::json","",null,null],[3,"AsJson","","",null,null],[3,"AsPrettyJson","","",null,null],[3,"Encoder","","A structure for implementing serialization to JSON.",null,null],[3,"Stack","","A Stack represents the current position of the parser in the logical\nstructure of the JSON stream.\nFor example foo.bar[3].x",null,null],[3,"Parser","","A streaming JSON parser implemented as an iterator of JsonEvent, consuming\nan iterator of char.",null,null],[3,"Builder","","A Builder consumes a json::Parser to create a generic Json structure.",null,null],[3,"Decoder","","A structure to decode JSON to values in rust.",null,null],[4,"Json","","Represents a json value",null,null],[13,"I64","","",27,null],[13,"U64","","",27,null],[13,"F64","","",27,null],[13,"String","","",27,null],[13,"Boolean","","",27,null],[13,"Array","","",27,null],[13,"Object","","",27,null],[13,"Null","","",27,null],[4,"ErrorCode","","The errors that can arise while parsing a JSON stream.",null,null],[13,"InvalidSyntax","","",28,null],[13,"InvalidNumber","","",28,null],[13,"EOFWhileParsingObject","","",28,null],[13,"EOFWhileParsingArray","","",28,null],[13,"EOFWhileParsingValue","","",28,null],[13,"EOFWhileParsingString","","",28,null],[13,"KeyMustBeAString","","",28,null],[13,"ExpectedColon","","",28,null],[13,"TrailingCharacters","","",28,null],[13,"TrailingComma","","",28,null],[13,"InvalidEscape","","",28,null],[13,"InvalidUnicodeCodePoint","","",28,null],[13,"LoneLeadingSurrogateInHexEscape","","",28,null],[13,"UnexpectedEndOfHexEscape","","",28,null],[13,"UnrecognizedHex","","",28,null],[13,"NotFourDigit","","",28,null],[13,"ControlCharacterInString","","",28,null],[13,"NotUtf8","","",28,null],[4,"ParserError","","",null,null],[13,"SyntaxError","","msg, line, col",29,null],[13,"IoError","","",29,null],[4,"DecoderError","","",null,null],[13,"ParseError","","",30,null],[13,"ExpectedError","","",30,null],[13,"MissingFieldError","","",30,null],[13,"UnknownVariantError","","",30,null],[13,"ApplicationError","","",30,null],[13,"EOF","","",30,null],[4,"EncoderError","","",null,null],[13,"FmtError","","",31,null],[13,"BadHashmapKey","","",31,null],[4,"JsonEvent","","The output of the streaming parser.",null,null],[13,"ObjectStart","","",32,null],[13,"ObjectEnd","","",32,null],[13,"ArrayStart","","",32,null],[13,"ArrayEnd","","",32,null],[13,"BooleanValue","","",32,null],[13,"I64Value","","",32,null],[13,"U64Value","","",32,null],[13,"F64Value","","",32,null],[13,"StringValue","","",32,null],[13,"NullValue","","",32,null],[13,"Error","","",32,null],[4,"StackElement","","StackElements compose a Stack.\nFor example, Key(\"foo\"), Key(\"bar\"), Index(3) and Key(\"x\") are the\nStackElements compositing the stack that represents foo.bar[3].x",null,null],[13,"Index","","",33,null],[13,"Key","","",33,null],[5,"error_str","","Returns a readable error string for a given error code.",null,{"inputs":[{"name":"errorcode"}],"output":{"name":"str"}}],[5,"decode","","Shortcut function to decode a JSON `&str` into an object",null,{"inputs":[{"name":"str"}],"output":{"name":"decoderesult"}}],[5,"encode","","Shortcut function to encode a `T` into a JSON `String`",null,{"inputs":[{"name":"t"}],"output":{"name":"encoderesult"}}],[5,"as_json","","Create an `AsJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asjson"}}],[5,"as_pretty_json","","Create an `AsPrettyJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asprettyjson"}}],[6,"Array","","",null,null],[6,"Object","","",null,null],[6,"BuilderError","","",null,null],[6,"EncodeResult","","",null,null],[6,"DecodeResult","","",null,null],[8,"ToJson","","A trait for converting values to JSON",null,null],[10,"to_json","","Converts the value of `self` to an instance of JSON",34,{"inputs":[{"name":"tojson"}],"output":{"name":"json"}}],[11,"fmt","","",27,{"inputs":[{"name":"json"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"option"}}],[11,"lt","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"le","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"gt","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"ge","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"eq","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"clone","","",27,{"inputs":[{"name":"json"}],"output":{"name":"json"}}],[11,"eq","","",28,{"inputs":[{"name":"errorcode"},{"name":"errorcode"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"errorcode"},{"name":"errorcode"}],"output":{"name":"bool"}}],[11,"clone","","",28,{"inputs":[{"name":"errorcode"}],"output":{"name":"errorcode"}}],[11,"fmt","","",29,{"inputs":[{"name":"parsererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",29,{"inputs":[{"name":"parsererror"},{"name":"parsererror"}],"output":{"name":"bool"}}],[11,"fmt","","",30,{"inputs":[{"name":"decodererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",30,{"inputs":[{"name":"decodererror"},{"name":"decodererror"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"decodererror"},{"name":"decodererror"}],"output":{"name":"bool"}}],[11,"fmt","","",31,{"inputs":[{"name":"encodererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",31,{"inputs":[{"name":"encodererror"}],"output":{"name":"self"}}],[11,"fmt","","",28,{"inputs":[{"name":"errorcode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",30,{"inputs":[{"name":"decodererror"}],"output":{"name":"str"}}],[11,"cause","","",30,{"inputs":[{"name":"decodererror"}],"output":{"name":"option"}}],[11,"fmt","","",30,{"inputs":[{"name":"decodererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",30,{"inputs":[{"name":"decodererror"},{"name":"parsererror"}],"output":{"name":"decodererror"}}],[11,"description","","",29,{"inputs":[{"name":"parsererror"}],"output":{"name":"str"}}],[11,"fmt","","",29,{"inputs":[{"name":"parsererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",29,{"inputs":[{"name":"parsererror"},{"name":"error"}],"output":{"name":"parsererror"}}],[11,"description","","",31,{"inputs":[{"name":"encodererror"}],"output":{"name":"str"}}],[11,"fmt","","",31,{"inputs":[{"name":"encodererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",31,{"inputs":[{"name":"encodererror"},{"name":"error"}],"output":{"name":"encodererror"}}],[11,"new_pretty","","Creates a new encoder whose output will be written in human-readable\nJSON to the specified writer",35,{"inputs":[{"name":"encoder"},{"name":"write"}],"output":{"name":"encoder"}}],[11,"new","","Creates a new encoder whose output will be written in compact\nJSON to the specified writer",35,{"inputs":[{"name":"encoder"},{"name":"write"}],"output":{"name":"encoder"}}],[11,"set_indent","","Set the number of spaces to indent for each level.\nThis is safe to set during encoding.",35,{"inputs":[{"name":"encoder"},{"name":"u32"}],"output":{"name":"result"}}],[11,"emit_nil","","",35,{"inputs":[{"name":"encoder"}],"output":{"name":"encoderesult"}}],[11,"emit_usize","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"}],"output":{"name":"encoderesult"}}],[11,"emit_u64","","",35,{"inputs":[{"name":"encoder"},{"name":"u64"}],"output":{"name":"encoderesult"}}],[11,"emit_u32","","",35,{"inputs":[{"name":"encoder"},{"name":"u32"}],"output":{"name":"encoderesult"}}],[11,"emit_u16","","",35,{"inputs":[{"name":"encoder"},{"name":"u16"}],"output":{"name":"encoderesult"}}],[11,"emit_u8","","",35,{"inputs":[{"name":"encoder"},{"name":"u8"}],"output":{"name":"encoderesult"}}],[11,"emit_isize","","",35,{"inputs":[{"name":"encoder"},{"name":"isize"}],"output":{"name":"encoderesult"}}],[11,"emit_i64","","",35,{"inputs":[{"name":"encoder"},{"name":"i64"}],"output":{"name":"encoderesult"}}],[11,"emit_i32","","",35,{"inputs":[{"name":"encoder"},{"name":"i32"}],"output":{"name":"encoderesult"}}],[11,"emit_i16","","",35,{"inputs":[{"name":"encoder"},{"name":"i16"}],"output":{"name":"encoderesult"}}],[11,"emit_i8","","",35,{"inputs":[{"name":"encoder"},{"name":"i8"}],"output":{"name":"encoderesult"}}],[11,"emit_bool","","",35,{"inputs":[{"name":"encoder"},{"name":"bool"}],"output":{"name":"encoderesult"}}],[11,"emit_f64","","",35,{"inputs":[{"name":"encoder"},{"name":"f64"}],"output":{"name":"encoderesult"}}],[11,"emit_f32","","",35,{"inputs":[{"name":"encoder"},{"name":"f32"}],"output":{"name":"encoderesult"}}],[11,"emit_char","","",35,{"inputs":[{"name":"encoder"},{"name":"char"}],"output":{"name":"encoderesult"}}],[11,"emit_str","","",35,{"inputs":[{"name":"encoder"},{"name":"str"}],"output":{"name":"encoderesult"}}],[11,"emit_enum","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_variant","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_variant_arg","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_struct_variant","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_struct_variant_field","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_struct","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_struct_field","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple_arg","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple_struct","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple_struct_arg","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_option","","",35,{"inputs":[{"name":"encoder"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_option_none","","",35,{"inputs":[{"name":"encoder"}],"output":{"name":"encoderesult"}}],[11,"emit_option_some","","",35,{"inputs":[{"name":"encoder"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_seq","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_seq_elt","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_map","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_map_elt_key","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_map_elt_val","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"encode","","",27,{"inputs":[{"name":"json"},{"name":"s"}],"output":{"name":"result"}}],[11,"from_reader","","Decodes a json value from an `&mut io::Read`",27,{"inputs":[{"name":"json"},{"name":"read"}],"output":{"name":"result"}}],[11,"from_str","","Decodes a json value from a string",27,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"result"}}],[11,"pretty","","Borrow this json object as a pretty object to generate a pretty\nrepresentation for it via `Display`.",27,{"inputs":[{"name":"json"}],"output":{"name":"prettyjson"}}],[11,"find","","If the Json value is an Object, returns the value associated with the provided key.\nOtherwise, returns None.",27,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"option"}}],[11,"find_path","","Attempts to get a nested Json Object for each key in `keys`.\nIf any key is found not to exist, find_path will return None.\nOtherwise, it will return the Json value associated with the final key.",27,null],[11,"search","","If the Json value is an Object, performs a depth-first search until\na value associated with the provided key is found. If no value is found\nor the Json value is not an Object, returns None.",27,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"option"}}],[11,"is_object","","Returns true if the Json value is an Object. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_object","","If the Json value is an Object, returns the associated BTreeMap.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"as_object_mut","","If the Json value is an Object, returns the associated mutable BTreeMap.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_array","","Returns true if the Json value is an Array. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_array","","If the Json value is an Array, returns the associated vector.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"as_array_mut","","If the Json value is an Array, returns the associated mutable vector.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_string","","Returns true if the Json value is a String. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_string","","If the Json value is a String, returns the associated str.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_number","","Returns true if the Json value is a Number. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"is_i64","","Returns true if the Json value is a i64. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"is_u64","","Returns true if the Json value is a u64. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"is_f64","","Returns true if the Json value is a f64. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_i64","","If the Json value is a number, return or cast it to a i64.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"as_u64","","If the Json value is a number, return or cast it to a u64.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"as_f64","","If the Json value is a number, return or cast it to a f64.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_boolean","","Returns true if the Json value is a Boolean. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_boolean","","If the Json value is a Boolean, returns the associated bool.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_null","","Returns true if the Json value is a Null. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_null","","If the Json value is a Null, returns ().\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"index","","",27,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"json"}}],[11,"index","","",27,{"inputs":[{"name":"json"},{"name":"usize"}],"output":{"name":"json"}}],[11,"fmt","","",32,{"inputs":[{"name":"jsonevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",32,{"inputs":[{"name":"jsonevent"},{"name":"jsonevent"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"jsonevent"},{"name":"jsonevent"}],"output":{"name":"bool"}}],[11,"fmt","","",33,{"inputs":[{"name":"stackelement"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",33,{"inputs":[{"name":"stackelement"}],"output":{"name":"stackelement"}}],[11,"eq","","",33,{"inputs":[{"name":"stackelement"},{"name":"stackelement"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"stackelement"},{"name":"stackelement"}],"output":{"name":"bool"}}],[11,"new","","",36,{"inputs":[{"name":"stack"}],"output":{"name":"stack"}}],[11,"len","","Returns The number of elements in the Stack.",36,{"inputs":[{"name":"stack"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the stack is empty.",36,{"inputs":[{"name":"stack"}],"output":{"name":"bool"}}],[11,"get","","Provides access to the StackElement at a given index.\nlower indices are at the bottom of the stack while higher indices are\nat the top.",36,{"inputs":[{"name":"stack"},{"name":"usize"}],"output":{"name":"stackelement"}}],[11,"is_equal_to","","Compares this stack with an array of StackElements.",36,null],[11,"starts_with","","Returns true if the bottom-most elements of this stack are the same as\nthe ones passed as parameter.",36,null],[11,"ends_with","","Returns true if the top-most elements of this stack are the same as\nthe ones passed as parameter.",36,null],[11,"top","","Returns the top-most element (if any).",36,{"inputs":[{"name":"stack"}],"output":{"name":"option"}}],[11,"next","","",37,{"inputs":[{"name":"parser"}],"output":{"name":"option"}}],[11,"new","","Creates the JSON parser.",37,{"inputs":[{"name":"parser"},{"name":"t"}],"output":{"name":"parser"}}],[11,"stack","","Provides access to the current position in the logical structure of the\nJSON stream.",37,{"inputs":[{"name":"parser"}],"output":{"name":"stack"}}],[11,"new","","Create a JSON Builder.",38,{"inputs":[{"name":"builder"},{"name":"t"}],"output":{"name":"builder"}}],[11,"build","","",38,{"inputs":[{"name":"builder"}],"output":{"name":"result"}}],[11,"new","","Creates a new decoder instance for decoding the specified JSON value.",39,{"inputs":[{"name":"decoder"},{"name":"json"}],"output":{"name":"decoder"}}],[11,"read_nil","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_usize","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_u8","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_u16","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_u32","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_u64","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_isize","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_i8","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_i16","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_i32","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_i64","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_f32","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_f64","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_bool","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_char","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_str","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_enum","","",39,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_enum_variant","","",39,null],[11,"read_enum_variant_arg","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_enum_struct_variant","","",39,null],[11,"read_enum_struct_variant_field","","",39,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_struct","","",39,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_struct_field","","",39,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple_arg","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple_struct","","",39,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple_struct_arg","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_option","","",39,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_seq","","",39,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_seq_elt","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_map","","",39,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_map_elt_key","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_map_elt_val","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"error","","",39,{"inputs":[{"name":"decoder"},{"name":"str"}],"output":{"name":"decodererror"}}],[11,"to_json","","",27,{"inputs":[{"name":"json"}],"output":{"name":"json"}}],[11,"to_json","collections::string","",0,{"inputs":[{"name":"string"}],"output":{"name":"json"}}],[11,"to_json","collections::vec","",4,{"inputs":[{"name":"vec"}],"output":{"name":"json"}}],[11,"to_json","collections::btree::map","",14,{"inputs":[{"name":"btreemap"}],"output":{"name":"json"}}],[11,"to_json","std::collections::hash::map","",16,{"inputs":[{"name":"hashmap"}],"output":{"name":"json"}}],[11,"to_json","core::option","",5,{"inputs":[{"name":"option"}],"output":{"name":"json"}}],[11,"fmt","rustc_serialize::json","Encodes a json value into a string",27,{"inputs":[{"name":"json"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","Encodes a json value into a string",40,{"inputs":[{"name":"prettyjson"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","Encodes a json value into a string",41,{"inputs":[{"name":"asjson"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"indent","","Set the indentation level for the emitted JSON",42,{"inputs":[{"name":"asprettyjson"},{"name":"u32"}],"output":{"name":"asprettyjson"}}],[11,"fmt","","Encodes a json value into a string",42,{"inputs":[{"name":"asprettyjson"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",27,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"result"}}],[8,"Decoder","rustc_serialize","",null,null],[16,"Error","","",43,null],[10,"read_nil","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_usize","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_u64","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_u32","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_u16","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_u8","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_isize","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_i64","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_i32","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_i16","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_i8","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_bool","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_f64","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_f32","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_char","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_str","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_enum","","",43,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_enum_variant","","",43,null],[10,"read_enum_variant_arg","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_enum_struct_variant","","",43,null],[10,"read_enum_struct_variant_field","","",43,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_struct","","",43,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_struct_field","","",43,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple_arg","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple_struct","","",43,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple_struct_arg","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_option","","",43,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_seq","","",43,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_seq_elt","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_map","","",43,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_map_elt_key","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_map_elt_val","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"error","","",43,{"inputs":[{"name":"decoder"},{"name":"str"}],"output":{"name":"error"}}],[8,"Encoder","","",null,null],[16,"Error","","",44,null],[10,"emit_nil","","",44,{"inputs":[{"name":"encoder"}],"output":{"name":"result"}}],[10,"emit_usize","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"}],"output":{"name":"result"}}],[10,"emit_u64","","",44,{"inputs":[{"name":"encoder"},{"name":"u64"}],"output":{"name":"result"}}],[10,"emit_u32","","",44,{"inputs":[{"name":"encoder"},{"name":"u32"}],"output":{"name":"result"}}],[10,"emit_u16","","",44,{"inputs":[{"name":"encoder"},{"name":"u16"}],"output":{"name":"result"}}],[10,"emit_u8","","",44,{"inputs":[{"name":"encoder"},{"name":"u8"}],"output":{"name":"result"}}],[10,"emit_isize","","",44,{"inputs":[{"name":"encoder"},{"name":"isize"}],"output":{"name":"result"}}],[10,"emit_i64","","",44,{"inputs":[{"name":"encoder"},{"name":"i64"}],"output":{"name":"result"}}],[10,"emit_i32","","",44,{"inputs":[{"name":"encoder"},{"name":"i32"}],"output":{"name":"result"}}],[10,"emit_i16","","",44,{"inputs":[{"name":"encoder"},{"name":"i16"}],"output":{"name":"result"}}],[10,"emit_i8","","",44,{"inputs":[{"name":"encoder"},{"name":"i8"}],"output":{"name":"result"}}],[10,"emit_bool","","",44,{"inputs":[{"name":"encoder"},{"name":"bool"}],"output":{"name":"result"}}],[10,"emit_f64","","",44,{"inputs":[{"name":"encoder"},{"name":"f64"}],"output":{"name":"result"}}],[10,"emit_f32","","",44,{"inputs":[{"name":"encoder"},{"name":"f32"}],"output":{"name":"result"}}],[10,"emit_char","","",44,{"inputs":[{"name":"encoder"},{"name":"char"}],"output":{"name":"result"}}],[10,"emit_str","","",44,{"inputs":[{"name":"encoder"},{"name":"str"}],"output":{"name":"result"}}],[10,"emit_enum","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_variant","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_variant_arg","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_struct_variant","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_struct_variant_field","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_struct","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_struct_field","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple_arg","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple_struct","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple_struct_arg","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_option","","",44,{"inputs":[{"name":"encoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_option_none","","",44,{"inputs":[{"name":"encoder"}],"output":{"name":"result"}}],[10,"emit_option_some","","",44,{"inputs":[{"name":"encoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_seq","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_seq_elt","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_map","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_map_elt_key","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_map_elt_val","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[8,"Decodable","","",null,null],[10,"decode","","",45,{"inputs":[{"name":"decodable"},{"name":"d"}],"output":{"name":"result"}}],[8,"Encodable","","",null,null],[10,"encode","","",46,{"inputs":[{"name":"encodable"},{"name":"s"}],"output":{"name":"result"}}],[8,"DecoderHelpers","","",null,null],[10,"read_to_vec","","",47,{"inputs":[{"name":"decoderhelpers"},{"name":"f"}],"output":{"name":"result"}}],[8,"EncoderHelpers","","",null,null],[10,"emit_from_vec","","",48,null]],"paths":[[3,"String"],[3,"Box"],[3,"Rc"],[4,"Cow"],[3,"Vec"],[4,"Option"],[3,"PhantomData"],[3,"Path"],[3,"PathBuf"],[3,"Cell"],[3,"RefCell"],[3,"Arc"],[3,"LinkedList"],[3,"VecDeque"],[3,"BTreeMap"],[3,"BTreeSet"],[3,"HashMap"],[3,"HashSet"],[3,"Config"],[4,"CharacterSet"],[4,"Newline"],[4,"FromBase64Error"],[8,"ToBase64"],[8,"FromBase64"],[4,"FromHexError"],[8,"ToHex"],[8,"FromHex"],[4,"Json"],[4,"ErrorCode"],[4,"ParserError"],[4,"DecoderError"],[4,"EncoderError"],[4,"JsonEvent"],[4,"StackElement"],[8,"ToJson"],[3,"Encoder"],[3,"Stack"],[3,"Parser"],[3,"Builder"],[3,"Decoder"],[3,"PrettyJson"],[3,"AsJson"],[3,"AsPrettyJson"],[8,"Decoder"],[8,"Encoder"],[8,"Decodable"],[8,"Encodable"],[8,"DecoderHelpers"],[8,"EncoderHelpers"]]};
searchIndex['rand'] = {"items":[[0,"","rand","Utilities for random number generation",null,null],[3,"Generator","","Iterator which will generate a stream of random items.",null,null],[3,"AsciiGenerator","","Iterator which will continuously generate random ascii characters.",null,null],[3,"XorShiftRng","","An Xorshift[1] random number\ngenerator.",null,null],[3,"Open01","","A wrapper for generating floating point numbers uniformly in the\nopen interval `(0,1)` (not including either endpoint).",null,null],[3,"Closed01","","A wrapper for generating floating point numbers uniformly in the\nclosed interval `[0,1]` (including both endpoints).",null,null],[3,"StdRng","","The standard RNG. This is designed to be efficient on the current\nplatform.",null,null],[3,"ThreadRng","","The thread-local RNG.",null,null],[5,"weak_rng","","Create a weak random number generator with a default algorithm and seed.",null,{"inputs":[],"output":{"name":"xorshiftrng"}}],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number\ngenerator, seeded by the system. Intended to be used in method\nchaining style, e.g. `thread_rng().gen::<i32>()`.",null,{"inputs":[],"output":{"name":"threadrng"}}],[5,"random","","Generates a random value using the thread-local random number generator.",null,{"inputs":[],"output":{"name":"t"}}],[5,"sample","","Randomly sample up to `amount` elements from an iterator.",null,{"inputs":[{"name":"r"},{"name":"i"},{"name":"usize"}],"output":{"name":"vec"}}],[0,"distributions","","Sampling from random distributions.",null,null],[3,"RandSample","rand::distributions","A wrapper for generating types that implement `Rand` via the\n`Sample` & `IndependentSample` traits.",null,null],[3,"Weighted","","A value with a particular weight for use with `WeightedChoice`.",null,null],[12,"weight","","The numerical weight of this item",0,null],[12,"item","","The actual item which is being weighted",0,null],[3,"WeightedChoice","","A distribution that selects from a finite collection of weighted items.",null,null],[0,"range","","Generating numbers between two others.",null,null],[3,"Range","rand::distributions::range","Sample values uniformly between two bounds.",null,null],[8,"SampleRange","","The helper trait for types that have a sensible way to sample\nuniformly between two values. This should not be used directly,\nand is only to facilitate `Range`.",null,null],[10,"construct_range","","Construct the `Range` object that `sample_range`\nrequires. This should not ever be called directly, only via\n`Range::new`, which will check that `low < high`, so this\nfunction doesn't have to repeat the check.",1,{"inputs":[{"name":"samplerange"},{"name":"self"},{"name":"self"}],"output":{"name":"range"}}],[10,"sample_range","","Sample a value from the given `Range` with the given `Rng` as\na source of randomness.",1,{"inputs":[{"name":"samplerange"},{"name":"range"},{"name":"r"}],"output":{"name":"self"}}],[11,"clone","","",2,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"new","","Create a new `Range` instance that samples uniformly from\n`[low, high)`. Panics if `low >= high`.",2,{"inputs":[{"name":"range"},{"name":"x"},{"name":"x"}],"output":{"name":"range"}}],[11,"sample","","",2,{"inputs":[{"name":"range"},{"name":"r"}],"output":{"name":"sup"}}],[11,"ind_sample","","",2,{"inputs":[{"name":"range"},{"name":"r"}],"output":{"name":"sup"}}],[0,"gamma","rand::distributions","The Gamma and derived distributions.",null,null],[3,"Gamma","rand::distributions::gamma","The Gamma distribution `Gamma(shape, scale)` distribution.",null,null],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the degrees of\nfreedom.",null,null],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",null,null],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the degrees of\nfreedom.",null,null],[11,"clone","","",3,{"inputs":[{"name":"gamma"}],"output":{"name":"gamma"}}],[11,"new","","Construct an object representing the `Gamma(shape, scale)`\ndistribution.",3,{"inputs":[{"name":"gamma"},{"name":"f64"},{"name":"f64"}],"output":{"name":"gamma"}}],[11,"sample","","",3,{"inputs":[{"name":"gamma"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",3,{"inputs":[{"name":"gamma"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",4,{"inputs":[{"name":"chisquared"}],"output":{"name":"chisquared"}}],[11,"new","","Create a new chi-squared distribution with degrees-of-freedom\n`k`. Panics if `k < 0`.",4,{"inputs":[{"name":"chisquared"},{"name":"f64"}],"output":{"name":"chisquared"}}],[11,"sample","","",4,{"inputs":[{"name":"chisquared"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",4,{"inputs":[{"name":"chisquared"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",5,{"inputs":[{"name":"fisherf"}],"output":{"name":"fisherf"}}],[11,"new","","Create a new `FisherF` distribution, with the given\nparameter. Panics if either `m` or `n` are not positive.",5,{"inputs":[{"name":"fisherf"},{"name":"f64"},{"name":"f64"}],"output":{"name":"fisherf"}}],[11,"sample","","",5,{"inputs":[{"name":"fisherf"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",5,{"inputs":[{"name":"fisherf"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",6,{"inputs":[{"name":"studentt"}],"output":{"name":"studentt"}}],[11,"new","","Create a new Student t distribution with `n` degrees of\nfreedom. Panics if `n <= 0`.",6,{"inputs":[{"name":"studentt"},{"name":"f64"}],"output":{"name":"studentt"}}],[11,"sample","","",6,{"inputs":[{"name":"studentt"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",6,{"inputs":[{"name":"studentt"},{"name":"r"}],"output":{"name":"f64"}}],[0,"normal","rand::distributions","The normal and derived distributions.",null,null],[3,"StandardNormal","rand::distributions::normal","A wrapper around an `f64` to generate N(0, 1) random numbers\n(a.k.a.  a standard normal, or Gaussian).",null,null],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",null,null],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",null,null],[11,"clone","","",7,{"inputs":[{"name":"standardnormal"}],"output":{"name":"standardnormal"}}],[11,"rand","","",7,{"inputs":[{"name":"standardnormal"},{"name":"r"}],"output":{"name":"standardnormal"}}],[11,"clone","","",8,{"inputs":[{"name":"normal"}],"output":{"name":"normal"}}],[11,"new","","Construct a new `Normal` distribution with the given mean and\nstandard deviation.",8,{"inputs":[{"name":"normal"},{"name":"f64"},{"name":"f64"}],"output":{"name":"normal"}}],[11,"sample","","",8,{"inputs":[{"name":"normal"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",8,{"inputs":[{"name":"normal"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",9,{"inputs":[{"name":"lognormal"}],"output":{"name":"lognormal"}}],[11,"new","","Construct a new `LogNormal` distribution with the given mean\nand standard deviation.",9,{"inputs":[{"name":"lognormal"},{"name":"f64"},{"name":"f64"}],"output":{"name":"lognormal"}}],[11,"sample","","",9,{"inputs":[{"name":"lognormal"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",9,{"inputs":[{"name":"lognormal"},{"name":"r"}],"output":{"name":"f64"}}],[0,"exponential","rand::distributions","The exponential distribution.",null,null],[3,"Exp1","rand::distributions::exponential","A wrapper around an `f64` to generate Exp(1) random numbers.",null,null],[3,"Exp","","The exponential distribution `Exp(lambda)`.",null,null],[11,"clone","","",10,{"inputs":[{"name":"exp1"}],"output":{"name":"exp1"}}],[11,"rand","","",10,{"inputs":[{"name":"exp1"},{"name":"r"}],"output":{"name":"exp1"}}],[11,"clone","","",11,{"inputs":[{"name":"exp"}],"output":{"name":"exp"}}],[11,"new","","Construct a new `Exp` with the given shape parameter\n`lambda`. Panics if `lambda <= 0`.",11,{"inputs":[{"name":"exp"},{"name":"f64"}],"output":{"name":"exp"}}],[11,"sample","","",11,{"inputs":[{"name":"exp"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",11,{"inputs":[{"name":"exp"},{"name":"r"}],"output":{"name":"f64"}}],[8,"Sample","rand::distributions","Types that can be used to create a random instance of `Support`.",null,null],[10,"sample","","Generate a random value of `Support`, using `rng` as the\nsource of randomness.",12,{"inputs":[{"name":"sample"},{"name":"r"}],"output":{"name":"support"}}],[8,"IndependentSample","","`Sample`s that do not require keeping track of state.",null,null],[10,"ind_sample","","Generate a random value.",13,{"inputs":[{"name":"independentsample"},{"name":"r"}],"output":{"name":"support"}}],[11,"clone","","",14,{"inputs":[{"name":"randsample"}],"output":{"name":"self"}}],[11,"sample","","",14,{"inputs":[{"name":"randsample"},{"name":"r"}],"output":{"name":"sup"}}],[11,"ind_sample","","",14,{"inputs":[{"name":"randsample"},{"name":"r"}],"output":{"name":"sup"}}],[11,"new","","",14,{"inputs":[{"name":"randsample"}],"output":{"name":"randsample"}}],[11,"clone","","",0,{"inputs":[{"name":"weighted"}],"output":{"name":"weighted"}}],[11,"new","","Create a new `WeightedChoice`.",15,null],[11,"sample","","",15,{"inputs":[{"name":"weightedchoice"},{"name":"r"}],"output":{"name":"t"}}],[11,"ind_sample","","",15,{"inputs":[{"name":"weightedchoice"},{"name":"r"}],"output":{"name":"t"}}],[0,"isaac","rand","The ISAAC random number generator.",null,null],[3,"IsaacRng","rand::isaac","A random number generator that uses the ISAAC algorithm[1].",null,null],[3,"Isaac64Rng","","A random number generator that uses ISAAC-64[1], the 64-bit\nvariant of the ISAAC algorithm.",null,null],[11,"new_unseeded","","Create an ISAAC random number generator using the default\nfixed seed.",16,{"inputs":[{"name":"isaacrng"}],"output":{"name":"isaacrng"}}],[11,"clone","","",16,{"inputs":[{"name":"isaacrng"}],"output":{"name":"isaacrng"}}],[11,"next_u32","","",16,{"inputs":[{"name":"isaacrng"}],"output":{"name":"u32"}}],[11,"reseed","","",16,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can\nbe any length, although the maximum number of elements used is\n256 and any more will be silently ignored. A generator\nconstructed with a given seed will generate the same sequence\nof values as all other generators constructed with that seed.",16,null],[11,"rand","","",16,{"inputs":[{"name":"isaacrng"},{"name":"r"}],"output":{"name":"isaacrng"}}],[11,"new_unseeded","","Create a 64-bit ISAAC random number generator using the\ndefault fixed seed.",17,{"inputs":[{"name":"isaac64rng"}],"output":{"name":"isaac64rng"}}],[11,"clone","","",17,{"inputs":[{"name":"isaac64rng"}],"output":{"name":"isaac64rng"}}],[11,"next_u32","","",17,{"inputs":[{"name":"isaac64rng"}],"output":{"name":"u32"}}],[11,"next_u64","","",17,{"inputs":[{"name":"isaac64rng"}],"output":{"name":"u64"}}],[11,"reseed","","",17,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can\nbe any length, although the maximum number of elements used is\n256 and any more will be silently ignored. A generator\nconstructed with a given seed will generate the same sequence\nof values as all other generators constructed with that seed.",17,null],[11,"rand","","",17,{"inputs":[{"name":"isaac64rng"},{"name":"r"}],"output":{"name":"isaac64rng"}}],[0,"chacha","rand","The ChaCha random number generator.",null,null],[3,"ChaChaRng","rand::chacha","A random number generator that uses the ChaCha20 algorithm [1].",null,null],[11,"clone","","",18,{"inputs":[{"name":"chacharng"}],"output":{"name":"chacharng"}}],[11,"new_unseeded","","Create an ChaCha random number generator using the default\nfixed key of 8 zero words.",18,{"inputs":[{"name":"chacharng"}],"output":{"name":"chacharng"}}],[11,"set_counter","","Sets the internal 128-bit ChaCha counter to\na user-provided value. This permits jumping\narbitrarily ahead (or backwards) in the pseudorandom stream.",18,{"inputs":[{"name":"chacharng"},{"name":"u64"},{"name":"u64"}],"output":null}],[11,"next_u32","","",18,{"inputs":[{"name":"chacharng"}],"output":{"name":"u32"}}],[11,"reseed","","",18,null],[11,"from_seed","","Create a ChaCha generator from a seed,\nobtained from a variable-length u32 array.\nOnly up to 8 words are used; if less than 8\nwords are used, the remaining are set to zero.",18,null],[11,"rand","","",18,{"inputs":[{"name":"chacharng"},{"name":"r"}],"output":{"name":"chacharng"}}],[0,"reseeding","rand","A wrapper around another RNG that reseeds it after it\ngenerates a certain number of random bytes.",null,null],[3,"ReseedingRng","rand::reseeding","A wrapper around any RNG which reseeds the underlying RNG after it\nhas generated a certain number of random bytes.",null,null],[12,"reseeder","","Controls the behaviour when reseeding the RNG.",19,null],[3,"ReseedWithDefault","","Reseed an RNG using a `Default` instance. This reseeds by\nreplacing the RNG with the result of a `Default::default` call.",null,null],[8,"Reseeder","","Something that can be used to reseed an RNG via `ReseedingRng`.",null,null],[10,"reseed","","Reseed the given RNG.",20,{"inputs":[{"name":"reseeder"},{"name":"r"}],"output":null}],[11,"new","","Create a new `ReseedingRng` with the given parameters.",19,{"inputs":[{"name":"reseedingrng"},{"name":"r"},{"name":"u64"},{"name":"rsdr"}],"output":{"name":"reseedingrng"}}],[11,"reseed_if_necessary","","Reseed the internal RNG if the number of bytes that have been\ngenerated exceed the threshold.",19,{"inputs":[{"name":"reseedingrng"}],"output":null}],[11,"next_u32","","",19,{"inputs":[{"name":"reseedingrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",19,{"inputs":[{"name":"reseedingrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",19,null],[11,"reseed","","",19,null],[11,"from_seed","","Create a new `ReseedingRng` from the given reseeder and\nseed. This uses a default value for `generation_threshold`.",19,null],[11,"clone","","",21,{"inputs":[{"name":"reseedwithdefault"}],"output":{"name":"reseedwithdefault"}}],[11,"reseed","","",21,{"inputs":[{"name":"reseedwithdefault"},{"name":"r"}],"output":null}],[11,"default","","",21,{"inputs":[{"name":"reseedwithdefault"}],"output":{"name":"reseedwithdefault"}}],[11,"rand","rand","",22,{"inputs":[{"name":"open01"},{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",23,{"inputs":[{"name":"closed01"},{"name":"r"}],"output":{"name":"closed01"}}],[11,"rand","","",22,{"inputs":[{"name":"open01"},{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",23,{"inputs":[{"name":"closed01"},{"name":"r"}],"output":{"name":"closed01"}}],[11,"rand","core::option","",24,{"inputs":[{"name":"option"},{"name":"r"}],"output":{"name":"option"}}],[0,"os","rand","Interfaces to the operating system provided random number\ngenerators.",null,null],[3,"OsRng","rand::os","A random number generator that retrieves randomness straight from\nthe operating system. Platform sources:",null,null],[11,"new","","Create a new `OsRng`.",25,{"inputs":[{"name":"osrng"}],"output":{"name":"result"}}],[11,"next_u32","","",25,{"inputs":[{"name":"osrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",25,{"inputs":[{"name":"osrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",25,null],[0,"read","rand","A wrapper around any Read to treat it as an RNG.",null,null],[3,"ReadRng","rand::read","An RNG that reads random bytes straight from a `Read`. This will\nwork best with an infinite reader, but this is not required.",null,null],[11,"new","","Create a new `ReadRng` from a `Read`.",26,{"inputs":[{"name":"readrng"},{"name":"r"}],"output":{"name":"readrng"}}],[11,"next_u32","","",26,{"inputs":[{"name":"readrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",26,{"inputs":[{"name":"readrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",26,null],[8,"Rand","rand","A type that can be randomly generated using an `Rng`.",null,null],[10,"rand","","Generates a random instance of this type using the specified source of\nrandomness.",27,{"inputs":[{"name":"rand"},{"name":"r"}],"output":{"name":"self"}}],[8,"Rng","","A random number generator.",null,null],[10,"next_u32","","Return the next random u32.",28,{"inputs":[{"name":"rng"}],"output":{"name":"u32"}}],[11,"next_u64","","Return the next random u64.",28,{"inputs":[{"name":"rng"}],"output":{"name":"u64"}}],[11,"next_f32","","Return the next random f32 selected from the half-open\ninterval `[0, 1)`.",28,{"inputs":[{"name":"rng"}],"output":{"name":"f32"}}],[11,"next_f64","","Return the next random f64 selected from the half-open\ninterval `[0, 1)`.",28,{"inputs":[{"name":"rng"}],"output":{"name":"f64"}}],[11,"fill_bytes","","Fill `dest` with random data.",28,null],[11,"gen","","Return a random value of a `Rand` type.",28,{"inputs":[{"name":"rng"}],"output":{"name":"t"}}],[11,"gen_iter","","Return an iterator that will yield an infinite number of randomly\ngenerated items.",28,{"inputs":[{"name":"rng"}],"output":{"name":"generator"}}],[11,"gen_range","","Generate a random value in the range [`low`, `high`).",28,{"inputs":[{"name":"rng"},{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[11,"gen_weighted_bool","","Return a bool with a 1 in n chance of true",28,{"inputs":[{"name":"rng"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"gen_ascii_chars","","Return an iterator of random characters from the set A-Z,a-z,0-9.",28,{"inputs":[{"name":"rng"}],"output":{"name":"asciigenerator"}}],[11,"choose","","Return a random element from `values`.",28,null],[11,"shuffle","","Shuffle a mutable slice in place.",28,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded to produce\nthe same stream of randomness multiple times.",null,null],[10,"reseed","","Reseed an RNG with the given seed.",29,{"inputs":[{"name":"seedablerng"},{"name":"seed"}],"output":null}],[10,"from_seed","","Create a new RNG with the given seed.",29,{"inputs":[{"name":"seedablerng"},{"name":"seed"}],"output":{"name":"self"}}],[11,"next_u32","alloc::boxed","",30,{"inputs":[{"name":"box"}],"output":{"name":"u32"}}],[11,"next_u64","","",30,{"inputs":[{"name":"box"}],"output":{"name":"u64"}}],[11,"next_f32","","",30,{"inputs":[{"name":"box"}],"output":{"name":"f32"}}],[11,"next_f64","","",30,{"inputs":[{"name":"box"}],"output":{"name":"f64"}}],[11,"fill_bytes","","",30,null],[11,"next","rand","",31,{"inputs":[{"name":"generator"}],"output":{"name":"option"}}],[11,"next","","",32,{"inputs":[{"name":"asciigenerator"}],"output":{"name":"option"}}],[11,"clone","","",33,{"inputs":[{"name":"xorshiftrng"}],"output":{"name":"xorshiftrng"}}],[11,"new_unseeded","","Creates a new XorShiftRng instance which is not seeded.",33,{"inputs":[{"name":"xorshiftrng"}],"output":{"name":"xorshiftrng"}}],[11,"next_u32","","",33,{"inputs":[{"name":"xorshiftrng"}],"output":{"name":"u32"}}],[11,"reseed","","Reseed an XorShiftRng. This will panic if `seed` is entirely 0.",33,null],[11,"from_seed","","Create a new XorShiftRng. This will panic if `seed` is entirely 0.",33,null],[11,"rand","","",33,{"inputs":[{"name":"xorshiftrng"},{"name":"r"}],"output":{"name":"xorshiftrng"}}],[11,"clone","","",34,{"inputs":[{"name":"stdrng"}],"output":{"name":"stdrng"}}],[11,"new","","Create a randomly seeded instance of `StdRng`.",34,{"inputs":[{"name":"stdrng"}],"output":{"name":"result"}}],[11,"next_u32","","",34,{"inputs":[{"name":"stdrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",34,{"inputs":[{"name":"stdrng"}],"output":{"name":"u64"}}],[11,"reseed","","",34,null],[11,"from_seed","","",34,null],[11,"clone","","",35,{"inputs":[{"name":"threadrng"}],"output":{"name":"threadrng"}}],[11,"next_u32","","",35,{"inputs":[{"name":"threadrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",35,{"inputs":[{"name":"threadrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",35,null]],"paths":[[3,"Weighted"],[8,"SampleRange"],[3,"Range"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"StandardNormal"],[3,"Normal"],[3,"LogNormal"],[3,"Exp1"],[3,"Exp"],[8,"Sample"],[8,"IndependentSample"],[3,"RandSample"],[3,"WeightedChoice"],[3,"IsaacRng"],[3,"Isaac64Rng"],[3,"ChaChaRng"],[3,"ReseedingRng"],[8,"Reseeder"],[3,"ReseedWithDefault"],[3,"Open01"],[3,"Closed01"],[4,"Option"],[3,"OsRng"],[3,"ReadRng"],[8,"Rand"],[8,"Rng"],[8,"SeedableRng"],[3,"Box"],[3,"Generator"],[3,"AsciiGenerator"],[3,"XorShiftRng"],[3,"StdRng"],[3,"ThreadRng"]]};
searchIndex['advapi32'] = {"items":[],"paths":[]};
searchIndex['winapi'] = {"items":[],"paths":[]};
searchIndex['libc'] = {"items":[[0,"","libc","Bindings for the C standard library and other platform libraries",null,null],[0,"types","","",null,null],[0,"common","libc::types","",null,null],[0,"c95","libc::types::common","",null,null],[4,"c_void","libc::types::common::c95","Type used to construct void pointers for use with C.",null,null],[13,"__variant1","","",0,null],[13,"__variant2","","",0,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[0,"c99","libc::types::common","",null,null],[6,"int8_t","libc::types::common::c99","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[0,"posix88","libc::types::common","",null,null],[4,"DIR","libc::types::common::posix88","",null,null],[4,"dirent_t","","",null,null],[0,"os","libc::types","",null,null],[0,"common","libc::types::os","",null,null],[0,"posix01","libc::types::os::common","",null,null],[3,"glob_t","libc::types::os::common::posix01","",null,null],[12,"gl_pathc","","",1,null],[12,"__unused1","","",1,null],[12,"gl_offs","","",1,null],[12,"__unused2","","",1,null],[12,"gl_pathv","","",1,null],[12,"__unused3","","",1,null],[12,"__unused4","","",1,null],[12,"__unused5","","",1,null],[12,"__unused6","","",1,null],[12,"__unused7","","",1,null],[12,"__unused8","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[4,"timezone","","",null,null],[6,"pthread_t","","",null,null],[6,"rlim_t","","",null,null],[6,"sighandler_t","","",null,null],[11,"clone","","",1,{"inputs":[{"name":"glob_t"}],"output":{"name":"glob_t"}}],[11,"clone","","",2,{"inputs":[{"name":"timeval"}],"output":{"name":"timeval"}}],[11,"clone","","",3,{"inputs":[{"name":"timespec"}],"output":{"name":"timespec"}}],[11,"clone","","",4,{"inputs":[{"name":"rlimit"}],"output":{"name":"rlimit"}}],[0,"bsd43","libc::types::os::common","",null,null],[3,"rusage","libc::types::os::common::bsd43","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[11,"clone","","",5,{"inputs":[{"name":"rusage"}],"output":{"name":"rusage"}}],[0,"bsd44","libc::types::os::common","",null,null],[3,"sockaddr","libc::types::os::common::bsd44","",null,null],[12,"sa_len","","",6,null],[12,"sa_family","","",6,null],[12,"sa_data","","",6,null],[3,"sockaddr_storage","","",null,null],[12,"ss_len","","",7,null],[12,"ss_family","","",7,null],[12,"__ss_pad1","","",7,null],[12,"__ss_align","","",7,null],[12,"__ss_pad2","","",7,null],[3,"sockaddr_in","","",null,null],[12,"sin_len","","",8,null],[12,"sin_family","","",8,null],[12,"sin_port","","",8,null],[12,"sin_addr","","",8,null],[12,"sin_zero","","",8,null],[3,"in_addr","","",null,null],[12,"s_addr","","",9,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_len","","",10,null],[12,"sin6_family","","",10,null],[12,"sin6_port","","",10,null],[12,"sin6_flowinfo","","",10,null],[12,"sin6_addr","","",10,null],[12,"sin6_scope_id","","",10,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",11,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",12,null],[12,"imr_interface","","",12,null],[3,"ip6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",13,null],[12,"ipv6mr_interface","","",13,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",14,null],[12,"ai_family","","",14,null],[12,"ai_socktype","","",14,null],[12,"ai_protocol","","",14,null],[12,"ai_addrlen","","",14,null],[12,"ai_canonname","","",14,null],[12,"ai_addr","","",14,null],[12,"ai_next","","",14,null],[3,"sockaddr_un","","",null,null],[12,"sun_len","","",15,null],[12,"sun_family","","",15,null],[12,"sun_path","","",15,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",16,null],[12,"ifa_name","","",16,null],[12,"ifa_flags","","",16,null],[12,"ifa_addr","","",16,null],[12,"ifa_netmask","","",16,null],[12,"ifa_dstaddr","","",16,null],[12,"ifa_data","","",16,null],[6,"socklen_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"in_port_t","","",null,null],[6,"in_addr_t","","",null,null],[11,"clone","","",6,{"inputs":[{"name":"sockaddr"}],"output":{"name":"sockaddr"}}],[11,"clone","","",7,{"inputs":[{"name":"sockaddr_storage"}],"output":{"name":"sockaddr_storage"}}],[11,"clone","","",8,{"inputs":[{"name":"sockaddr_in"}],"output":{"name":"sockaddr_in"}}],[11,"clone","","",9,{"inputs":[{"name":"in_addr"}],"output":{"name":"in_addr"}}],[11,"clone","","",10,{"inputs":[{"name":"sockaddr_in6"}],"output":{"name":"sockaddr_in6"}}],[11,"clone","","",11,{"inputs":[{"name":"in6_addr"}],"output":{"name":"in6_addr"}}],[11,"clone","","",12,{"inputs":[{"name":"ip_mreq"}],"output":{"name":"ip_mreq"}}],[11,"clone","","",13,{"inputs":[{"name":"ip6_mreq"}],"output":{"name":"ip6_mreq"}}],[11,"clone","","",14,{"inputs":[{"name":"addrinfo"}],"output":{"name":"addrinfo"}}],[11,"clone","","",15,{"inputs":[{"name":"sockaddr_un"}],"output":{"name":"sockaddr_un"}}],[11,"clone","","",16,{"inputs":[{"name":"ifaddrs"}],"output":{"name":"ifaddrs"}}],[0,"arch","libc::types::os","",null,null],[0,"c95","libc::types::os::arch","",null,null],[6,"c_char","libc::types::os::arch::c95","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"wchar_t","","",null,null],[0,"c99","libc::types::os::arch","",null,null],[6,"c_longlong","libc::types::os::arch::c99","",null,null],[6,"c_ulonglong","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[0,"posix88","libc::types::os::arch","",null,null],[6,"off_t","libc::types::os::arch::posix88","",null,null],[6,"dev_t","","",null,null],[6,"ino_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"useconds_t","","",null,null],[6,"mode_t","","",null,null],[6,"ssize_t","","",null,null],[0,"posix01","libc::types::os::arch","",null,null],[3,"stat","libc::types::os::arch::posix01","",null,null],[12,"st_dev","","",17,null],[12,"st_mode","","",17,null],[12,"st_nlink","","",17,null],[12,"st_ino","","",17,null],[12,"st_uid","","",17,null],[12,"st_gid","","",17,null],[12,"st_rdev","","",17,null],[12,"st_atime","","",17,null],[12,"st_atime_nsec","","",17,null],[12,"st_mtime","","",17,null],[12,"st_mtime_nsec","","",17,null],[12,"st_ctime","","",17,null],[12,"st_ctime_nsec","","",17,null],[12,"st_birthtime","","",17,null],[12,"st_birthtime_nsec","","",17,null],[12,"st_size","","",17,null],[12,"st_blocks","","",17,null],[12,"st_blksize","","",17,null],[12,"st_flags","","",17,null],[12,"st_gen","","",17,null],[12,"st_lspare","","",17,null],[12,"st_qspare","","",17,null],[3,"utimbuf","","",null,null],[12,"actime","","",18,null],[12,"modtime","","",18,null],[3,"pthread_attr_t","","",null,null],[12,"__sig","","",19,null],[12,"__opaque","","",19,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"blkcnt_t","","",null,null],[11,"clone","","",17,{"inputs":[{"name":"stat"}],"output":{"name":"stat"}}],[11,"clone","","",18,{"inputs":[{"name":"utimbuf"}],"output":{"name":"utimbuf"}}],[11,"clone","","",19,{"inputs":[{"name":"pthread_attr_t"}],"output":{"name":"pthread_attr_t"}}],[0,"extra","libc::types::os::arch","",null,null],[3,"mach_timebase_info","libc::types::os::arch::extra","",null,null],[12,"numer","","",20,null],[12,"denom","","",20,null],[6,"mach_timebase_info_data_t","","",null,null],[11,"clone","","",20,{"inputs":[{"name":"mach_timebase_info"}],"output":{"name":"mach_timebase_info"}}],[0,"consts","libc","",null,null],[0,"os","libc::consts","",null,null],[0,"c95","libc::consts::os","",null,null],[17,"EXIT_FAILURE","libc::consts::os::c95","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"BUFSIZ","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"TMP_MAX","","",null,null],[0,"posix88","libc::consts::os","",null,null],[17,"O_RDONLY","libc::consts::os::posix88","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_TRUNC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_KILLPAGES","","",null,null],[17,"MS_DEACTIVATE","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EAGAIN","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"EALREADY","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"ENOTSUP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"ELOOP","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"EPROCLIM","","",null,null],[17,"EUSERS","","",null,null],[17,"EDQUOT","","",null,null],[17,"ESTALE","","",null,null],[17,"EREMOTE","","",null,null],[17,"EBADRPC","","",null,null],[17,"ERPCMISMATCH","","",null,null],[17,"EPROGUNAVAIL","","",null,null],[17,"EPROGMISMATCH","","",null,null],[17,"EPROCUNAVAIL","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"EFTYPE","","",null,null],[17,"EAUTH","","",null,null],[17,"ENEEDAUTH","","",null,null],[17,"EPWROFF","","",null,null],[17,"EDEVERR","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"EBADEXEC","","",null,null],[17,"EBADARCH","","",null,null],[17,"ESHLIBVERS","","",null,null],[17,"EBADMACHO","","",null,null],[17,"ECANCELED","","",null,null],[17,"EIDRM","","",null,null],[17,"ENOMSG","","",null,null],[17,"EILSEQ","","",null,null],[17,"ENOATTR","","",null,null],[17,"EBADMSG","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"ENODATA","","",null,null],[17,"ENOLINK","","",null,null],[17,"ENOSR","","",null,null],[17,"ENOSTR","","",null,null],[17,"EPROTO","","",null,null],[17,"ETIME","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"ENOPOLICY","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"EQFULL","","",null,null],[17,"ELAST","","",null,null],[0,"posix01","libc::consts::os","",null,null],[17,"F_DUPFD","libc::consts::os::posix01","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"SIGTRAP","","",null,null],[17,"SIG_IGN","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIM_NLIMITS","","",null,null],[17,"_RLIMIT_POSIX_FLAG","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[0,"bsd44","libc::consts::os","",null,null],[17,"MADV_NORMAL","libc::consts::os::bsd44","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_FREE","","",null,null],[17,"MADV_ZERO_WIRED_PAGES","","",null,null],[17,"MADV_FREE_REUSABLE","","",null,null],[17,"MADV_FREE_REUSE","","",null,null],[17,"MADV_CAN_REUSE","","",null,null],[17,"MINCORE_INCORE","","",null,null],[17,"MINCORE_REFERENCED","","",null,null],[17,"MINCORE_MODIFIED","","",null,null],[17,"MINCORE_REFERENCED_OTHER","","",null,null],[17,"MINCORE_MODIFIED_OTHER","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_KEEPALIVE","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_USELOOPBACK","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[0,"extra","libc::consts::os","",null,null],[17,"O_DSYNC","libc::consts::os::extra","",null,null],[17,"O_SYNC","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"F_GETPATH","","",null,null],[17,"F_FULLFSYNC","","",null,null],[17,"MAP_COPY","","",null,null],[17,"MAP_RENAME","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_NOEXTEND","","",null,null],[17,"MAP_HASSEMAPHORE","","",null,null],[17,"MAP_NOCACHE","","",null,null],[17,"MAP_JIT","","",null,null],[17,"MAP_STACK","","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"SO_NREAD","","",null,null],[17,"SO_NKE","","",null,null],[17,"SO_NOSIGPIPE","","",null,null],[17,"SO_NOADDRERR","","",null,null],[17,"SO_NWRITE","","",null,null],[17,"SO_DONTTRUNC","","",null,null],[17,"SO_WANTMORE","","",null,null],[17,"SO_WANTOOBFLAG","","",null,null],[17,"PATH_MAX","","",null,null],[0,"sysconf","libc::consts::os","",null,null],[17,"_SC_ARG_MAX","libc::consts::os::sysconf","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_NPROCESSORS_CONF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_2_PBS","","",null,null],[17,"_SC_2_PBS_ACCOUNTING","","",null,null],[17,"_SC_2_PBS_CHECKPOINT","","",null,null],[17,"_SC_2_PBS_LOCATE","","",null,null],[17,"_SC_2_PBS_MESSAGE","","",null,null],[17,"_SC_2_PBS_TRACK","","",null,null],[17,"_SC_ADVISORY_INFO","","",null,null],[17,"_SC_BARRIERS","","",null,null],[17,"_SC_CLOCK_SELECTION","","",null,null],[17,"_SC_CPUTIME","","",null,null],[17,"_SC_FILE_LOCKING","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"_SC_MONOTONIC_CLOCK","","",null,null],[17,"_SC_READER_WRITER_LOCKS","","",null,null],[17,"_SC_REGEXP","","",null,null],[17,"_SC_SHELL","","",null,null],[17,"_SC_SPAWN","","",null,null],[17,"_SC_SPIN_LOCKS","","",null,null],[17,"_SC_SPORADIC_SERVER","","",null,null],[17,"_SC_THREAD_CPUTIME","","",null,null],[17,"_SC_THREAD_SPORADIC_SERVER","","",null,null],[17,"_SC_TIMEOUTS","","",null,null],[17,"_SC_TRACE","","",null,null],[17,"_SC_TRACE_EVENT_FILTER","","",null,null],[17,"_SC_TRACE_INHERIT","","",null,null],[17,"_SC_TRACE_LOG","","",null,null],[17,"_SC_TYPED_MEMORY_OBJECTS","","",null,null],[17,"_SC_V6_ILP32_OFF32","","",null,null],[17,"_SC_V6_ILP32_OFFBIG","","",null,null],[17,"_SC_V6_LP64_OFF64","","",null,null],[17,"_SC_V6_LPBIG_OFFBIG","","",null,null],[17,"_SC_IPV6","","",null,null],[17,"_SC_RAW_SOCKETS","","",null,null],[17,"_SC_SYMLOOP_MAX","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_XOPEN_STREAMS","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LP64_OFF64","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_SS_REPL_MAX","","",null,null],[17,"_SC_TRACE_EVENT_NAME_MAX","","",null,null],[17,"_SC_TRACE_NAME_MAX","","",null,null],[17,"_SC_TRACE_SYS_MAX","","",null,null],[17,"_SC_TRACE_USER_EVENT_MAX","","",null,null],[17,"_SC_PASS_MAX","","",null,null],[0,"funcs","libc","",null,null],[0,"c95","libc::funcs","",null,null],[0,"ctype","libc::funcs::c95","",null,null],[5,"isalnum","libc::funcs::c95::ctype","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[0,"stdio","libc::funcs::c95","",null,null],[5,"fopen","libc::funcs::c95::stdio","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[0,"stdlib","libc::funcs::c95","",null,null],[5,"abs","libc::funcs::c95::stdlib","",null,null],[5,"labs","","",null,null],[5,"atof","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"exit","","Exits the running program in a possibly dangerous manner.",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[0,"string","libc::funcs::c95","",null,null],[5,"strcpy","libc::funcs::c95::string","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"memcmp","","",null,null],[5,"memchr","","",null,null],[0,"posix88","libc::funcs","",null,null],[0,"stat_","libc::funcs::posix88","",null,null],[5,"chmod","libc::funcs::posix88::stat_","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"mkfifo","","",null,null],[5,"stat","","",null,null],[0,"stdio","libc::funcs::posix88","",null,null],[5,"popen","libc::funcs::posix88::stdio","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[0,"fcntl","libc::funcs::posix88","",null,null],[5,"open","libc::funcs::posix88::fcntl","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[0,"dirent","libc::funcs::posix88","",null,null],[5,"opendir","libc::funcs::posix88::dirent","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[0,"unistd","libc::funcs::posix88","",null,null],[5,"access","libc::funcs::posix88::unistd","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"chown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"getsid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"usleep","","",null,null],[5,"nanosleep","","",null,null],[5,"sysconf","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"utime","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[0,"signal","libc::funcs::posix88","",null,null],[5,"kill","libc::funcs::posix88::signal","",null,null],[0,"mman","libc::funcs::posix88","",null,null],[5,"mlock","libc::funcs::posix88::mman","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mprotect","","",null,null],[5,"msync","","",null,null],[5,"shm_open","","",null,null],[5,"shm_unlink","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[0,"net","libc::funcs::posix88","",null,null],[5,"if_nametoindex","libc::funcs::posix88::net","",null,null],[0,"posix01","libc::funcs","",null,null],[0,"stat_","libc::funcs::posix01","",null,null],[5,"lstat","libc::funcs::posix01::stat_","",null,null],[0,"unistd","libc::funcs::posix01","",null,null],[5,"readlink","libc::funcs::posix01::unistd","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"putenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[0,"signal","libc::funcs::posix01","",null,null],[5,"signal","libc::funcs::posix01::signal","",null,null],[0,"glob","libc::funcs::posix01","",null,null],[5,"glob","libc::funcs::posix01::glob","",null,null],[5,"globfree","","",null,null],[0,"mman","libc::funcs::posix01","",null,null],[5,"posix_madvise","libc::funcs::posix01::mman","",null,null],[0,"resource","libc::funcs::posix01","",null,null],[5,"getrlimit","libc::funcs::posix01::resource","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[0,"bsd43","libc::funcs","",null,null],[5,"socket","libc::funcs::bsd43","",null,null],[5,"connect","","",null,null],[5,"bind","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"recv","","",null,null],[5,"send","","",null,null],[5,"recvfrom","","",null,null],[5,"sendto","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"shutdown","","",null,null],[0,"bsd44","libc::funcs","",null,null],[5,"ioctl","libc::funcs::bsd44","",null,null],[5,"sysctl","","",null,null],[5,"sysctlbyname","","",null,null],[5,"sysctlnametomib","","",null,null],[5,"getdtablesize","","",null,null],[5,"madvise","","",null,null],[5,"mincore","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[0,"extra","libc::funcs","",null,null],[5,"_NSGetExecutablePath","libc::funcs::extra","",null,null]],"paths":[[4,"c_void"],[3,"glob_t"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"sockaddr"],[3,"sockaddr_storage"],[3,"sockaddr_in"],[3,"in_addr"],[3,"sockaddr_in6"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ip6_mreq"],[3,"addrinfo"],[3,"sockaddr_un"],[3,"ifaddrs"],[3,"stat"],[3,"utimbuf"],[3,"pthread_attr_t"],[3,"mach_timebase_info"]]};
initSearch(searchIndex);
